var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__11294 = x == null ? null : x;
  if(p[goog.typeOf(x__11294)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__11295__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__11295 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11295__delegate.call(this, array, i, idxs)
    };
    G__11295.cljs$lang$maxFixedArity = 2;
    G__11295.cljs$lang$applyTo = function(arglist__11296) {
      var array = cljs.core.first(arglist__11296);
      var i = cljs.core.first(cljs.core.next(arglist__11296));
      var idxs = cljs.core.rest(cljs.core.next(arglist__11296));
      return G__11295__delegate(array, i, idxs)
    };
    G__11295.cljs$lang$arity$variadic = G__11295__delegate;
    return G__11295
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____11381 = this$;
      if(and__3822__auto____11381) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____11381
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____11382 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11383 = cljs.core._invoke[goog.typeOf(x__2363__auto____11382)];
        if(or__3824__auto____11383) {
          return or__3824__auto____11383
        }else {
          var or__3824__auto____11384 = cljs.core._invoke["_"];
          if(or__3824__auto____11384) {
            return or__3824__auto____11384
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____11385 = this$;
      if(and__3822__auto____11385) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____11385
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____11386 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11387 = cljs.core._invoke[goog.typeOf(x__2363__auto____11386)];
        if(or__3824__auto____11387) {
          return or__3824__auto____11387
        }else {
          var or__3824__auto____11388 = cljs.core._invoke["_"];
          if(or__3824__auto____11388) {
            return or__3824__auto____11388
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____11389 = this$;
      if(and__3822__auto____11389) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____11389
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____11390 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11391 = cljs.core._invoke[goog.typeOf(x__2363__auto____11390)];
        if(or__3824__auto____11391) {
          return or__3824__auto____11391
        }else {
          var or__3824__auto____11392 = cljs.core._invoke["_"];
          if(or__3824__auto____11392) {
            return or__3824__auto____11392
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____11393 = this$;
      if(and__3822__auto____11393) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____11393
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____11394 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11395 = cljs.core._invoke[goog.typeOf(x__2363__auto____11394)];
        if(or__3824__auto____11395) {
          return or__3824__auto____11395
        }else {
          var or__3824__auto____11396 = cljs.core._invoke["_"];
          if(or__3824__auto____11396) {
            return or__3824__auto____11396
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____11397 = this$;
      if(and__3822__auto____11397) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____11397
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____11398 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11399 = cljs.core._invoke[goog.typeOf(x__2363__auto____11398)];
        if(or__3824__auto____11399) {
          return or__3824__auto____11399
        }else {
          var or__3824__auto____11400 = cljs.core._invoke["_"];
          if(or__3824__auto____11400) {
            return or__3824__auto____11400
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____11401 = this$;
      if(and__3822__auto____11401) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____11401
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____11402 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11403 = cljs.core._invoke[goog.typeOf(x__2363__auto____11402)];
        if(or__3824__auto____11403) {
          return or__3824__auto____11403
        }else {
          var or__3824__auto____11404 = cljs.core._invoke["_"];
          if(or__3824__auto____11404) {
            return or__3824__auto____11404
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____11405 = this$;
      if(and__3822__auto____11405) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____11405
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____11406 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11407 = cljs.core._invoke[goog.typeOf(x__2363__auto____11406)];
        if(or__3824__auto____11407) {
          return or__3824__auto____11407
        }else {
          var or__3824__auto____11408 = cljs.core._invoke["_"];
          if(or__3824__auto____11408) {
            return or__3824__auto____11408
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____11409 = this$;
      if(and__3822__auto____11409) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____11409
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____11410 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11411 = cljs.core._invoke[goog.typeOf(x__2363__auto____11410)];
        if(or__3824__auto____11411) {
          return or__3824__auto____11411
        }else {
          var or__3824__auto____11412 = cljs.core._invoke["_"];
          if(or__3824__auto____11412) {
            return or__3824__auto____11412
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____11413 = this$;
      if(and__3822__auto____11413) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____11413
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____11414 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11415 = cljs.core._invoke[goog.typeOf(x__2363__auto____11414)];
        if(or__3824__auto____11415) {
          return or__3824__auto____11415
        }else {
          var or__3824__auto____11416 = cljs.core._invoke["_"];
          if(or__3824__auto____11416) {
            return or__3824__auto____11416
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____11417 = this$;
      if(and__3822__auto____11417) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____11417
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____11418 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11419 = cljs.core._invoke[goog.typeOf(x__2363__auto____11418)];
        if(or__3824__auto____11419) {
          return or__3824__auto____11419
        }else {
          var or__3824__auto____11420 = cljs.core._invoke["_"];
          if(or__3824__auto____11420) {
            return or__3824__auto____11420
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____11421 = this$;
      if(and__3822__auto____11421) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____11421
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____11422 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11423 = cljs.core._invoke[goog.typeOf(x__2363__auto____11422)];
        if(or__3824__auto____11423) {
          return or__3824__auto____11423
        }else {
          var or__3824__auto____11424 = cljs.core._invoke["_"];
          if(or__3824__auto____11424) {
            return or__3824__auto____11424
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____11425 = this$;
      if(and__3822__auto____11425) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____11425
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____11426 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11427 = cljs.core._invoke[goog.typeOf(x__2363__auto____11426)];
        if(or__3824__auto____11427) {
          return or__3824__auto____11427
        }else {
          var or__3824__auto____11428 = cljs.core._invoke["_"];
          if(or__3824__auto____11428) {
            return or__3824__auto____11428
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____11429 = this$;
      if(and__3822__auto____11429) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____11429
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____11430 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11431 = cljs.core._invoke[goog.typeOf(x__2363__auto____11430)];
        if(or__3824__auto____11431) {
          return or__3824__auto____11431
        }else {
          var or__3824__auto____11432 = cljs.core._invoke["_"];
          if(or__3824__auto____11432) {
            return or__3824__auto____11432
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____11433 = this$;
      if(and__3822__auto____11433) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____11433
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____11434 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11435 = cljs.core._invoke[goog.typeOf(x__2363__auto____11434)];
        if(or__3824__auto____11435) {
          return or__3824__auto____11435
        }else {
          var or__3824__auto____11436 = cljs.core._invoke["_"];
          if(or__3824__auto____11436) {
            return or__3824__auto____11436
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____11437 = this$;
      if(and__3822__auto____11437) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____11437
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____11438 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11439 = cljs.core._invoke[goog.typeOf(x__2363__auto____11438)];
        if(or__3824__auto____11439) {
          return or__3824__auto____11439
        }else {
          var or__3824__auto____11440 = cljs.core._invoke["_"];
          if(or__3824__auto____11440) {
            return or__3824__auto____11440
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____11441 = this$;
      if(and__3822__auto____11441) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____11441
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____11442 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11443 = cljs.core._invoke[goog.typeOf(x__2363__auto____11442)];
        if(or__3824__auto____11443) {
          return or__3824__auto____11443
        }else {
          var or__3824__auto____11444 = cljs.core._invoke["_"];
          if(or__3824__auto____11444) {
            return or__3824__auto____11444
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____11445 = this$;
      if(and__3822__auto____11445) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____11445
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____11446 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11447 = cljs.core._invoke[goog.typeOf(x__2363__auto____11446)];
        if(or__3824__auto____11447) {
          return or__3824__auto____11447
        }else {
          var or__3824__auto____11448 = cljs.core._invoke["_"];
          if(or__3824__auto____11448) {
            return or__3824__auto____11448
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____11449 = this$;
      if(and__3822__auto____11449) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____11449
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____11450 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11451 = cljs.core._invoke[goog.typeOf(x__2363__auto____11450)];
        if(or__3824__auto____11451) {
          return or__3824__auto____11451
        }else {
          var or__3824__auto____11452 = cljs.core._invoke["_"];
          if(or__3824__auto____11452) {
            return or__3824__auto____11452
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____11453 = this$;
      if(and__3822__auto____11453) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____11453
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____11454 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11455 = cljs.core._invoke[goog.typeOf(x__2363__auto____11454)];
        if(or__3824__auto____11455) {
          return or__3824__auto____11455
        }else {
          var or__3824__auto____11456 = cljs.core._invoke["_"];
          if(or__3824__auto____11456) {
            return or__3824__auto____11456
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____11457 = this$;
      if(and__3822__auto____11457) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____11457
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____11458 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11459 = cljs.core._invoke[goog.typeOf(x__2363__auto____11458)];
        if(or__3824__auto____11459) {
          return or__3824__auto____11459
        }else {
          var or__3824__auto____11460 = cljs.core._invoke["_"];
          if(or__3824__auto____11460) {
            return or__3824__auto____11460
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____11461 = this$;
      if(and__3822__auto____11461) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____11461
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____11462 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11463 = cljs.core._invoke[goog.typeOf(x__2363__auto____11462)];
        if(or__3824__auto____11463) {
          return or__3824__auto____11463
        }else {
          var or__3824__auto____11464 = cljs.core._invoke["_"];
          if(or__3824__auto____11464) {
            return or__3824__auto____11464
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____11469 = coll;
    if(and__3822__auto____11469) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____11469
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____11470 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11471 = cljs.core._count[goog.typeOf(x__2363__auto____11470)];
      if(or__3824__auto____11471) {
        return or__3824__auto____11471
      }else {
        var or__3824__auto____11472 = cljs.core._count["_"];
        if(or__3824__auto____11472) {
          return or__3824__auto____11472
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____11477 = coll;
    if(and__3822__auto____11477) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____11477
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____11478 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11479 = cljs.core._empty[goog.typeOf(x__2363__auto____11478)];
      if(or__3824__auto____11479) {
        return or__3824__auto____11479
      }else {
        var or__3824__auto____11480 = cljs.core._empty["_"];
        if(or__3824__auto____11480) {
          return or__3824__auto____11480
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____11485 = coll;
    if(and__3822__auto____11485) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____11485
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____11486 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11487 = cljs.core._conj[goog.typeOf(x__2363__auto____11486)];
      if(or__3824__auto____11487) {
        return or__3824__auto____11487
      }else {
        var or__3824__auto____11488 = cljs.core._conj["_"];
        if(or__3824__auto____11488) {
          return or__3824__auto____11488
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____11497 = coll;
      if(and__3822__auto____11497) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____11497
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____11498 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11499 = cljs.core._nth[goog.typeOf(x__2363__auto____11498)];
        if(or__3824__auto____11499) {
          return or__3824__auto____11499
        }else {
          var or__3824__auto____11500 = cljs.core._nth["_"];
          if(or__3824__auto____11500) {
            return or__3824__auto____11500
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____11501 = coll;
      if(and__3822__auto____11501) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____11501
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____11502 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11503 = cljs.core._nth[goog.typeOf(x__2363__auto____11502)];
        if(or__3824__auto____11503) {
          return or__3824__auto____11503
        }else {
          var or__3824__auto____11504 = cljs.core._nth["_"];
          if(or__3824__auto____11504) {
            return or__3824__auto____11504
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____11509 = coll;
    if(and__3822__auto____11509) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____11509
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____11510 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11511 = cljs.core._first[goog.typeOf(x__2363__auto____11510)];
      if(or__3824__auto____11511) {
        return or__3824__auto____11511
      }else {
        var or__3824__auto____11512 = cljs.core._first["_"];
        if(or__3824__auto____11512) {
          return or__3824__auto____11512
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____11517 = coll;
    if(and__3822__auto____11517) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____11517
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____11518 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11519 = cljs.core._rest[goog.typeOf(x__2363__auto____11518)];
      if(or__3824__auto____11519) {
        return or__3824__auto____11519
      }else {
        var or__3824__auto____11520 = cljs.core._rest["_"];
        if(or__3824__auto____11520) {
          return or__3824__auto____11520
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____11525 = coll;
    if(and__3822__auto____11525) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____11525
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____11526 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11527 = cljs.core._next[goog.typeOf(x__2363__auto____11526)];
      if(or__3824__auto____11527) {
        return or__3824__auto____11527
      }else {
        var or__3824__auto____11528 = cljs.core._next["_"];
        if(or__3824__auto____11528) {
          return or__3824__auto____11528
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____11537 = o;
      if(and__3822__auto____11537) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____11537
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____11538 = o == null ? null : o;
      return function() {
        var or__3824__auto____11539 = cljs.core._lookup[goog.typeOf(x__2363__auto____11538)];
        if(or__3824__auto____11539) {
          return or__3824__auto____11539
        }else {
          var or__3824__auto____11540 = cljs.core._lookup["_"];
          if(or__3824__auto____11540) {
            return or__3824__auto____11540
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____11541 = o;
      if(and__3822__auto____11541) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____11541
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____11542 = o == null ? null : o;
      return function() {
        var or__3824__auto____11543 = cljs.core._lookup[goog.typeOf(x__2363__auto____11542)];
        if(or__3824__auto____11543) {
          return or__3824__auto____11543
        }else {
          var or__3824__auto____11544 = cljs.core._lookup["_"];
          if(or__3824__auto____11544) {
            return or__3824__auto____11544
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____11549 = coll;
    if(and__3822__auto____11549) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____11549
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____11550 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11551 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____11550)];
      if(or__3824__auto____11551) {
        return or__3824__auto____11551
      }else {
        var or__3824__auto____11552 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____11552) {
          return or__3824__auto____11552
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____11557 = coll;
    if(and__3822__auto____11557) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____11557
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____11558 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11559 = cljs.core._assoc[goog.typeOf(x__2363__auto____11558)];
      if(or__3824__auto____11559) {
        return or__3824__auto____11559
      }else {
        var or__3824__auto____11560 = cljs.core._assoc["_"];
        if(or__3824__auto____11560) {
          return or__3824__auto____11560
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____11565 = coll;
    if(and__3822__auto____11565) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____11565
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____11566 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11567 = cljs.core._dissoc[goog.typeOf(x__2363__auto____11566)];
      if(or__3824__auto____11567) {
        return or__3824__auto____11567
      }else {
        var or__3824__auto____11568 = cljs.core._dissoc["_"];
        if(or__3824__auto____11568) {
          return or__3824__auto____11568
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____11573 = coll;
    if(and__3822__auto____11573) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____11573
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____11574 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11575 = cljs.core._key[goog.typeOf(x__2363__auto____11574)];
      if(or__3824__auto____11575) {
        return or__3824__auto____11575
      }else {
        var or__3824__auto____11576 = cljs.core._key["_"];
        if(or__3824__auto____11576) {
          return or__3824__auto____11576
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____11581 = coll;
    if(and__3822__auto____11581) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____11581
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____11582 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11583 = cljs.core._val[goog.typeOf(x__2363__auto____11582)];
      if(or__3824__auto____11583) {
        return or__3824__auto____11583
      }else {
        var or__3824__auto____11584 = cljs.core._val["_"];
        if(or__3824__auto____11584) {
          return or__3824__auto____11584
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____11589 = coll;
    if(and__3822__auto____11589) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____11589
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____11590 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11591 = cljs.core._disjoin[goog.typeOf(x__2363__auto____11590)];
      if(or__3824__auto____11591) {
        return or__3824__auto____11591
      }else {
        var or__3824__auto____11592 = cljs.core._disjoin["_"];
        if(or__3824__auto____11592) {
          return or__3824__auto____11592
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____11597 = coll;
    if(and__3822__auto____11597) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____11597
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____11598 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11599 = cljs.core._peek[goog.typeOf(x__2363__auto____11598)];
      if(or__3824__auto____11599) {
        return or__3824__auto____11599
      }else {
        var or__3824__auto____11600 = cljs.core._peek["_"];
        if(or__3824__auto____11600) {
          return or__3824__auto____11600
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____11605 = coll;
    if(and__3822__auto____11605) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____11605
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____11606 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11607 = cljs.core._pop[goog.typeOf(x__2363__auto____11606)];
      if(or__3824__auto____11607) {
        return or__3824__auto____11607
      }else {
        var or__3824__auto____11608 = cljs.core._pop["_"];
        if(or__3824__auto____11608) {
          return or__3824__auto____11608
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____11613 = coll;
    if(and__3822__auto____11613) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____11613
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____11614 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11615 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____11614)];
      if(or__3824__auto____11615) {
        return or__3824__auto____11615
      }else {
        var or__3824__auto____11616 = cljs.core._assoc_n["_"];
        if(or__3824__auto____11616) {
          return or__3824__auto____11616
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____11621 = o;
    if(and__3822__auto____11621) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____11621
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____11622 = o == null ? null : o;
    return function() {
      var or__3824__auto____11623 = cljs.core._deref[goog.typeOf(x__2363__auto____11622)];
      if(or__3824__auto____11623) {
        return or__3824__auto____11623
      }else {
        var or__3824__auto____11624 = cljs.core._deref["_"];
        if(or__3824__auto____11624) {
          return or__3824__auto____11624
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____11629 = o;
    if(and__3822__auto____11629) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____11629
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____11630 = o == null ? null : o;
    return function() {
      var or__3824__auto____11631 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____11630)];
      if(or__3824__auto____11631) {
        return or__3824__auto____11631
      }else {
        var or__3824__auto____11632 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____11632) {
          return or__3824__auto____11632
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____11637 = o;
    if(and__3822__auto____11637) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____11637
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____11638 = o == null ? null : o;
    return function() {
      var or__3824__auto____11639 = cljs.core._meta[goog.typeOf(x__2363__auto____11638)];
      if(or__3824__auto____11639) {
        return or__3824__auto____11639
      }else {
        var or__3824__auto____11640 = cljs.core._meta["_"];
        if(or__3824__auto____11640) {
          return or__3824__auto____11640
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____11645 = o;
    if(and__3822__auto____11645) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____11645
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____11646 = o == null ? null : o;
    return function() {
      var or__3824__auto____11647 = cljs.core._with_meta[goog.typeOf(x__2363__auto____11646)];
      if(or__3824__auto____11647) {
        return or__3824__auto____11647
      }else {
        var or__3824__auto____11648 = cljs.core._with_meta["_"];
        if(or__3824__auto____11648) {
          return or__3824__auto____11648
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____11657 = coll;
      if(and__3822__auto____11657) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____11657
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____11658 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11659 = cljs.core._reduce[goog.typeOf(x__2363__auto____11658)];
        if(or__3824__auto____11659) {
          return or__3824__auto____11659
        }else {
          var or__3824__auto____11660 = cljs.core._reduce["_"];
          if(or__3824__auto____11660) {
            return or__3824__auto____11660
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____11661 = coll;
      if(and__3822__auto____11661) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____11661
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____11662 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____11663 = cljs.core._reduce[goog.typeOf(x__2363__auto____11662)];
        if(or__3824__auto____11663) {
          return or__3824__auto____11663
        }else {
          var or__3824__auto____11664 = cljs.core._reduce["_"];
          if(or__3824__auto____11664) {
            return or__3824__auto____11664
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____11669 = coll;
    if(and__3822__auto____11669) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____11669
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____11670 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11671 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____11670)];
      if(or__3824__auto____11671) {
        return or__3824__auto____11671
      }else {
        var or__3824__auto____11672 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____11672) {
          return or__3824__auto____11672
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____11677 = o;
    if(and__3822__auto____11677) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____11677
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____11678 = o == null ? null : o;
    return function() {
      var or__3824__auto____11679 = cljs.core._equiv[goog.typeOf(x__2363__auto____11678)];
      if(or__3824__auto____11679) {
        return or__3824__auto____11679
      }else {
        var or__3824__auto____11680 = cljs.core._equiv["_"];
        if(or__3824__auto____11680) {
          return or__3824__auto____11680
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____11685 = o;
    if(and__3822__auto____11685) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____11685
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____11686 = o == null ? null : o;
    return function() {
      var or__3824__auto____11687 = cljs.core._hash[goog.typeOf(x__2363__auto____11686)];
      if(or__3824__auto____11687) {
        return or__3824__auto____11687
      }else {
        var or__3824__auto____11688 = cljs.core._hash["_"];
        if(or__3824__auto____11688) {
          return or__3824__auto____11688
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____11693 = o;
    if(and__3822__auto____11693) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____11693
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____11694 = o == null ? null : o;
    return function() {
      var or__3824__auto____11695 = cljs.core._seq[goog.typeOf(x__2363__auto____11694)];
      if(or__3824__auto____11695) {
        return or__3824__auto____11695
      }else {
        var or__3824__auto____11696 = cljs.core._seq["_"];
        if(or__3824__auto____11696) {
          return or__3824__auto____11696
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____11701 = coll;
    if(and__3822__auto____11701) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____11701
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____11702 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11703 = cljs.core._rseq[goog.typeOf(x__2363__auto____11702)];
      if(or__3824__auto____11703) {
        return or__3824__auto____11703
      }else {
        var or__3824__auto____11704 = cljs.core._rseq["_"];
        if(or__3824__auto____11704) {
          return or__3824__auto____11704
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11709 = coll;
    if(and__3822__auto____11709) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____11709
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____11710 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11711 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____11710)];
      if(or__3824__auto____11711) {
        return or__3824__auto____11711
      }else {
        var or__3824__auto____11712 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____11712) {
          return or__3824__auto____11712
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____11717 = coll;
    if(and__3822__auto____11717) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____11717
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____11718 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11719 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____11718)];
      if(or__3824__auto____11719) {
        return or__3824__auto____11719
      }else {
        var or__3824__auto____11720 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____11720) {
          return or__3824__auto____11720
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____11725 = coll;
    if(and__3822__auto____11725) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____11725
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____11726 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11727 = cljs.core._entry_key[goog.typeOf(x__2363__auto____11726)];
      if(or__3824__auto____11727) {
        return or__3824__auto____11727
      }else {
        var or__3824__auto____11728 = cljs.core._entry_key["_"];
        if(or__3824__auto____11728) {
          return or__3824__auto____11728
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____11733 = coll;
    if(and__3822__auto____11733) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____11733
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____11734 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11735 = cljs.core._comparator[goog.typeOf(x__2363__auto____11734)];
      if(or__3824__auto____11735) {
        return or__3824__auto____11735
      }else {
        var or__3824__auto____11736 = cljs.core._comparator["_"];
        if(or__3824__auto____11736) {
          return or__3824__auto____11736
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____11741 = o;
    if(and__3822__auto____11741) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____11741
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____11742 = o == null ? null : o;
    return function() {
      var or__3824__auto____11743 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____11742)];
      if(or__3824__auto____11743) {
        return or__3824__auto____11743
      }else {
        var or__3824__auto____11744 = cljs.core._pr_seq["_"];
        if(or__3824__auto____11744) {
          return or__3824__auto____11744
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____11749 = d;
    if(and__3822__auto____11749) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____11749
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____11750 = d == null ? null : d;
    return function() {
      var or__3824__auto____11751 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____11750)];
      if(or__3824__auto____11751) {
        return or__3824__auto____11751
      }else {
        var or__3824__auto____11752 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____11752) {
          return or__3824__auto____11752
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____11757 = this$;
    if(and__3822__auto____11757) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____11757
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____11758 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11759 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____11758)];
      if(or__3824__auto____11759) {
        return or__3824__auto____11759
      }else {
        var or__3824__auto____11760 = cljs.core._notify_watches["_"];
        if(or__3824__auto____11760) {
          return or__3824__auto____11760
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____11765 = this$;
    if(and__3822__auto____11765) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____11765
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____11766 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11767 = cljs.core._add_watch[goog.typeOf(x__2363__auto____11766)];
      if(or__3824__auto____11767) {
        return or__3824__auto____11767
      }else {
        var or__3824__auto____11768 = cljs.core._add_watch["_"];
        if(or__3824__auto____11768) {
          return or__3824__auto____11768
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____11773 = this$;
    if(and__3822__auto____11773) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____11773
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____11774 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11775 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____11774)];
      if(or__3824__auto____11775) {
        return or__3824__auto____11775
      }else {
        var or__3824__auto____11776 = cljs.core._remove_watch["_"];
        if(or__3824__auto____11776) {
          return or__3824__auto____11776
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____11781 = coll;
    if(and__3822__auto____11781) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____11781
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____11782 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11783 = cljs.core._as_transient[goog.typeOf(x__2363__auto____11782)];
      if(or__3824__auto____11783) {
        return or__3824__auto____11783
      }else {
        var or__3824__auto____11784 = cljs.core._as_transient["_"];
        if(or__3824__auto____11784) {
          return or__3824__auto____11784
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____11789 = tcoll;
    if(and__3822__auto____11789) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____11789
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____11790 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11791 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____11790)];
      if(or__3824__auto____11791) {
        return or__3824__auto____11791
      }else {
        var or__3824__auto____11792 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____11792) {
          return or__3824__auto____11792
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11797 = tcoll;
    if(and__3822__auto____11797) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____11797
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____11798 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11799 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____11798)];
      if(or__3824__auto____11799) {
        return or__3824__auto____11799
      }else {
        var or__3824__auto____11800 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____11800) {
          return or__3824__auto____11800
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____11805 = tcoll;
    if(and__3822__auto____11805) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____11805
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____11806 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11807 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____11806)];
      if(or__3824__auto____11807) {
        return or__3824__auto____11807
      }else {
        var or__3824__auto____11808 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____11808) {
          return or__3824__auto____11808
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____11813 = tcoll;
    if(and__3822__auto____11813) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____11813
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____11814 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11815 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____11814)];
      if(or__3824__auto____11815) {
        return or__3824__auto____11815
      }else {
        var or__3824__auto____11816 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____11816) {
          return or__3824__auto____11816
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____11821 = tcoll;
    if(and__3822__auto____11821) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____11821
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____11822 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11823 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____11822)];
      if(or__3824__auto____11823) {
        return or__3824__auto____11823
      }else {
        var or__3824__auto____11824 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____11824) {
          return or__3824__auto____11824
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____11829 = tcoll;
    if(and__3822__auto____11829) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____11829
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____11830 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11831 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____11830)];
      if(or__3824__auto____11831) {
        return or__3824__auto____11831
      }else {
        var or__3824__auto____11832 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____11832) {
          return or__3824__auto____11832
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____11837 = tcoll;
    if(and__3822__auto____11837) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____11837
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____11838 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____11839 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____11838)];
      if(or__3824__auto____11839) {
        return or__3824__auto____11839
      }else {
        var or__3824__auto____11840 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____11840) {
          return or__3824__auto____11840
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____11845 = x;
    if(and__3822__auto____11845) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____11845
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____11846 = x == null ? null : x;
    return function() {
      var or__3824__auto____11847 = cljs.core._compare[goog.typeOf(x__2363__auto____11846)];
      if(or__3824__auto____11847) {
        return or__3824__auto____11847
      }else {
        var or__3824__auto____11848 = cljs.core._compare["_"];
        if(or__3824__auto____11848) {
          return or__3824__auto____11848
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____11853 = coll;
    if(and__3822__auto____11853) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____11853
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____11854 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11855 = cljs.core._drop_first[goog.typeOf(x__2363__auto____11854)];
      if(or__3824__auto____11855) {
        return or__3824__auto____11855
      }else {
        var or__3824__auto____11856 = cljs.core._drop_first["_"];
        if(or__3824__auto____11856) {
          return or__3824__auto____11856
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____11861 = coll;
    if(and__3822__auto____11861) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____11861
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____11862 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11863 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____11862)];
      if(or__3824__auto____11863) {
        return or__3824__auto____11863
      }else {
        var or__3824__auto____11864 = cljs.core._chunked_first["_"];
        if(or__3824__auto____11864) {
          return or__3824__auto____11864
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____11869 = coll;
    if(and__3822__auto____11869) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____11869
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____11870 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11871 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____11870)];
      if(or__3824__auto____11871) {
        return or__3824__auto____11871
      }else {
        var or__3824__auto____11872 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____11872) {
          return or__3824__auto____11872
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____11877 = coll;
    if(and__3822__auto____11877) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____11877
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____11878 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____11879 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____11878)];
      if(or__3824__auto____11879) {
        return or__3824__auto____11879
      }else {
        var or__3824__auto____11880 = cljs.core._chunked_next["_"];
        if(or__3824__auto____11880) {
          return or__3824__auto____11880
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____11882 = x === y;
    if(or__3824__auto____11882) {
      return or__3824__auto____11882
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__11883__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__11884 = y;
            var G__11885 = cljs.core.first.call(null, more);
            var G__11886 = cljs.core.next.call(null, more);
            x = G__11884;
            y = G__11885;
            more = G__11886;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__11883 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11883__delegate.call(this, x, y, more)
    };
    G__11883.cljs$lang$maxFixedArity = 2;
    G__11883.cljs$lang$applyTo = function(arglist__11887) {
      var x = cljs.core.first(arglist__11887);
      var y = cljs.core.first(cljs.core.next(arglist__11887));
      var more = cljs.core.rest(cljs.core.next(arglist__11887));
      return G__11883__delegate(x, y, more)
    };
    G__11883.cljs$lang$arity$variadic = G__11883__delegate;
    return G__11883
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__11888 = null;
  var G__11888__2 = function(o, k) {
    return null
  };
  var G__11888__3 = function(o, k, not_found) {
    return not_found
  };
  G__11888 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11888__2.call(this, o, k);
      case 3:
        return G__11888__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11888
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__11889 = null;
  var G__11889__2 = function(_, f) {
    return f.call(null)
  };
  var G__11889__3 = function(_, f, start) {
    return start
  };
  G__11889 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11889__2.call(this, _, f);
      case 3:
        return G__11889__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11889
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__11890 = null;
  var G__11890__2 = function(_, n) {
    return null
  };
  var G__11890__3 = function(_, n, not_found) {
    return not_found
  };
  G__11890 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11890__2.call(this, _, n);
      case 3:
        return G__11890__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11890
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____11891 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____11891) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____11891
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__11904 = cljs.core._count.call(null, cicoll);
    if(cnt__11904 === 0) {
      return f.call(null)
    }else {
      var val__11905 = cljs.core._nth.call(null, cicoll, 0);
      var n__11906 = 1;
      while(true) {
        if(n__11906 < cnt__11904) {
          var nval__11907 = f.call(null, val__11905, cljs.core._nth.call(null, cicoll, n__11906));
          if(cljs.core.reduced_QMARK_.call(null, nval__11907)) {
            return cljs.core.deref.call(null, nval__11907)
          }else {
            var G__11916 = nval__11907;
            var G__11917 = n__11906 + 1;
            val__11905 = G__11916;
            n__11906 = G__11917;
            continue
          }
        }else {
          return val__11905
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__11908 = cljs.core._count.call(null, cicoll);
    var val__11909 = val;
    var n__11910 = 0;
    while(true) {
      if(n__11910 < cnt__11908) {
        var nval__11911 = f.call(null, val__11909, cljs.core._nth.call(null, cicoll, n__11910));
        if(cljs.core.reduced_QMARK_.call(null, nval__11911)) {
          return cljs.core.deref.call(null, nval__11911)
        }else {
          var G__11918 = nval__11911;
          var G__11919 = n__11910 + 1;
          val__11909 = G__11918;
          n__11910 = G__11919;
          continue
        }
      }else {
        return val__11909
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__11912 = cljs.core._count.call(null, cicoll);
    var val__11913 = val;
    var n__11914 = idx;
    while(true) {
      if(n__11914 < cnt__11912) {
        var nval__11915 = f.call(null, val__11913, cljs.core._nth.call(null, cicoll, n__11914));
        if(cljs.core.reduced_QMARK_.call(null, nval__11915)) {
          return cljs.core.deref.call(null, nval__11915)
        }else {
          var G__11920 = nval__11915;
          var G__11921 = n__11914 + 1;
          val__11913 = G__11920;
          n__11914 = G__11921;
          continue
        }
      }else {
        return val__11913
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__11934 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__11935 = arr[0];
      var n__11936 = 1;
      while(true) {
        if(n__11936 < cnt__11934) {
          var nval__11937 = f.call(null, val__11935, arr[n__11936]);
          if(cljs.core.reduced_QMARK_.call(null, nval__11937)) {
            return cljs.core.deref.call(null, nval__11937)
          }else {
            var G__11946 = nval__11937;
            var G__11947 = n__11936 + 1;
            val__11935 = G__11946;
            n__11936 = G__11947;
            continue
          }
        }else {
          return val__11935
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__11938 = arr.length;
    var val__11939 = val;
    var n__11940 = 0;
    while(true) {
      if(n__11940 < cnt__11938) {
        var nval__11941 = f.call(null, val__11939, arr[n__11940]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11941)) {
          return cljs.core.deref.call(null, nval__11941)
        }else {
          var G__11948 = nval__11941;
          var G__11949 = n__11940 + 1;
          val__11939 = G__11948;
          n__11940 = G__11949;
          continue
        }
      }else {
        return val__11939
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__11942 = arr.length;
    var val__11943 = val;
    var n__11944 = idx;
    while(true) {
      if(n__11944 < cnt__11942) {
        var nval__11945 = f.call(null, val__11943, arr[n__11944]);
        if(cljs.core.reduced_QMARK_.call(null, nval__11945)) {
          return cljs.core.deref.call(null, nval__11945)
        }else {
          var G__11950 = nval__11945;
          var G__11951 = n__11944 + 1;
          val__11943 = G__11950;
          n__11944 = G__11951;
          continue
        }
      }else {
        return val__11943
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11952 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__11953 = this;
  if(this__11953.i + 1 < this__11953.a.length) {
    return new cljs.core.IndexedSeq(this__11953.a, this__11953.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11954 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11955 = this;
  var c__11956 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__11956 > 0) {
    return new cljs.core.RSeq(coll, c__11956 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__11957 = this;
  var this__11958 = this;
  return cljs.core.pr_str.call(null, this__11958)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11959 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11959.a)) {
    return cljs.core.ci_reduce.call(null, this__11959.a, f, this__11959.a[this__11959.i], this__11959.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__11959.a[this__11959.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11960 = this;
  if(cljs.core.counted_QMARK_.call(null, this__11960.a)) {
    return cljs.core.ci_reduce.call(null, this__11960.a, f, start, this__11960.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11961 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__11962 = this;
  return this__11962.a.length - this__11962.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__11963 = this;
  return this__11963.a[this__11963.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__11964 = this;
  if(this__11964.i + 1 < this__11964.a.length) {
    return new cljs.core.IndexedSeq(this__11964.a, this__11964.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11965 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11966 = this;
  var i__11967 = n + this__11966.i;
  if(i__11967 < this__11966.a.length) {
    return this__11966.a[i__11967]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11968 = this;
  var i__11969 = n + this__11968.i;
  if(i__11969 < this__11968.a.length) {
    return this__11968.a[i__11969]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__11970 = null;
  var G__11970__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__11970__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__11970 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__11970__2.call(this, array, f);
      case 3:
        return G__11970__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11970
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__11971 = null;
  var G__11971__2 = function(array, k) {
    return array[k]
  };
  var G__11971__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__11971 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11971__2.call(this, array, k);
      case 3:
        return G__11971__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11971
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__11972 = null;
  var G__11972__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__11972__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__11972 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11972__2.call(this, array, n);
      case 3:
        return G__11972__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11972
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11973 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11974 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__11975 = this;
  var this__11976 = this;
  return cljs.core.pr_str.call(null, this__11976)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11977 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11978 = this;
  return this__11978.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11979 = this;
  return cljs.core._nth.call(null, this__11979.ci, this__11979.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11980 = this;
  if(this__11980.i > 0) {
    return new cljs.core.RSeq(this__11980.ci, this__11980.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11981 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__11982 = this;
  return new cljs.core.RSeq(this__11982.ci, this__11982.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11983 = this;
  return this__11983.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11987__11988 = coll;
      if(G__11987__11988) {
        if(function() {
          var or__3824__auto____11989 = G__11987__11988.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____11989) {
            return or__3824__auto____11989
          }else {
            return G__11987__11988.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__11987__11988.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11987__11988)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__11987__11988)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__11994__11995 = coll;
      if(G__11994__11995) {
        if(function() {
          var or__3824__auto____11996 = G__11994__11995.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____11996) {
            return or__3824__auto____11996
          }else {
            return G__11994__11995.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__11994__11995.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11994__11995)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__11994__11995)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__11997 = cljs.core.seq.call(null, coll);
      if(s__11997 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__11997)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12002__12003 = coll;
      if(G__12002__12003) {
        if(function() {
          var or__3824__auto____12004 = G__12002__12003.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12004) {
            return or__3824__auto____12004
          }else {
            return G__12002__12003.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12002__12003.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12002__12003)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12002__12003)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__12005 = cljs.core.seq.call(null, coll);
      if(!(s__12005 == null)) {
        return cljs.core._rest.call(null, s__12005)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12009__12010 = coll;
      if(G__12009__12010) {
        if(function() {
          var or__3824__auto____12011 = G__12009__12010.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____12011) {
            return or__3824__auto____12011
          }else {
            return G__12009__12010.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__12009__12010.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12009__12010)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12009__12010)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__12013 = cljs.core.next.call(null, s);
    if(!(sn__12013 == null)) {
      var G__12014 = sn__12013;
      s = G__12014;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__12015__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12016 = conj.call(null, coll, x);
          var G__12017 = cljs.core.first.call(null, xs);
          var G__12018 = cljs.core.next.call(null, xs);
          coll = G__12016;
          x = G__12017;
          xs = G__12018;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12015 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12015__delegate.call(this, coll, x, xs)
    };
    G__12015.cljs$lang$maxFixedArity = 2;
    G__12015.cljs$lang$applyTo = function(arglist__12019) {
      var coll = cljs.core.first(arglist__12019);
      var x = cljs.core.first(cljs.core.next(arglist__12019));
      var xs = cljs.core.rest(cljs.core.next(arglist__12019));
      return G__12015__delegate(coll, x, xs)
    };
    G__12015.cljs$lang$arity$variadic = G__12015__delegate;
    return G__12015
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__12022 = cljs.core.seq.call(null, coll);
  var acc__12023 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__12022)) {
      return acc__12023 + cljs.core._count.call(null, s__12022)
    }else {
      var G__12024 = cljs.core.next.call(null, s__12022);
      var G__12025 = acc__12023 + 1;
      s__12022 = G__12024;
      acc__12023 = G__12025;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12032__12033 = coll;
        if(G__12032__12033) {
          if(function() {
            var or__3824__auto____12034 = G__12032__12033.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12034) {
              return or__3824__auto____12034
            }else {
              return G__12032__12033.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12032__12033.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12032__12033)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12032__12033)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12035__12036 = coll;
        if(G__12035__12036) {
          if(function() {
            var or__3824__auto____12037 = G__12035__12036.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____12037) {
              return or__3824__auto____12037
            }else {
              return G__12035__12036.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__12035__12036.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12035__12036)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12035__12036)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__12040__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__12039 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12041 = ret__12039;
          var G__12042 = cljs.core.first.call(null, kvs);
          var G__12043 = cljs.core.second.call(null, kvs);
          var G__12044 = cljs.core.nnext.call(null, kvs);
          coll = G__12041;
          k = G__12042;
          v = G__12043;
          kvs = G__12044;
          continue
        }else {
          return ret__12039
        }
        break
      }
    };
    var G__12040 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12040__delegate.call(this, coll, k, v, kvs)
    };
    G__12040.cljs$lang$maxFixedArity = 3;
    G__12040.cljs$lang$applyTo = function(arglist__12045) {
      var coll = cljs.core.first(arglist__12045);
      var k = cljs.core.first(cljs.core.next(arglist__12045));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12045)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12045)));
      return G__12040__delegate(coll, k, v, kvs)
    };
    G__12040.cljs$lang$arity$variadic = G__12040__delegate;
    return G__12040
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12048__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12047 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12049 = ret__12047;
          var G__12050 = cljs.core.first.call(null, ks);
          var G__12051 = cljs.core.next.call(null, ks);
          coll = G__12049;
          k = G__12050;
          ks = G__12051;
          continue
        }else {
          return ret__12047
        }
        break
      }
    };
    var G__12048 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12048__delegate.call(this, coll, k, ks)
    };
    G__12048.cljs$lang$maxFixedArity = 2;
    G__12048.cljs$lang$applyTo = function(arglist__12052) {
      var coll = cljs.core.first(arglist__12052);
      var k = cljs.core.first(cljs.core.next(arglist__12052));
      var ks = cljs.core.rest(cljs.core.next(arglist__12052));
      return G__12048__delegate(coll, k, ks)
    };
    G__12048.cljs$lang$arity$variadic = G__12048__delegate;
    return G__12048
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12056__12057 = o;
    if(G__12056__12057) {
      if(function() {
        var or__3824__auto____12058 = G__12056__12057.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____12058) {
          return or__3824__auto____12058
        }else {
          return G__12056__12057.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12056__12057.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12056__12057)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12056__12057)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12061__delegate = function(coll, k, ks) {
      while(true) {
        var ret__12060 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12062 = ret__12060;
          var G__12063 = cljs.core.first.call(null, ks);
          var G__12064 = cljs.core.next.call(null, ks);
          coll = G__12062;
          k = G__12063;
          ks = G__12064;
          continue
        }else {
          return ret__12060
        }
        break
      }
    };
    var G__12061 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12061__delegate.call(this, coll, k, ks)
    };
    G__12061.cljs$lang$maxFixedArity = 2;
    G__12061.cljs$lang$applyTo = function(arglist__12065) {
      var coll = cljs.core.first(arglist__12065);
      var k = cljs.core.first(cljs.core.next(arglist__12065));
      var ks = cljs.core.rest(cljs.core.next(arglist__12065));
      return G__12061__delegate(coll, k, ks)
    };
    G__12061.cljs$lang$arity$variadic = G__12061__delegate;
    return G__12061
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__12067 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__12067;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__12067
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__12069 = cljs.core.string_hash_cache[k];
  if(!(h__12069 == null)) {
    return h__12069
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____12071 = goog.isString(o);
      if(and__3822__auto____12071) {
        return check_cache
      }else {
        return and__3822__auto____12071
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12075__12076 = x;
    if(G__12075__12076) {
      if(function() {
        var or__3824__auto____12077 = G__12075__12076.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____12077) {
          return or__3824__auto____12077
        }else {
          return G__12075__12076.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12075__12076.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12075__12076)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12075__12076)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12081__12082 = x;
    if(G__12081__12082) {
      if(function() {
        var or__3824__auto____12083 = G__12081__12082.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____12083) {
          return or__3824__auto____12083
        }else {
          return G__12081__12082.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12081__12082.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12081__12082)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12081__12082)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12087__12088 = x;
  if(G__12087__12088) {
    if(function() {
      var or__3824__auto____12089 = G__12087__12088.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____12089) {
        return or__3824__auto____12089
      }else {
        return G__12087__12088.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12087__12088.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12087__12088)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12087__12088)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12093__12094 = x;
  if(G__12093__12094) {
    if(function() {
      var or__3824__auto____12095 = G__12093__12094.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____12095) {
        return or__3824__auto____12095
      }else {
        return G__12093__12094.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12093__12094.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12093__12094)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12093__12094)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12099__12100 = x;
  if(G__12099__12100) {
    if(function() {
      var or__3824__auto____12101 = G__12099__12100.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____12101) {
        return or__3824__auto____12101
      }else {
        return G__12099__12100.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12099__12100.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12099__12100)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12099__12100)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12105__12106 = x;
  if(G__12105__12106) {
    if(function() {
      var or__3824__auto____12107 = G__12105__12106.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____12107) {
        return or__3824__auto____12107
      }else {
        return G__12105__12106.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12105__12106.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12105__12106)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12105__12106)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12111__12112 = x;
  if(G__12111__12112) {
    if(function() {
      var or__3824__auto____12113 = G__12111__12112.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____12113) {
        return or__3824__auto____12113
      }else {
        return G__12111__12112.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12111__12112.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12111__12112)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12111__12112)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12117__12118 = x;
    if(G__12117__12118) {
      if(function() {
        var or__3824__auto____12119 = G__12117__12118.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____12119) {
          return or__3824__auto____12119
        }else {
          return G__12117__12118.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12117__12118.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12117__12118)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12117__12118)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12123__12124 = x;
  if(G__12123__12124) {
    if(function() {
      var or__3824__auto____12125 = G__12123__12124.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____12125) {
        return or__3824__auto____12125
      }else {
        return G__12123__12124.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12123__12124.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12123__12124)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12123__12124)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12129__12130 = x;
  if(G__12129__12130) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12131 = null;
      if(cljs.core.truth_(or__3824__auto____12131)) {
        return or__3824__auto____12131
      }else {
        return G__12129__12130.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__12129__12130.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12129__12130)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__12129__12130)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12132__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12132 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12132__delegate.call(this, keyvals)
    };
    G__12132.cljs$lang$maxFixedArity = 0;
    G__12132.cljs$lang$applyTo = function(arglist__12133) {
      var keyvals = cljs.core.seq(arglist__12133);
      return G__12132__delegate(keyvals)
    };
    G__12132.cljs$lang$arity$variadic = G__12132__delegate;
    return G__12132
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__12135 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__12135.push(key)
  });
  return keys__12135
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__12139 = i;
  var j__12140 = j;
  var len__12141 = len;
  while(true) {
    if(len__12141 === 0) {
      return to
    }else {
      to[j__12140] = from[i__12139];
      var G__12142 = i__12139 + 1;
      var G__12143 = j__12140 + 1;
      var G__12144 = len__12141 - 1;
      i__12139 = G__12142;
      j__12140 = G__12143;
      len__12141 = G__12144;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__12148 = i + (len - 1);
  var j__12149 = j + (len - 1);
  var len__12150 = len;
  while(true) {
    if(len__12150 === 0) {
      return to
    }else {
      to[j__12149] = from[i__12148];
      var G__12151 = i__12148 - 1;
      var G__12152 = j__12149 - 1;
      var G__12153 = len__12150 - 1;
      i__12148 = G__12151;
      j__12149 = G__12152;
      len__12150 = G__12153;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12157__12158 = s;
    if(G__12157__12158) {
      if(function() {
        var or__3824__auto____12159 = G__12157__12158.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____12159) {
          return or__3824__auto____12159
        }else {
          return G__12157__12158.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12157__12158.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12157__12158)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12157__12158)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12163__12164 = s;
  if(G__12163__12164) {
    if(function() {
      var or__3824__auto____12165 = G__12163__12164.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____12165) {
        return or__3824__auto____12165
      }else {
        return G__12163__12164.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12163__12164.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12163__12164)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12163__12164)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____12168 = goog.isString(x);
  if(and__3822__auto____12168) {
    return!function() {
      var or__3824__auto____12169 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____12169) {
        return or__3824__auto____12169
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____12168
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____12171 = goog.isString(x);
  if(and__3822__auto____12171) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____12171
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____12173 = goog.isString(x);
  if(and__3822__auto____12173) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____12173
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____12178 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____12178) {
    return or__3824__auto____12178
  }else {
    var G__12179__12180 = f;
    if(G__12179__12180) {
      if(function() {
        var or__3824__auto____12181 = G__12179__12180.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____12181) {
          return or__3824__auto____12181
        }else {
          return G__12179__12180.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12179__12180.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12179__12180)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12179__12180)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____12183 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____12183) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____12183
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____12186 = coll;
    if(cljs.core.truth_(and__3822__auto____12186)) {
      var and__3822__auto____12187 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____12187) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____12187
      }
    }else {
      return and__3822__auto____12186
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12196__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__12192 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__12193 = more;
        while(true) {
          var x__12194 = cljs.core.first.call(null, xs__12193);
          var etc__12195 = cljs.core.next.call(null, xs__12193);
          if(cljs.core.truth_(xs__12193)) {
            if(cljs.core.contains_QMARK_.call(null, s__12192, x__12194)) {
              return false
            }else {
              var G__12197 = cljs.core.conj.call(null, s__12192, x__12194);
              var G__12198 = etc__12195;
              s__12192 = G__12197;
              xs__12193 = G__12198;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12196 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12196__delegate.call(this, x, y, more)
    };
    G__12196.cljs$lang$maxFixedArity = 2;
    G__12196.cljs$lang$applyTo = function(arglist__12199) {
      var x = cljs.core.first(arglist__12199);
      var y = cljs.core.first(cljs.core.next(arglist__12199));
      var more = cljs.core.rest(cljs.core.next(arglist__12199));
      return G__12196__delegate(x, y, more)
    };
    G__12196.cljs$lang$arity$variadic = G__12196__delegate;
    return G__12196
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__12203__12204 = x;
            if(G__12203__12204) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____12205 = null;
                if(cljs.core.truth_(or__3824__auto____12205)) {
                  return or__3824__auto____12205
                }else {
                  return G__12203__12204.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__12203__12204.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12203__12204)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__12203__12204)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__12210 = cljs.core.count.call(null, xs);
    var yl__12211 = cljs.core.count.call(null, ys);
    if(xl__12210 < yl__12211) {
      return-1
    }else {
      if(xl__12210 > yl__12211) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__12210, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__12212 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____12213 = d__12212 === 0;
        if(and__3822__auto____12213) {
          return n + 1 < len
        }else {
          return and__3822__auto____12213
        }
      }()) {
        var G__12214 = xs;
        var G__12215 = ys;
        var G__12216 = len;
        var G__12217 = n + 1;
        xs = G__12214;
        ys = G__12215;
        len = G__12216;
        n = G__12217;
        continue
      }else {
        return d__12212
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__12219 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__12219)) {
        return r__12219
      }else {
        if(cljs.core.truth_(r__12219)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__12221 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__12221, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__12221)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____12227 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____12227) {
      var s__12228 = temp__3971__auto____12227;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__12228), cljs.core.next.call(null, s__12228))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__12229 = val;
    var coll__12230 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__12230) {
        var nval__12231 = f.call(null, val__12229, cljs.core.first.call(null, coll__12230));
        if(cljs.core.reduced_QMARK_.call(null, nval__12231)) {
          return cljs.core.deref.call(null, nval__12231)
        }else {
          var G__12232 = nval__12231;
          var G__12233 = cljs.core.next.call(null, coll__12230);
          val__12229 = G__12232;
          coll__12230 = G__12233;
          continue
        }
      }else {
        return val__12229
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__12235 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__12235);
  return cljs.core.vec.call(null, a__12235)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__12242__12243 = coll;
      if(G__12242__12243) {
        if(function() {
          var or__3824__auto____12244 = G__12242__12243.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12244) {
            return or__3824__auto____12244
          }else {
            return G__12242__12243.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12242__12243.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12242__12243)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12242__12243)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__12245__12246 = coll;
      if(G__12245__12246) {
        if(function() {
          var or__3824__auto____12247 = G__12245__12246.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____12247) {
            return or__3824__auto____12247
          }else {
            return G__12245__12246.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__12245__12246.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12245__12246)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12245__12246)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__12248 = this;
  return this__12248.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__12249__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__12249 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12249__delegate.call(this, x, y, more)
    };
    G__12249.cljs$lang$maxFixedArity = 2;
    G__12249.cljs$lang$applyTo = function(arglist__12250) {
      var x = cljs.core.first(arglist__12250);
      var y = cljs.core.first(cljs.core.next(arglist__12250));
      var more = cljs.core.rest(cljs.core.next(arglist__12250));
      return G__12249__delegate(x, y, more)
    };
    G__12249.cljs$lang$arity$variadic = G__12249__delegate;
    return G__12249
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__12251__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__12251 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12251__delegate.call(this, x, y, more)
    };
    G__12251.cljs$lang$maxFixedArity = 2;
    G__12251.cljs$lang$applyTo = function(arglist__12252) {
      var x = cljs.core.first(arglist__12252);
      var y = cljs.core.first(cljs.core.next(arglist__12252));
      var more = cljs.core.rest(cljs.core.next(arglist__12252));
      return G__12251__delegate(x, y, more)
    };
    G__12251.cljs$lang$arity$variadic = G__12251__delegate;
    return G__12251
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__12253__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__12253 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12253__delegate.call(this, x, y, more)
    };
    G__12253.cljs$lang$maxFixedArity = 2;
    G__12253.cljs$lang$applyTo = function(arglist__12254) {
      var x = cljs.core.first(arglist__12254);
      var y = cljs.core.first(cljs.core.next(arglist__12254));
      var more = cljs.core.rest(cljs.core.next(arglist__12254));
      return G__12253__delegate(x, y, more)
    };
    G__12253.cljs$lang$arity$variadic = G__12253__delegate;
    return G__12253
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__12255__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__12255 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12255__delegate.call(this, x, y, more)
    };
    G__12255.cljs$lang$maxFixedArity = 2;
    G__12255.cljs$lang$applyTo = function(arglist__12256) {
      var x = cljs.core.first(arglist__12256);
      var y = cljs.core.first(cljs.core.next(arglist__12256));
      var more = cljs.core.rest(cljs.core.next(arglist__12256));
      return G__12255__delegate(x, y, more)
    };
    G__12255.cljs$lang$arity$variadic = G__12255__delegate;
    return G__12255
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__12257__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__12258 = y;
            var G__12259 = cljs.core.first.call(null, more);
            var G__12260 = cljs.core.next.call(null, more);
            x = G__12258;
            y = G__12259;
            more = G__12260;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12257 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12257__delegate.call(this, x, y, more)
    };
    G__12257.cljs$lang$maxFixedArity = 2;
    G__12257.cljs$lang$applyTo = function(arglist__12261) {
      var x = cljs.core.first(arglist__12261);
      var y = cljs.core.first(cljs.core.next(arglist__12261));
      var more = cljs.core.rest(cljs.core.next(arglist__12261));
      return G__12257__delegate(x, y, more)
    };
    G__12257.cljs$lang$arity$variadic = G__12257__delegate;
    return G__12257
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__12262__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12263 = y;
            var G__12264 = cljs.core.first.call(null, more);
            var G__12265 = cljs.core.next.call(null, more);
            x = G__12263;
            y = G__12264;
            more = G__12265;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12262 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12262__delegate.call(this, x, y, more)
    };
    G__12262.cljs$lang$maxFixedArity = 2;
    G__12262.cljs$lang$applyTo = function(arglist__12266) {
      var x = cljs.core.first(arglist__12266);
      var y = cljs.core.first(cljs.core.next(arglist__12266));
      var more = cljs.core.rest(cljs.core.next(arglist__12266));
      return G__12262__delegate(x, y, more)
    };
    G__12262.cljs$lang$arity$variadic = G__12262__delegate;
    return G__12262
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__12267__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__12268 = y;
            var G__12269 = cljs.core.first.call(null, more);
            var G__12270 = cljs.core.next.call(null, more);
            x = G__12268;
            y = G__12269;
            more = G__12270;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12267 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12267__delegate.call(this, x, y, more)
    };
    G__12267.cljs$lang$maxFixedArity = 2;
    G__12267.cljs$lang$applyTo = function(arglist__12271) {
      var x = cljs.core.first(arglist__12271);
      var y = cljs.core.first(cljs.core.next(arglist__12271));
      var more = cljs.core.rest(cljs.core.next(arglist__12271));
      return G__12267__delegate(x, y, more)
    };
    G__12267.cljs$lang$arity$variadic = G__12267__delegate;
    return G__12267
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__12272__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12273 = y;
            var G__12274 = cljs.core.first.call(null, more);
            var G__12275 = cljs.core.next.call(null, more);
            x = G__12273;
            y = G__12274;
            more = G__12275;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12272 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12272__delegate.call(this, x, y, more)
    };
    G__12272.cljs$lang$maxFixedArity = 2;
    G__12272.cljs$lang$applyTo = function(arglist__12276) {
      var x = cljs.core.first(arglist__12276);
      var y = cljs.core.first(cljs.core.next(arglist__12276));
      var more = cljs.core.rest(cljs.core.next(arglist__12276));
      return G__12272__delegate(x, y, more)
    };
    G__12272.cljs$lang$arity$variadic = G__12272__delegate;
    return G__12272
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__12277__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__12277 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12277__delegate.call(this, x, y, more)
    };
    G__12277.cljs$lang$maxFixedArity = 2;
    G__12277.cljs$lang$applyTo = function(arglist__12278) {
      var x = cljs.core.first(arglist__12278);
      var y = cljs.core.first(cljs.core.next(arglist__12278));
      var more = cljs.core.rest(cljs.core.next(arglist__12278));
      return G__12277__delegate(x, y, more)
    };
    G__12277.cljs$lang$arity$variadic = G__12277__delegate;
    return G__12277
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__12279__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__12279 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12279__delegate.call(this, x, y, more)
    };
    G__12279.cljs$lang$maxFixedArity = 2;
    G__12279.cljs$lang$applyTo = function(arglist__12280) {
      var x = cljs.core.first(arglist__12280);
      var y = cljs.core.first(cljs.core.next(arglist__12280));
      var more = cljs.core.rest(cljs.core.next(arglist__12280));
      return G__12279__delegate(x, y, more)
    };
    G__12279.cljs$lang$arity$variadic = G__12279__delegate;
    return G__12279
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__12282 = n % d;
  return cljs.core.fix.call(null, (n - rem__12282) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__12284 = cljs.core.quot.call(null, n, d);
  return n - d * q__12284
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__12287 = v - (v >> 1 & 1431655765);
  var v__12288 = (v__12287 & 858993459) + (v__12287 >> 2 & 858993459);
  return(v__12288 + (v__12288 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__12289__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12290 = y;
            var G__12291 = cljs.core.first.call(null, more);
            var G__12292 = cljs.core.next.call(null, more);
            x = G__12290;
            y = G__12291;
            more = G__12292;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12289 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12289__delegate.call(this, x, y, more)
    };
    G__12289.cljs$lang$maxFixedArity = 2;
    G__12289.cljs$lang$applyTo = function(arglist__12293) {
      var x = cljs.core.first(arglist__12293);
      var y = cljs.core.first(cljs.core.next(arglist__12293));
      var more = cljs.core.rest(cljs.core.next(arglist__12293));
      return G__12289__delegate(x, y, more)
    };
    G__12289.cljs$lang$arity$variadic = G__12289__delegate;
    return G__12289
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__12297 = n;
  var xs__12298 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12299 = xs__12298;
      if(and__3822__auto____12299) {
        return n__12297 > 0
      }else {
        return and__3822__auto____12299
      }
    }())) {
      var G__12300 = n__12297 - 1;
      var G__12301 = cljs.core.next.call(null, xs__12298);
      n__12297 = G__12300;
      xs__12298 = G__12301;
      continue
    }else {
      return xs__12298
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__12302__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12303 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__12304 = cljs.core.next.call(null, more);
            sb = G__12303;
            more = G__12304;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__12302 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12302__delegate.call(this, x, ys)
    };
    G__12302.cljs$lang$maxFixedArity = 1;
    G__12302.cljs$lang$applyTo = function(arglist__12305) {
      var x = cljs.core.first(arglist__12305);
      var ys = cljs.core.rest(arglist__12305);
      return G__12302__delegate(x, ys)
    };
    G__12302.cljs$lang$arity$variadic = G__12302__delegate;
    return G__12302
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__12306__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12307 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__12308 = cljs.core.next.call(null, more);
            sb = G__12307;
            more = G__12308;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__12306 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12306__delegate.call(this, x, ys)
    };
    G__12306.cljs$lang$maxFixedArity = 1;
    G__12306.cljs$lang$applyTo = function(arglist__12309) {
      var x = cljs.core.first(arglist__12309);
      var ys = cljs.core.rest(arglist__12309);
      return G__12306__delegate(x, ys)
    };
    G__12306.cljs$lang$arity$variadic = G__12306__delegate;
    return G__12306
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12310) {
    var fmt = cljs.core.first(arglist__12310);
    var args = cljs.core.rest(arglist__12310);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__12313 = cljs.core.seq.call(null, x);
    var ys__12314 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__12313 == null) {
        return ys__12314 == null
      }else {
        if(ys__12314 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__12313), cljs.core.first.call(null, ys__12314))) {
            var G__12315 = cljs.core.next.call(null, xs__12313);
            var G__12316 = cljs.core.next.call(null, ys__12314);
            xs__12313 = G__12315;
            ys__12314 = G__12316;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__12317_SHARP_, p2__12318_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__12317_SHARP_, cljs.core.hash.call(null, p2__12318_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__12322 = 0;
  var s__12323 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__12323) {
      var e__12324 = cljs.core.first.call(null, s__12323);
      var G__12325 = (h__12322 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__12324)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__12324)))) % 4503599627370496;
      var G__12326 = cljs.core.next.call(null, s__12323);
      h__12322 = G__12325;
      s__12323 = G__12326;
      continue
    }else {
      return h__12322
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__12330 = 0;
  var s__12331 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__12331) {
      var e__12332 = cljs.core.first.call(null, s__12331);
      var G__12333 = (h__12330 + cljs.core.hash.call(null, e__12332)) % 4503599627370496;
      var G__12334 = cljs.core.next.call(null, s__12331);
      h__12330 = G__12333;
      s__12331 = G__12334;
      continue
    }else {
      return h__12330
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__12355__12356 = cljs.core.seq.call(null, fn_map);
  if(G__12355__12356) {
    var G__12358__12360 = cljs.core.first.call(null, G__12355__12356);
    var vec__12359__12361 = G__12358__12360;
    var key_name__12362 = cljs.core.nth.call(null, vec__12359__12361, 0, null);
    var f__12363 = cljs.core.nth.call(null, vec__12359__12361, 1, null);
    var G__12355__12364 = G__12355__12356;
    var G__12358__12365 = G__12358__12360;
    var G__12355__12366 = G__12355__12364;
    while(true) {
      var vec__12367__12368 = G__12358__12365;
      var key_name__12369 = cljs.core.nth.call(null, vec__12367__12368, 0, null);
      var f__12370 = cljs.core.nth.call(null, vec__12367__12368, 1, null);
      var G__12355__12371 = G__12355__12366;
      var str_name__12372 = cljs.core.name.call(null, key_name__12369);
      obj[str_name__12372] = f__12370;
      var temp__3974__auto____12373 = cljs.core.next.call(null, G__12355__12371);
      if(temp__3974__auto____12373) {
        var G__12355__12374 = temp__3974__auto____12373;
        var G__12375 = cljs.core.first.call(null, G__12355__12374);
        var G__12376 = G__12355__12374;
        G__12358__12365 = G__12375;
        G__12355__12366 = G__12376;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12377 = this;
  var h__2192__auto____12378 = this__12377.__hash;
  if(!(h__2192__auto____12378 == null)) {
    return h__2192__auto____12378
  }else {
    var h__2192__auto____12379 = cljs.core.hash_coll.call(null, coll);
    this__12377.__hash = h__2192__auto____12379;
    return h__2192__auto____12379
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12380 = this;
  if(this__12380.count === 1) {
    return null
  }else {
    return this__12380.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12381 = this;
  return new cljs.core.List(this__12381.meta, o, coll, this__12381.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__12382 = this;
  var this__12383 = this;
  return cljs.core.pr_str.call(null, this__12383)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12384 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12385 = this;
  return this__12385.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12386 = this;
  return this__12386.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12387 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12388 = this;
  return this__12388.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12389 = this;
  if(this__12389.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__12389.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12390 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12391 = this;
  return new cljs.core.List(meta, this__12391.first, this__12391.rest, this__12391.count, this__12391.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12392 = this;
  return this__12392.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12393 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12394 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12395 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12396 = this;
  return new cljs.core.List(this__12396.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__12397 = this;
  var this__12398 = this;
  return cljs.core.pr_str.call(null, this__12398)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12399 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12400 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__12401 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__12402 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12403 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12404 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12405 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12406 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12407 = this;
  return this__12407.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12408 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12412__12413 = coll;
  if(G__12412__12413) {
    if(function() {
      var or__3824__auto____12414 = G__12412__12413.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____12414) {
        return or__3824__auto____12414
      }else {
        return G__12412__12413.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__12412__12413.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12412__12413)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12412__12413)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__12415__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__12415 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12415__delegate.call(this, x, y, z, items)
    };
    G__12415.cljs$lang$maxFixedArity = 3;
    G__12415.cljs$lang$applyTo = function(arglist__12416) {
      var x = cljs.core.first(arglist__12416);
      var y = cljs.core.first(cljs.core.next(arglist__12416));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12416)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12416)));
      return G__12415__delegate(x, y, z, items)
    };
    G__12415.cljs$lang$arity$variadic = G__12415__delegate;
    return G__12415
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12417 = this;
  var h__2192__auto____12418 = this__12417.__hash;
  if(!(h__2192__auto____12418 == null)) {
    return h__2192__auto____12418
  }else {
    var h__2192__auto____12419 = cljs.core.hash_coll.call(null, coll);
    this__12417.__hash = h__2192__auto____12419;
    return h__2192__auto____12419
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12420 = this;
  if(this__12420.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__12420.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12421 = this;
  return new cljs.core.Cons(null, o, coll, this__12421.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__12422 = this;
  var this__12423 = this;
  return cljs.core.pr_str.call(null, this__12423)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12424 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12425 = this;
  return this__12425.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12426 = this;
  if(this__12426.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__12426.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12427 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12428 = this;
  return new cljs.core.Cons(meta, this__12428.first, this__12428.rest, this__12428.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12429 = this;
  return this__12429.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12430 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12430.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____12435 = coll == null;
    if(or__3824__auto____12435) {
      return or__3824__auto____12435
    }else {
      var G__12436__12437 = coll;
      if(G__12436__12437) {
        if(function() {
          var or__3824__auto____12438 = G__12436__12437.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____12438) {
            return or__3824__auto____12438
          }else {
            return G__12436__12437.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__12436__12437.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12436__12437)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12436__12437)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12442__12443 = x;
  if(G__12442__12443) {
    if(function() {
      var or__3824__auto____12444 = G__12442__12443.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____12444) {
        return or__3824__auto____12444
      }else {
        return G__12442__12443.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__12442__12443.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12442__12443)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12442__12443)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__12445 = null;
  var G__12445__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__12445__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__12445 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12445__2.call(this, string, f);
      case 3:
        return G__12445__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12445
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__12446 = null;
  var G__12446__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__12446__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__12446 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12446__2.call(this, string, k);
      case 3:
        return G__12446__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12446
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__12447 = null;
  var G__12447__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__12447__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__12447 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12447__2.call(this, string, n);
      case 3:
        return G__12447__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12447
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__12459 = null;
  var G__12459__2 = function(this_sym12450, coll) {
    var this__12452 = this;
    var this_sym12450__12453 = this;
    var ___12454 = this_sym12450__12453;
    if(coll == null) {
      return null
    }else {
      var strobj__12455 = coll.strobj;
      if(strobj__12455 == null) {
        return cljs.core._lookup.call(null, coll, this__12452.k, null)
      }else {
        return strobj__12455[this__12452.k]
      }
    }
  };
  var G__12459__3 = function(this_sym12451, coll, not_found) {
    var this__12452 = this;
    var this_sym12451__12456 = this;
    var ___12457 = this_sym12451__12456;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__12452.k, not_found)
    }
  };
  G__12459 = function(this_sym12451, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12459__2.call(this, this_sym12451, coll);
      case 3:
        return G__12459__3.call(this, this_sym12451, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12459
}();
cljs.core.Keyword.prototype.apply = function(this_sym12448, args12449) {
  var this__12458 = this;
  return this_sym12448.call.apply(this_sym12448, [this_sym12448].concat(args12449.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__12468 = null;
  var G__12468__2 = function(this_sym12462, coll) {
    var this_sym12462__12464 = this;
    var this__12465 = this_sym12462__12464;
    return cljs.core._lookup.call(null, coll, this__12465.toString(), null)
  };
  var G__12468__3 = function(this_sym12463, coll, not_found) {
    var this_sym12463__12466 = this;
    var this__12467 = this_sym12463__12466;
    return cljs.core._lookup.call(null, coll, this__12467.toString(), not_found)
  };
  G__12468 = function(this_sym12463, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12468__2.call(this, this_sym12463, coll);
      case 3:
        return G__12468__3.call(this, this_sym12463, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12468
}();
String.prototype.apply = function(this_sym12460, args12461) {
  return this_sym12460.call.apply(this_sym12460, [this_sym12460].concat(args12461.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__12470 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__12470
  }else {
    lazy_seq.x = x__12470.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12471 = this;
  var h__2192__auto____12472 = this__12471.__hash;
  if(!(h__2192__auto____12472 == null)) {
    return h__2192__auto____12472
  }else {
    var h__2192__auto____12473 = cljs.core.hash_coll.call(null, coll);
    this__12471.__hash = h__2192__auto____12473;
    return h__2192__auto____12473
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__12474 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12475 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__12476 = this;
  var this__12477 = this;
  return cljs.core.pr_str.call(null, this__12477)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12478 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12479 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12480 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12481 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12482 = this;
  return new cljs.core.LazySeq(meta, this__12482.realized, this__12482.x, this__12482.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12483 = this;
  return this__12483.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12484 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12484.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12485 = this;
  return this__12485.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__12486 = this;
  var ___12487 = this;
  this__12486.buf[this__12486.end] = o;
  return this__12486.end = this__12486.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__12488 = this;
  var ___12489 = this;
  var ret__12490 = new cljs.core.ArrayChunk(this__12488.buf, 0, this__12488.end);
  this__12488.buf = null;
  return ret__12490
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__12491 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__12491.arr[this__12491.off], this__12491.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__12492 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__12492.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__12493 = this;
  if(this__12493.off === this__12493.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__12493.arr, this__12493.off + 1, this__12493.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__12494 = this;
  return this__12494.arr[this__12494.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__12495 = this;
  if(function() {
    var and__3822__auto____12496 = i >= 0;
    if(and__3822__auto____12496) {
      return i < this__12495.end - this__12495.off
    }else {
      return and__3822__auto____12496
    }
  }()) {
    return this__12495.arr[this__12495.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__12497 = this;
  return this__12497.end - this__12497.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__12498 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12499 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12500 = this;
  return cljs.core._nth.call(null, this__12500.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12501 = this;
  if(cljs.core._count.call(null, this__12501.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__12501.chunk), this__12501.more, this__12501.meta)
  }else {
    if(this__12501.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__12501.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__12502 = this;
  if(this__12502.more == null) {
    return null
  }else {
    return this__12502.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12503 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__12504 = this;
  return new cljs.core.ChunkedCons(this__12504.chunk, this__12504.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12505 = this;
  return this__12505.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__12506 = this;
  return this__12506.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__12507 = this;
  if(this__12507.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__12507.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__12511__12512 = s;
    if(G__12511__12512) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____12513 = null;
        if(cljs.core.truth_(or__3824__auto____12513)) {
          return or__3824__auto____12513
        }else {
          return G__12511__12512.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__12511__12512.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__12511__12512)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__12511__12512)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__12516 = [];
  var s__12517 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__12517)) {
      ary__12516.push(cljs.core.first.call(null, s__12517));
      var G__12518 = cljs.core.next.call(null, s__12517);
      s__12517 = G__12518;
      continue
    }else {
      return ary__12516
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__12522 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__12523 = 0;
  var xs__12524 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__12524) {
      ret__12522[i__12523] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__12524));
      var G__12525 = i__12523 + 1;
      var G__12526 = cljs.core.next.call(null, xs__12524);
      i__12523 = G__12525;
      xs__12524 = G__12526;
      continue
    }else {
    }
    break
  }
  return ret__12522
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__12534 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12535 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12536 = 0;
      var s__12537 = s__12535;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12538 = s__12537;
          if(and__3822__auto____12538) {
            return i__12536 < size
          }else {
            return and__3822__auto____12538
          }
        }())) {
          a__12534[i__12536] = cljs.core.first.call(null, s__12537);
          var G__12541 = i__12536 + 1;
          var G__12542 = cljs.core.next.call(null, s__12537);
          i__12536 = G__12541;
          s__12537 = G__12542;
          continue
        }else {
          return a__12534
        }
        break
      }
    }else {
      var n__2527__auto____12539 = size;
      var i__12540 = 0;
      while(true) {
        if(i__12540 < n__2527__auto____12539) {
          a__12534[i__12540] = init_val_or_seq;
          var G__12543 = i__12540 + 1;
          i__12540 = G__12543;
          continue
        }else {
        }
        break
      }
      return a__12534
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__12551 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12552 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12553 = 0;
      var s__12554 = s__12552;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12555 = s__12554;
          if(and__3822__auto____12555) {
            return i__12553 < size
          }else {
            return and__3822__auto____12555
          }
        }())) {
          a__12551[i__12553] = cljs.core.first.call(null, s__12554);
          var G__12558 = i__12553 + 1;
          var G__12559 = cljs.core.next.call(null, s__12554);
          i__12553 = G__12558;
          s__12554 = G__12559;
          continue
        }else {
          return a__12551
        }
        break
      }
    }else {
      var n__2527__auto____12556 = size;
      var i__12557 = 0;
      while(true) {
        if(i__12557 < n__2527__auto____12556) {
          a__12551[i__12557] = init_val_or_seq;
          var G__12560 = i__12557 + 1;
          i__12557 = G__12560;
          continue
        }else {
        }
        break
      }
      return a__12551
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__12568 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__12569 = cljs.core.seq.call(null, init_val_or_seq);
      var i__12570 = 0;
      var s__12571 = s__12569;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____12572 = s__12571;
          if(and__3822__auto____12572) {
            return i__12570 < size
          }else {
            return and__3822__auto____12572
          }
        }())) {
          a__12568[i__12570] = cljs.core.first.call(null, s__12571);
          var G__12575 = i__12570 + 1;
          var G__12576 = cljs.core.next.call(null, s__12571);
          i__12570 = G__12575;
          s__12571 = G__12576;
          continue
        }else {
          return a__12568
        }
        break
      }
    }else {
      var n__2527__auto____12573 = size;
      var i__12574 = 0;
      while(true) {
        if(i__12574 < n__2527__auto____12573) {
          a__12568[i__12574] = init_val_or_seq;
          var G__12577 = i__12574 + 1;
          i__12574 = G__12577;
          continue
        }else {
        }
        break
      }
      return a__12568
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__12582 = s;
    var i__12583 = n;
    var sum__12584 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____12585 = i__12583 > 0;
        if(and__3822__auto____12585) {
          return cljs.core.seq.call(null, s__12582)
        }else {
          return and__3822__auto____12585
        }
      }())) {
        var G__12586 = cljs.core.next.call(null, s__12582);
        var G__12587 = i__12583 - 1;
        var G__12588 = sum__12584 + 1;
        s__12582 = G__12586;
        i__12583 = G__12587;
        sum__12584 = G__12588;
        continue
      }else {
        return sum__12584
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__12593 = cljs.core.seq.call(null, x);
      if(s__12593) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12593)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__12593), concat.call(null, cljs.core.chunk_rest.call(null, s__12593), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__12593), concat.call(null, cljs.core.rest.call(null, s__12593), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__12597__delegate = function(x, y, zs) {
      var cat__12596 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__12595 = cljs.core.seq.call(null, xys);
          if(xys__12595) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__12595)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__12595), cat.call(null, cljs.core.chunk_rest.call(null, xys__12595), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__12595), cat.call(null, cljs.core.rest.call(null, xys__12595), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__12596.call(null, concat.call(null, x, y), zs)
    };
    var G__12597 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12597__delegate.call(this, x, y, zs)
    };
    G__12597.cljs$lang$maxFixedArity = 2;
    G__12597.cljs$lang$applyTo = function(arglist__12598) {
      var x = cljs.core.first(arglist__12598);
      var y = cljs.core.first(cljs.core.next(arglist__12598));
      var zs = cljs.core.rest(cljs.core.next(arglist__12598));
      return G__12597__delegate(x, y, zs)
    };
    G__12597.cljs$lang$arity$variadic = G__12597__delegate;
    return G__12597
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__12599__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__12599 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12599__delegate.call(this, a, b, c, d, more)
    };
    G__12599.cljs$lang$maxFixedArity = 4;
    G__12599.cljs$lang$applyTo = function(arglist__12600) {
      var a = cljs.core.first(arglist__12600);
      var b = cljs.core.first(cljs.core.next(arglist__12600));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12600)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12600))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12600))));
      return G__12599__delegate(a, b, c, d, more)
    };
    G__12599.cljs$lang$arity$variadic = G__12599__delegate;
    return G__12599
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__12642 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__12643 = cljs.core._first.call(null, args__12642);
    var args__12644 = cljs.core._rest.call(null, args__12642);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__12643)
      }else {
        return f.call(null, a__12643)
      }
    }else {
      var b__12645 = cljs.core._first.call(null, args__12644);
      var args__12646 = cljs.core._rest.call(null, args__12644);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__12643, b__12645)
        }else {
          return f.call(null, a__12643, b__12645)
        }
      }else {
        var c__12647 = cljs.core._first.call(null, args__12646);
        var args__12648 = cljs.core._rest.call(null, args__12646);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__12643, b__12645, c__12647)
          }else {
            return f.call(null, a__12643, b__12645, c__12647)
          }
        }else {
          var d__12649 = cljs.core._first.call(null, args__12648);
          var args__12650 = cljs.core._rest.call(null, args__12648);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__12643, b__12645, c__12647, d__12649)
            }else {
              return f.call(null, a__12643, b__12645, c__12647, d__12649)
            }
          }else {
            var e__12651 = cljs.core._first.call(null, args__12650);
            var args__12652 = cljs.core._rest.call(null, args__12650);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__12643, b__12645, c__12647, d__12649, e__12651)
              }else {
                return f.call(null, a__12643, b__12645, c__12647, d__12649, e__12651)
              }
            }else {
              var f__12653 = cljs.core._first.call(null, args__12652);
              var args__12654 = cljs.core._rest.call(null, args__12652);
              if(argc === 6) {
                if(f__12653.cljs$lang$arity$6) {
                  return f__12653.cljs$lang$arity$6(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653)
                }else {
                  return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653)
                }
              }else {
                var g__12655 = cljs.core._first.call(null, args__12654);
                var args__12656 = cljs.core._rest.call(null, args__12654);
                if(argc === 7) {
                  if(f__12653.cljs$lang$arity$7) {
                    return f__12653.cljs$lang$arity$7(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655)
                  }else {
                    return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655)
                  }
                }else {
                  var h__12657 = cljs.core._first.call(null, args__12656);
                  var args__12658 = cljs.core._rest.call(null, args__12656);
                  if(argc === 8) {
                    if(f__12653.cljs$lang$arity$8) {
                      return f__12653.cljs$lang$arity$8(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657)
                    }else {
                      return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657)
                    }
                  }else {
                    var i__12659 = cljs.core._first.call(null, args__12658);
                    var args__12660 = cljs.core._rest.call(null, args__12658);
                    if(argc === 9) {
                      if(f__12653.cljs$lang$arity$9) {
                        return f__12653.cljs$lang$arity$9(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659)
                      }else {
                        return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659)
                      }
                    }else {
                      var j__12661 = cljs.core._first.call(null, args__12660);
                      var args__12662 = cljs.core._rest.call(null, args__12660);
                      if(argc === 10) {
                        if(f__12653.cljs$lang$arity$10) {
                          return f__12653.cljs$lang$arity$10(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661)
                        }else {
                          return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661)
                        }
                      }else {
                        var k__12663 = cljs.core._first.call(null, args__12662);
                        var args__12664 = cljs.core._rest.call(null, args__12662);
                        if(argc === 11) {
                          if(f__12653.cljs$lang$arity$11) {
                            return f__12653.cljs$lang$arity$11(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663)
                          }else {
                            return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663)
                          }
                        }else {
                          var l__12665 = cljs.core._first.call(null, args__12664);
                          var args__12666 = cljs.core._rest.call(null, args__12664);
                          if(argc === 12) {
                            if(f__12653.cljs$lang$arity$12) {
                              return f__12653.cljs$lang$arity$12(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665)
                            }else {
                              return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665)
                            }
                          }else {
                            var m__12667 = cljs.core._first.call(null, args__12666);
                            var args__12668 = cljs.core._rest.call(null, args__12666);
                            if(argc === 13) {
                              if(f__12653.cljs$lang$arity$13) {
                                return f__12653.cljs$lang$arity$13(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667)
                              }else {
                                return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667)
                              }
                            }else {
                              var n__12669 = cljs.core._first.call(null, args__12668);
                              var args__12670 = cljs.core._rest.call(null, args__12668);
                              if(argc === 14) {
                                if(f__12653.cljs$lang$arity$14) {
                                  return f__12653.cljs$lang$arity$14(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669)
                                }else {
                                  return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669)
                                }
                              }else {
                                var o__12671 = cljs.core._first.call(null, args__12670);
                                var args__12672 = cljs.core._rest.call(null, args__12670);
                                if(argc === 15) {
                                  if(f__12653.cljs$lang$arity$15) {
                                    return f__12653.cljs$lang$arity$15(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671)
                                  }else {
                                    return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671)
                                  }
                                }else {
                                  var p__12673 = cljs.core._first.call(null, args__12672);
                                  var args__12674 = cljs.core._rest.call(null, args__12672);
                                  if(argc === 16) {
                                    if(f__12653.cljs$lang$arity$16) {
                                      return f__12653.cljs$lang$arity$16(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673)
                                    }else {
                                      return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673)
                                    }
                                  }else {
                                    var q__12675 = cljs.core._first.call(null, args__12674);
                                    var args__12676 = cljs.core._rest.call(null, args__12674);
                                    if(argc === 17) {
                                      if(f__12653.cljs$lang$arity$17) {
                                        return f__12653.cljs$lang$arity$17(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675)
                                      }else {
                                        return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675)
                                      }
                                    }else {
                                      var r__12677 = cljs.core._first.call(null, args__12676);
                                      var args__12678 = cljs.core._rest.call(null, args__12676);
                                      if(argc === 18) {
                                        if(f__12653.cljs$lang$arity$18) {
                                          return f__12653.cljs$lang$arity$18(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677)
                                        }else {
                                          return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677)
                                        }
                                      }else {
                                        var s__12679 = cljs.core._first.call(null, args__12678);
                                        var args__12680 = cljs.core._rest.call(null, args__12678);
                                        if(argc === 19) {
                                          if(f__12653.cljs$lang$arity$19) {
                                            return f__12653.cljs$lang$arity$19(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677, s__12679)
                                          }else {
                                            return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677, s__12679)
                                          }
                                        }else {
                                          var t__12681 = cljs.core._first.call(null, args__12680);
                                          var args__12682 = cljs.core._rest.call(null, args__12680);
                                          if(argc === 20) {
                                            if(f__12653.cljs$lang$arity$20) {
                                              return f__12653.cljs$lang$arity$20(a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677, s__12679, t__12681)
                                            }else {
                                              return f__12653.call(null, a__12643, b__12645, c__12647, d__12649, e__12651, f__12653, g__12655, h__12657, i__12659, j__12661, k__12663, l__12665, m__12667, n__12669, o__12671, p__12673, q__12675, r__12677, s__12679, t__12681)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__12697 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12698 = cljs.core.bounded_count.call(null, args, fixed_arity__12697 + 1);
      if(bc__12698 <= fixed_arity__12697) {
        return cljs.core.apply_to.call(null, f, bc__12698, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__12699 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__12700 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12701 = cljs.core.bounded_count.call(null, arglist__12699, fixed_arity__12700 + 1);
      if(bc__12701 <= fixed_arity__12700) {
        return cljs.core.apply_to.call(null, f, bc__12701, arglist__12699)
      }else {
        return f.cljs$lang$applyTo(arglist__12699)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12699))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__12702 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__12703 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12704 = cljs.core.bounded_count.call(null, arglist__12702, fixed_arity__12703 + 1);
      if(bc__12704 <= fixed_arity__12703) {
        return cljs.core.apply_to.call(null, f, bc__12704, arglist__12702)
      }else {
        return f.cljs$lang$applyTo(arglist__12702)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12702))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__12705 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__12706 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__12707 = cljs.core.bounded_count.call(null, arglist__12705, fixed_arity__12706 + 1);
      if(bc__12707 <= fixed_arity__12706) {
        return cljs.core.apply_to.call(null, f, bc__12707, arglist__12705)
      }else {
        return f.cljs$lang$applyTo(arglist__12705)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__12705))
    }
  };
  var apply__6 = function() {
    var G__12711__delegate = function(f, a, b, c, d, args) {
      var arglist__12708 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__12709 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__12710 = cljs.core.bounded_count.call(null, arglist__12708, fixed_arity__12709 + 1);
        if(bc__12710 <= fixed_arity__12709) {
          return cljs.core.apply_to.call(null, f, bc__12710, arglist__12708)
        }else {
          return f.cljs$lang$applyTo(arglist__12708)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__12708))
      }
    };
    var G__12711 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12711__delegate.call(this, f, a, b, c, d, args)
    };
    G__12711.cljs$lang$maxFixedArity = 5;
    G__12711.cljs$lang$applyTo = function(arglist__12712) {
      var f = cljs.core.first(arglist__12712);
      var a = cljs.core.first(cljs.core.next(arglist__12712));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12712)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12712))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12712)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12712)))));
      return G__12711__delegate(f, a, b, c, d, args)
    };
    G__12711.cljs$lang$arity$variadic = G__12711__delegate;
    return G__12711
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__12713) {
    var obj = cljs.core.first(arglist__12713);
    var f = cljs.core.first(cljs.core.next(arglist__12713));
    var args = cljs.core.rest(cljs.core.next(arglist__12713));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__12714__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__12714 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12714__delegate.call(this, x, y, more)
    };
    G__12714.cljs$lang$maxFixedArity = 2;
    G__12714.cljs$lang$applyTo = function(arglist__12715) {
      var x = cljs.core.first(arglist__12715);
      var y = cljs.core.first(cljs.core.next(arglist__12715));
      var more = cljs.core.rest(cljs.core.next(arglist__12715));
      return G__12714__delegate(x, y, more)
    };
    G__12714.cljs$lang$arity$variadic = G__12714__delegate;
    return G__12714
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__12716 = pred;
        var G__12717 = cljs.core.next.call(null, coll);
        pred = G__12716;
        coll = G__12717;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____12719 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____12719)) {
        return or__3824__auto____12719
      }else {
        var G__12720 = pred;
        var G__12721 = cljs.core.next.call(null, coll);
        pred = G__12720;
        coll = G__12721;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12722 = null;
    var G__12722__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__12722__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__12722__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__12722__3 = function() {
      var G__12723__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__12723 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__12723__delegate.call(this, x, y, zs)
      };
      G__12723.cljs$lang$maxFixedArity = 2;
      G__12723.cljs$lang$applyTo = function(arglist__12724) {
        var x = cljs.core.first(arglist__12724);
        var y = cljs.core.first(cljs.core.next(arglist__12724));
        var zs = cljs.core.rest(cljs.core.next(arglist__12724));
        return G__12723__delegate(x, y, zs)
      };
      G__12723.cljs$lang$arity$variadic = G__12723__delegate;
      return G__12723
    }();
    G__12722 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12722__0.call(this);
        case 1:
          return G__12722__1.call(this, x);
        case 2:
          return G__12722__2.call(this, x, y);
        default:
          return G__12722__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__12722.cljs$lang$maxFixedArity = 2;
    G__12722.cljs$lang$applyTo = G__12722__3.cljs$lang$applyTo;
    return G__12722
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12725__delegate = function(args) {
      return x
    };
    var G__12725 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12725__delegate.call(this, args)
    };
    G__12725.cljs$lang$maxFixedArity = 0;
    G__12725.cljs$lang$applyTo = function(arglist__12726) {
      var args = cljs.core.seq(arglist__12726);
      return G__12725__delegate(args)
    };
    G__12725.cljs$lang$arity$variadic = G__12725__delegate;
    return G__12725
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12733 = null;
      var G__12733__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__12733__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__12733__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__12733__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__12733__4 = function() {
        var G__12734__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12734 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12734__delegate.call(this, x, y, z, args)
        };
        G__12734.cljs$lang$maxFixedArity = 3;
        G__12734.cljs$lang$applyTo = function(arglist__12735) {
          var x = cljs.core.first(arglist__12735);
          var y = cljs.core.first(cljs.core.next(arglist__12735));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12735)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12735)));
          return G__12734__delegate(x, y, z, args)
        };
        G__12734.cljs$lang$arity$variadic = G__12734__delegate;
        return G__12734
      }();
      G__12733 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12733__0.call(this);
          case 1:
            return G__12733__1.call(this, x);
          case 2:
            return G__12733__2.call(this, x, y);
          case 3:
            return G__12733__3.call(this, x, y, z);
          default:
            return G__12733__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12733.cljs$lang$maxFixedArity = 3;
      G__12733.cljs$lang$applyTo = G__12733__4.cljs$lang$applyTo;
      return G__12733
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12736 = null;
      var G__12736__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__12736__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__12736__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__12736__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__12736__4 = function() {
        var G__12737__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__12737 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12737__delegate.call(this, x, y, z, args)
        };
        G__12737.cljs$lang$maxFixedArity = 3;
        G__12737.cljs$lang$applyTo = function(arglist__12738) {
          var x = cljs.core.first(arglist__12738);
          var y = cljs.core.first(cljs.core.next(arglist__12738));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12738)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12738)));
          return G__12737__delegate(x, y, z, args)
        };
        G__12737.cljs$lang$arity$variadic = G__12737__delegate;
        return G__12737
      }();
      G__12736 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12736__0.call(this);
          case 1:
            return G__12736__1.call(this, x);
          case 2:
            return G__12736__2.call(this, x, y);
          case 3:
            return G__12736__3.call(this, x, y, z);
          default:
            return G__12736__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12736.cljs$lang$maxFixedArity = 3;
      G__12736.cljs$lang$applyTo = G__12736__4.cljs$lang$applyTo;
      return G__12736
    }()
  };
  var comp__4 = function() {
    var G__12739__delegate = function(f1, f2, f3, fs) {
      var fs__12730 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__12740__delegate = function(args) {
          var ret__12731 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__12730), args);
          var fs__12732 = cljs.core.next.call(null, fs__12730);
          while(true) {
            if(fs__12732) {
              var G__12741 = cljs.core.first.call(null, fs__12732).call(null, ret__12731);
              var G__12742 = cljs.core.next.call(null, fs__12732);
              ret__12731 = G__12741;
              fs__12732 = G__12742;
              continue
            }else {
              return ret__12731
            }
            break
          }
        };
        var G__12740 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12740__delegate.call(this, args)
        };
        G__12740.cljs$lang$maxFixedArity = 0;
        G__12740.cljs$lang$applyTo = function(arglist__12743) {
          var args = cljs.core.seq(arglist__12743);
          return G__12740__delegate(args)
        };
        G__12740.cljs$lang$arity$variadic = G__12740__delegate;
        return G__12740
      }()
    };
    var G__12739 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12739__delegate.call(this, f1, f2, f3, fs)
    };
    G__12739.cljs$lang$maxFixedArity = 3;
    G__12739.cljs$lang$applyTo = function(arglist__12744) {
      var f1 = cljs.core.first(arglist__12744);
      var f2 = cljs.core.first(cljs.core.next(arglist__12744));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12744)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12744)));
      return G__12739__delegate(f1, f2, f3, fs)
    };
    G__12739.cljs$lang$arity$variadic = G__12739__delegate;
    return G__12739
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12745__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__12745 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12745__delegate.call(this, args)
      };
      G__12745.cljs$lang$maxFixedArity = 0;
      G__12745.cljs$lang$applyTo = function(arglist__12746) {
        var args = cljs.core.seq(arglist__12746);
        return G__12745__delegate(args)
      };
      G__12745.cljs$lang$arity$variadic = G__12745__delegate;
      return G__12745
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12747__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__12747 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12747__delegate.call(this, args)
      };
      G__12747.cljs$lang$maxFixedArity = 0;
      G__12747.cljs$lang$applyTo = function(arglist__12748) {
        var args = cljs.core.seq(arglist__12748);
        return G__12747__delegate(args)
      };
      G__12747.cljs$lang$arity$variadic = G__12747__delegate;
      return G__12747
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12749__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__12749 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12749__delegate.call(this, args)
      };
      G__12749.cljs$lang$maxFixedArity = 0;
      G__12749.cljs$lang$applyTo = function(arglist__12750) {
        var args = cljs.core.seq(arglist__12750);
        return G__12749__delegate(args)
      };
      G__12749.cljs$lang$arity$variadic = G__12749__delegate;
      return G__12749
    }()
  };
  var partial__5 = function() {
    var G__12751__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12752__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__12752 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12752__delegate.call(this, args)
        };
        G__12752.cljs$lang$maxFixedArity = 0;
        G__12752.cljs$lang$applyTo = function(arglist__12753) {
          var args = cljs.core.seq(arglist__12753);
          return G__12752__delegate(args)
        };
        G__12752.cljs$lang$arity$variadic = G__12752__delegate;
        return G__12752
      }()
    };
    var G__12751 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12751__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__12751.cljs$lang$maxFixedArity = 4;
    G__12751.cljs$lang$applyTo = function(arglist__12754) {
      var f = cljs.core.first(arglist__12754);
      var arg1 = cljs.core.first(cljs.core.next(arglist__12754));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12754)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12754))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12754))));
      return G__12751__delegate(f, arg1, arg2, arg3, more)
    };
    G__12751.cljs$lang$arity$variadic = G__12751__delegate;
    return G__12751
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12755 = null;
      var G__12755__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__12755__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__12755__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__12755__4 = function() {
        var G__12756__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__12756 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12756__delegate.call(this, a, b, c, ds)
        };
        G__12756.cljs$lang$maxFixedArity = 3;
        G__12756.cljs$lang$applyTo = function(arglist__12757) {
          var a = cljs.core.first(arglist__12757);
          var b = cljs.core.first(cljs.core.next(arglist__12757));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12757)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12757)));
          return G__12756__delegate(a, b, c, ds)
        };
        G__12756.cljs$lang$arity$variadic = G__12756__delegate;
        return G__12756
      }();
      G__12755 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12755__1.call(this, a);
          case 2:
            return G__12755__2.call(this, a, b);
          case 3:
            return G__12755__3.call(this, a, b, c);
          default:
            return G__12755__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12755.cljs$lang$maxFixedArity = 3;
      G__12755.cljs$lang$applyTo = G__12755__4.cljs$lang$applyTo;
      return G__12755
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12758 = null;
      var G__12758__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12758__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__12758__4 = function() {
        var G__12759__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__12759 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12759__delegate.call(this, a, b, c, ds)
        };
        G__12759.cljs$lang$maxFixedArity = 3;
        G__12759.cljs$lang$applyTo = function(arglist__12760) {
          var a = cljs.core.first(arglist__12760);
          var b = cljs.core.first(cljs.core.next(arglist__12760));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12760)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12760)));
          return G__12759__delegate(a, b, c, ds)
        };
        G__12759.cljs$lang$arity$variadic = G__12759__delegate;
        return G__12759
      }();
      G__12758 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12758__2.call(this, a, b);
          case 3:
            return G__12758__3.call(this, a, b, c);
          default:
            return G__12758__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12758.cljs$lang$maxFixedArity = 3;
      G__12758.cljs$lang$applyTo = G__12758__4.cljs$lang$applyTo;
      return G__12758
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12761 = null;
      var G__12761__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12761__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__12761__4 = function() {
        var G__12762__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__12762 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12762__delegate.call(this, a, b, c, ds)
        };
        G__12762.cljs$lang$maxFixedArity = 3;
        G__12762.cljs$lang$applyTo = function(arglist__12763) {
          var a = cljs.core.first(arglist__12763);
          var b = cljs.core.first(cljs.core.next(arglist__12763));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12763)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12763)));
          return G__12762__delegate(a, b, c, ds)
        };
        G__12762.cljs$lang$arity$variadic = G__12762__delegate;
        return G__12762
      }();
      G__12761 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12761__2.call(this, a, b);
          case 3:
            return G__12761__3.call(this, a, b, c);
          default:
            return G__12761__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12761.cljs$lang$maxFixedArity = 3;
      G__12761.cljs$lang$applyTo = G__12761__4.cljs$lang$applyTo;
      return G__12761
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__12779 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12787 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12787) {
        var s__12788 = temp__3974__auto____12787;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12788)) {
          var c__12789 = cljs.core.chunk_first.call(null, s__12788);
          var size__12790 = cljs.core.count.call(null, c__12789);
          var b__12791 = cljs.core.chunk_buffer.call(null, size__12790);
          var n__2527__auto____12792 = size__12790;
          var i__12793 = 0;
          while(true) {
            if(i__12793 < n__2527__auto____12792) {
              cljs.core.chunk_append.call(null, b__12791, f.call(null, idx + i__12793, cljs.core._nth.call(null, c__12789, i__12793)));
              var G__12794 = i__12793 + 1;
              i__12793 = G__12794;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12791), mapi.call(null, idx + size__12790, cljs.core.chunk_rest.call(null, s__12788)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__12788)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__12788)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__12779.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12804 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12804) {
      var s__12805 = temp__3974__auto____12804;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__12805)) {
        var c__12806 = cljs.core.chunk_first.call(null, s__12805);
        var size__12807 = cljs.core.count.call(null, c__12806);
        var b__12808 = cljs.core.chunk_buffer.call(null, size__12807);
        var n__2527__auto____12809 = size__12807;
        var i__12810 = 0;
        while(true) {
          if(i__12810 < n__2527__auto____12809) {
            var x__12811 = f.call(null, cljs.core._nth.call(null, c__12806, i__12810));
            if(x__12811 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__12808, x__12811)
            }
            var G__12813 = i__12810 + 1;
            i__12810 = G__12813;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12808), keep.call(null, f, cljs.core.chunk_rest.call(null, s__12805)))
      }else {
        var x__12812 = f.call(null, cljs.core.first.call(null, s__12805));
        if(x__12812 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__12805))
        }else {
          return cljs.core.cons.call(null, x__12812, keep.call(null, f, cljs.core.rest.call(null, s__12805)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__12839 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12849 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12849) {
        var s__12850 = temp__3974__auto____12849;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__12850)) {
          var c__12851 = cljs.core.chunk_first.call(null, s__12850);
          var size__12852 = cljs.core.count.call(null, c__12851);
          var b__12853 = cljs.core.chunk_buffer.call(null, size__12852);
          var n__2527__auto____12854 = size__12852;
          var i__12855 = 0;
          while(true) {
            if(i__12855 < n__2527__auto____12854) {
              var x__12856 = f.call(null, idx + i__12855, cljs.core._nth.call(null, c__12851, i__12855));
              if(x__12856 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__12853, x__12856)
              }
              var G__12858 = i__12855 + 1;
              i__12855 = G__12858;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12853), keepi.call(null, idx + size__12852, cljs.core.chunk_rest.call(null, s__12850)))
        }else {
          var x__12857 = f.call(null, idx, cljs.core.first.call(null, s__12850));
          if(x__12857 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12850))
          }else {
            return cljs.core.cons.call(null, x__12857, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__12850)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__12839.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12944 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12944)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____12944
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12945 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12945)) {
            var and__3822__auto____12946 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12946)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____12946
            }
          }else {
            return and__3822__auto____12945
          }
        }())
      };
      var ep1__4 = function() {
        var G__13015__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12947 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12947)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____12947
            }
          }())
        };
        var G__13015 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13015__delegate.call(this, x, y, z, args)
        };
        G__13015.cljs$lang$maxFixedArity = 3;
        G__13015.cljs$lang$applyTo = function(arglist__13016) {
          var x = cljs.core.first(arglist__13016);
          var y = cljs.core.first(cljs.core.next(arglist__13016));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13016)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13016)));
          return G__13015__delegate(x, y, z, args)
        };
        G__13015.cljs$lang$arity$variadic = G__13015__delegate;
        return G__13015
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12959 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12959)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____12959
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12960 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12960)) {
            var and__3822__auto____12961 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12961)) {
              var and__3822__auto____12962 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12962)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____12962
              }
            }else {
              return and__3822__auto____12961
            }
          }else {
            return and__3822__auto____12960
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12963 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12963)) {
            var and__3822__auto____12964 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____12964)) {
              var and__3822__auto____12965 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____12965)) {
                var and__3822__auto____12966 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____12966)) {
                  var and__3822__auto____12967 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12967)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____12967
                  }
                }else {
                  return and__3822__auto____12966
                }
              }else {
                return and__3822__auto____12965
              }
            }else {
              return and__3822__auto____12964
            }
          }else {
            return and__3822__auto____12963
          }
        }())
      };
      var ep2__4 = function() {
        var G__13017__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____12968 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____12968)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12814_SHARP_) {
                var and__3822__auto____12969 = p1.call(null, p1__12814_SHARP_);
                if(cljs.core.truth_(and__3822__auto____12969)) {
                  return p2.call(null, p1__12814_SHARP_)
                }else {
                  return and__3822__auto____12969
                }
              }, args)
            }else {
              return and__3822__auto____12968
            }
          }())
        };
        var G__13017 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13017__delegate.call(this, x, y, z, args)
        };
        G__13017.cljs$lang$maxFixedArity = 3;
        G__13017.cljs$lang$applyTo = function(arglist__13018) {
          var x = cljs.core.first(arglist__13018);
          var y = cljs.core.first(cljs.core.next(arglist__13018));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13018)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13018)));
          return G__13017__delegate(x, y, z, args)
        };
        G__13017.cljs$lang$arity$variadic = G__13017__delegate;
        return G__13017
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12988 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12988)) {
            var and__3822__auto____12989 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12989)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____12989
            }
          }else {
            return and__3822__auto____12988
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12990 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12990)) {
            var and__3822__auto____12991 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12991)) {
              var and__3822__auto____12992 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12992)) {
                var and__3822__auto____12993 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12993)) {
                  var and__3822__auto____12994 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12994)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____12994
                  }
                }else {
                  return and__3822__auto____12993
                }
              }else {
                return and__3822__auto____12992
              }
            }else {
              return and__3822__auto____12991
            }
          }else {
            return and__3822__auto____12990
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____12995 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____12995)) {
            var and__3822__auto____12996 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____12996)) {
              var and__3822__auto____12997 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____12997)) {
                var and__3822__auto____12998 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____12998)) {
                  var and__3822__auto____12999 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____12999)) {
                    var and__3822__auto____13000 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____13000)) {
                      var and__3822__auto____13001 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____13001)) {
                        var and__3822__auto____13002 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____13002)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____13002
                        }
                      }else {
                        return and__3822__auto____13001
                      }
                    }else {
                      return and__3822__auto____13000
                    }
                  }else {
                    return and__3822__auto____12999
                  }
                }else {
                  return and__3822__auto____12998
                }
              }else {
                return and__3822__auto____12997
              }
            }else {
              return and__3822__auto____12996
            }
          }else {
            return and__3822__auto____12995
          }
        }())
      };
      var ep3__4 = function() {
        var G__13019__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____13003 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____13003)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12815_SHARP_) {
                var and__3822__auto____13004 = p1.call(null, p1__12815_SHARP_);
                if(cljs.core.truth_(and__3822__auto____13004)) {
                  var and__3822__auto____13005 = p2.call(null, p1__12815_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____13005)) {
                    return p3.call(null, p1__12815_SHARP_)
                  }else {
                    return and__3822__auto____13005
                  }
                }else {
                  return and__3822__auto____13004
                }
              }, args)
            }else {
              return and__3822__auto____13003
            }
          }())
        };
        var G__13019 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13019__delegate.call(this, x, y, z, args)
        };
        G__13019.cljs$lang$maxFixedArity = 3;
        G__13019.cljs$lang$applyTo = function(arglist__13020) {
          var x = cljs.core.first(arglist__13020);
          var y = cljs.core.first(cljs.core.next(arglist__13020));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13020)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13020)));
          return G__13019__delegate(x, y, z, args)
        };
        G__13019.cljs$lang$arity$variadic = G__13019__delegate;
        return G__13019
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__13021__delegate = function(p1, p2, p3, ps) {
      var ps__13006 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__12816_SHARP_) {
            return p1__12816_SHARP_.call(null, x)
          }, ps__13006)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__12817_SHARP_) {
            var and__3822__auto____13011 = p1__12817_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13011)) {
              return p1__12817_SHARP_.call(null, y)
            }else {
              return and__3822__auto____13011
            }
          }, ps__13006)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__12818_SHARP_) {
            var and__3822__auto____13012 = p1__12818_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____13012)) {
              var and__3822__auto____13013 = p1__12818_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____13013)) {
                return p1__12818_SHARP_.call(null, z)
              }else {
                return and__3822__auto____13013
              }
            }else {
              return and__3822__auto____13012
            }
          }, ps__13006)
        };
        var epn__4 = function() {
          var G__13022__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____13014 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____13014)) {
                return cljs.core.every_QMARK_.call(null, function(p1__12819_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__12819_SHARP_, args)
                }, ps__13006)
              }else {
                return and__3822__auto____13014
              }
            }())
          };
          var G__13022 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13022__delegate.call(this, x, y, z, args)
          };
          G__13022.cljs$lang$maxFixedArity = 3;
          G__13022.cljs$lang$applyTo = function(arglist__13023) {
            var x = cljs.core.first(arglist__13023);
            var y = cljs.core.first(cljs.core.next(arglist__13023));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13023)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13023)));
            return G__13022__delegate(x, y, z, args)
          };
          G__13022.cljs$lang$arity$variadic = G__13022__delegate;
          return G__13022
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__13021 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13021__delegate.call(this, p1, p2, p3, ps)
    };
    G__13021.cljs$lang$maxFixedArity = 3;
    G__13021.cljs$lang$applyTo = function(arglist__13024) {
      var p1 = cljs.core.first(arglist__13024);
      var p2 = cljs.core.first(cljs.core.next(arglist__13024));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13024)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13024)));
      return G__13021__delegate(p1, p2, p3, ps)
    };
    G__13021.cljs$lang$arity$variadic = G__13021__delegate;
    return G__13021
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____13105 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13105)) {
          return or__3824__auto____13105
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____13106 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13106)) {
          return or__3824__auto____13106
        }else {
          var or__3824__auto____13107 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13107)) {
            return or__3824__auto____13107
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__13176__delegate = function(x, y, z, args) {
          var or__3824__auto____13108 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13108)) {
            return or__3824__auto____13108
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__13176 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13176__delegate.call(this, x, y, z, args)
        };
        G__13176.cljs$lang$maxFixedArity = 3;
        G__13176.cljs$lang$applyTo = function(arglist__13177) {
          var x = cljs.core.first(arglist__13177);
          var y = cljs.core.first(cljs.core.next(arglist__13177));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13177)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13177)));
          return G__13176__delegate(x, y, z, args)
        };
        G__13176.cljs$lang$arity$variadic = G__13176__delegate;
        return G__13176
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____13120 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13120)) {
          return or__3824__auto____13120
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____13121 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13121)) {
          return or__3824__auto____13121
        }else {
          var or__3824__auto____13122 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13122)) {
            return or__3824__auto____13122
          }else {
            var or__3824__auto____13123 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13123)) {
              return or__3824__auto____13123
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____13124 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13124)) {
          return or__3824__auto____13124
        }else {
          var or__3824__auto____13125 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____13125)) {
            return or__3824__auto____13125
          }else {
            var or__3824__auto____13126 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____13126)) {
              return or__3824__auto____13126
            }else {
              var or__3824__auto____13127 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____13127)) {
                return or__3824__auto____13127
              }else {
                var or__3824__auto____13128 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13128)) {
                  return or__3824__auto____13128
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13178__delegate = function(x, y, z, args) {
          var or__3824__auto____13129 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13129)) {
            return or__3824__auto____13129
          }else {
            return cljs.core.some.call(null, function(p1__12859_SHARP_) {
              var or__3824__auto____13130 = p1.call(null, p1__12859_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13130)) {
                return or__3824__auto____13130
              }else {
                return p2.call(null, p1__12859_SHARP_)
              }
            }, args)
          }
        };
        var G__13178 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13178__delegate.call(this, x, y, z, args)
        };
        G__13178.cljs$lang$maxFixedArity = 3;
        G__13178.cljs$lang$applyTo = function(arglist__13179) {
          var x = cljs.core.first(arglist__13179);
          var y = cljs.core.first(cljs.core.next(arglist__13179));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13179)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13179)));
          return G__13178__delegate(x, y, z, args)
        };
        G__13178.cljs$lang$arity$variadic = G__13178__delegate;
        return G__13178
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____13149 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13149)) {
          return or__3824__auto____13149
        }else {
          var or__3824__auto____13150 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13150)) {
            return or__3824__auto____13150
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____13151 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13151)) {
          return or__3824__auto____13151
        }else {
          var or__3824__auto____13152 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13152)) {
            return or__3824__auto____13152
          }else {
            var or__3824__auto____13153 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13153)) {
              return or__3824__auto____13153
            }else {
              var or__3824__auto____13154 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13154)) {
                return or__3824__auto____13154
              }else {
                var or__3824__auto____13155 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13155)) {
                  return or__3824__auto____13155
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____13156 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____13156)) {
          return or__3824__auto____13156
        }else {
          var or__3824__auto____13157 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____13157)) {
            return or__3824__auto____13157
          }else {
            var or__3824__auto____13158 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13158)) {
              return or__3824__auto____13158
            }else {
              var or__3824__auto____13159 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13159)) {
                return or__3824__auto____13159
              }else {
                var or__3824__auto____13160 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____13160)) {
                  return or__3824__auto____13160
                }else {
                  var or__3824__auto____13161 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____13161)) {
                    return or__3824__auto____13161
                  }else {
                    var or__3824__auto____13162 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____13162)) {
                      return or__3824__auto____13162
                    }else {
                      var or__3824__auto____13163 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____13163)) {
                        return or__3824__auto____13163
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13180__delegate = function(x, y, z, args) {
          var or__3824__auto____13164 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____13164)) {
            return or__3824__auto____13164
          }else {
            return cljs.core.some.call(null, function(p1__12860_SHARP_) {
              var or__3824__auto____13165 = p1.call(null, p1__12860_SHARP_);
              if(cljs.core.truth_(or__3824__auto____13165)) {
                return or__3824__auto____13165
              }else {
                var or__3824__auto____13166 = p2.call(null, p1__12860_SHARP_);
                if(cljs.core.truth_(or__3824__auto____13166)) {
                  return or__3824__auto____13166
                }else {
                  return p3.call(null, p1__12860_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__13180 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13180__delegate.call(this, x, y, z, args)
        };
        G__13180.cljs$lang$maxFixedArity = 3;
        G__13180.cljs$lang$applyTo = function(arglist__13181) {
          var x = cljs.core.first(arglist__13181);
          var y = cljs.core.first(cljs.core.next(arglist__13181));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13181)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13181)));
          return G__13180__delegate(x, y, z, args)
        };
        G__13180.cljs$lang$arity$variadic = G__13180__delegate;
        return G__13180
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__13182__delegate = function(p1, p2, p3, ps) {
      var ps__13167 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__12861_SHARP_) {
            return p1__12861_SHARP_.call(null, x)
          }, ps__13167)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__12862_SHARP_) {
            var or__3824__auto____13172 = p1__12862_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13172)) {
              return or__3824__auto____13172
            }else {
              return p1__12862_SHARP_.call(null, y)
            }
          }, ps__13167)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__12863_SHARP_) {
            var or__3824__auto____13173 = p1__12863_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____13173)) {
              return or__3824__auto____13173
            }else {
              var or__3824__auto____13174 = p1__12863_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____13174)) {
                return or__3824__auto____13174
              }else {
                return p1__12863_SHARP_.call(null, z)
              }
            }
          }, ps__13167)
        };
        var spn__4 = function() {
          var G__13183__delegate = function(x, y, z, args) {
            var or__3824__auto____13175 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____13175)) {
              return or__3824__auto____13175
            }else {
              return cljs.core.some.call(null, function(p1__12864_SHARP_) {
                return cljs.core.some.call(null, p1__12864_SHARP_, args)
              }, ps__13167)
            }
          };
          var G__13183 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13183__delegate.call(this, x, y, z, args)
          };
          G__13183.cljs$lang$maxFixedArity = 3;
          G__13183.cljs$lang$applyTo = function(arglist__13184) {
            var x = cljs.core.first(arglist__13184);
            var y = cljs.core.first(cljs.core.next(arglist__13184));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13184)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13184)));
            return G__13183__delegate(x, y, z, args)
          };
          G__13183.cljs$lang$arity$variadic = G__13183__delegate;
          return G__13183
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__13182 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13182__delegate.call(this, p1, p2, p3, ps)
    };
    G__13182.cljs$lang$maxFixedArity = 3;
    G__13182.cljs$lang$applyTo = function(arglist__13185) {
      var p1 = cljs.core.first(arglist__13185);
      var p2 = cljs.core.first(cljs.core.next(arglist__13185));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13185)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13185)));
      return G__13182__delegate(p1, p2, p3, ps)
    };
    G__13182.cljs$lang$arity$variadic = G__13182__delegate;
    return G__13182
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13204 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13204) {
        var s__13205 = temp__3974__auto____13204;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__13205)) {
          var c__13206 = cljs.core.chunk_first.call(null, s__13205);
          var size__13207 = cljs.core.count.call(null, c__13206);
          var b__13208 = cljs.core.chunk_buffer.call(null, size__13207);
          var n__2527__auto____13209 = size__13207;
          var i__13210 = 0;
          while(true) {
            if(i__13210 < n__2527__auto____13209) {
              cljs.core.chunk_append.call(null, b__13208, f.call(null, cljs.core._nth.call(null, c__13206, i__13210)));
              var G__13222 = i__13210 + 1;
              i__13210 = G__13222;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13208), map.call(null, f, cljs.core.chunk_rest.call(null, s__13205)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__13205)), map.call(null, f, cljs.core.rest.call(null, s__13205)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13211 = cljs.core.seq.call(null, c1);
      var s2__13212 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13213 = s1__13211;
        if(and__3822__auto____13213) {
          return s2__13212
        }else {
          return and__3822__auto____13213
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13211), cljs.core.first.call(null, s2__13212)), map.call(null, f, cljs.core.rest.call(null, s1__13211), cljs.core.rest.call(null, s2__13212)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13214 = cljs.core.seq.call(null, c1);
      var s2__13215 = cljs.core.seq.call(null, c2);
      var s3__13216 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____13217 = s1__13214;
        if(and__3822__auto____13217) {
          var and__3822__auto____13218 = s2__13215;
          if(and__3822__auto____13218) {
            return s3__13216
          }else {
            return and__3822__auto____13218
          }
        }else {
          return and__3822__auto____13217
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__13214), cljs.core.first.call(null, s2__13215), cljs.core.first.call(null, s3__13216)), map.call(null, f, cljs.core.rest.call(null, s1__13214), cljs.core.rest.call(null, s2__13215), cljs.core.rest.call(null, s3__13216)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__13223__delegate = function(f, c1, c2, c3, colls) {
      var step__13221 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__13220 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13220)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__13220), step.call(null, map.call(null, cljs.core.rest, ss__13220)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__13025_SHARP_) {
        return cljs.core.apply.call(null, f, p1__13025_SHARP_)
      }, step__13221.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__13223 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13223__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13223.cljs$lang$maxFixedArity = 4;
    G__13223.cljs$lang$applyTo = function(arglist__13224) {
      var f = cljs.core.first(arglist__13224);
      var c1 = cljs.core.first(cljs.core.next(arglist__13224));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13224)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13224))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13224))));
      return G__13223__delegate(f, c1, c2, c3, colls)
    };
    G__13223.cljs$lang$arity$variadic = G__13223__delegate;
    return G__13223
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____13227 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13227) {
        var s__13228 = temp__3974__auto____13227;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__13228), take.call(null, n - 1, cljs.core.rest.call(null, s__13228)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__13234 = function(n, coll) {
    while(true) {
      var s__13232 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13233 = n > 0;
        if(and__3822__auto____13233) {
          return s__13232
        }else {
          return and__3822__auto____13233
        }
      }())) {
        var G__13235 = n - 1;
        var G__13236 = cljs.core.rest.call(null, s__13232);
        n = G__13235;
        coll = G__13236;
        continue
      }else {
        return s__13232
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13234.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__13239 = cljs.core.seq.call(null, coll);
  var lead__13240 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__13240) {
      var G__13241 = cljs.core.next.call(null, s__13239);
      var G__13242 = cljs.core.next.call(null, lead__13240);
      s__13239 = G__13241;
      lead__13240 = G__13242;
      continue
    }else {
      return s__13239
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__13248 = function(pred, coll) {
    while(true) {
      var s__13246 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____13247 = s__13246;
        if(and__3822__auto____13247) {
          return pred.call(null, cljs.core.first.call(null, s__13246))
        }else {
          return and__3822__auto____13247
        }
      }())) {
        var G__13249 = pred;
        var G__13250 = cljs.core.rest.call(null, s__13246);
        pred = G__13249;
        coll = G__13250;
        continue
      }else {
        return s__13246
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__13248.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13253 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13253) {
      var s__13254 = temp__3974__auto____13253;
      return cljs.core.concat.call(null, s__13254, cycle.call(null, s__13254))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__13259 = cljs.core.seq.call(null, c1);
      var s2__13260 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____13261 = s1__13259;
        if(and__3822__auto____13261) {
          return s2__13260
        }else {
          return and__3822__auto____13261
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__13259), cljs.core.cons.call(null, cljs.core.first.call(null, s2__13260), interleave.call(null, cljs.core.rest.call(null, s1__13259), cljs.core.rest.call(null, s2__13260))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__13263__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__13262 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__13262)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__13262), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__13262)))
        }else {
          return null
        }
      }, null)
    };
    var G__13263 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13263__delegate.call(this, c1, c2, colls)
    };
    G__13263.cljs$lang$maxFixedArity = 2;
    G__13263.cljs$lang$applyTo = function(arglist__13264) {
      var c1 = cljs.core.first(arglist__13264);
      var c2 = cljs.core.first(cljs.core.next(arglist__13264));
      var colls = cljs.core.rest(cljs.core.next(arglist__13264));
      return G__13263__delegate(c1, c2, colls)
    };
    G__13263.cljs$lang$arity$variadic = G__13263__delegate;
    return G__13263
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__13274 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____13272 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____13272) {
        var coll__13273 = temp__3971__auto____13272;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__13273), cat.call(null, cljs.core.rest.call(null, coll__13273), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__13274.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__13275__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__13275 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13275__delegate.call(this, f, coll, colls)
    };
    G__13275.cljs$lang$maxFixedArity = 2;
    G__13275.cljs$lang$applyTo = function(arglist__13276) {
      var f = cljs.core.first(arglist__13276);
      var coll = cljs.core.first(cljs.core.next(arglist__13276));
      var colls = cljs.core.rest(cljs.core.next(arglist__13276));
      return G__13275__delegate(f, coll, colls)
    };
    G__13275.cljs$lang$arity$variadic = G__13275__delegate;
    return G__13275
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____13286 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____13286) {
      var s__13287 = temp__3974__auto____13286;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__13287)) {
        var c__13288 = cljs.core.chunk_first.call(null, s__13287);
        var size__13289 = cljs.core.count.call(null, c__13288);
        var b__13290 = cljs.core.chunk_buffer.call(null, size__13289);
        var n__2527__auto____13291 = size__13289;
        var i__13292 = 0;
        while(true) {
          if(i__13292 < n__2527__auto____13291) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__13288, i__13292)))) {
              cljs.core.chunk_append.call(null, b__13290, cljs.core._nth.call(null, c__13288, i__13292))
            }else {
            }
            var G__13295 = i__13292 + 1;
            i__13292 = G__13295;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13290), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__13287)))
      }else {
        var f__13293 = cljs.core.first.call(null, s__13287);
        var r__13294 = cljs.core.rest.call(null, s__13287);
        if(cljs.core.truth_(pred.call(null, f__13293))) {
          return cljs.core.cons.call(null, f__13293, filter.call(null, pred, r__13294))
        }else {
          return filter.call(null, pred, r__13294)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__13298 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__13298.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__13296_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__13296_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__13302__13303 = to;
    if(G__13302__13303) {
      if(function() {
        var or__3824__auto____13304 = G__13302__13303.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____13304) {
          return or__3824__auto____13304
        }else {
          return G__13302__13303.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__13302__13303.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13302__13303)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__13302__13303)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__13305__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__13305 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13305__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13305.cljs$lang$maxFixedArity = 4;
    G__13305.cljs$lang$applyTo = function(arglist__13306) {
      var f = cljs.core.first(arglist__13306);
      var c1 = cljs.core.first(cljs.core.next(arglist__13306));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13306)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13306))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13306))));
      return G__13305__delegate(f, c1, c2, c3, colls)
    };
    G__13305.cljs$lang$arity$variadic = G__13305__delegate;
    return G__13305
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13313 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13313) {
        var s__13314 = temp__3974__auto____13313;
        var p__13315 = cljs.core.take.call(null, n, s__13314);
        if(n === cljs.core.count.call(null, p__13315)) {
          return cljs.core.cons.call(null, p__13315, partition.call(null, n, step, cljs.core.drop.call(null, step, s__13314)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____13316 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____13316) {
        var s__13317 = temp__3974__auto____13316;
        var p__13318 = cljs.core.take.call(null, n, s__13317);
        if(n === cljs.core.count.call(null, p__13318)) {
          return cljs.core.cons.call(null, p__13318, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__13317)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__13318, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__13323 = cljs.core.lookup_sentinel;
    var m__13324 = m;
    var ks__13325 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__13325) {
        var m__13326 = cljs.core._lookup.call(null, m__13324, cljs.core.first.call(null, ks__13325), sentinel__13323);
        if(sentinel__13323 === m__13326) {
          return not_found
        }else {
          var G__13327 = sentinel__13323;
          var G__13328 = m__13326;
          var G__13329 = cljs.core.next.call(null, ks__13325);
          sentinel__13323 = G__13327;
          m__13324 = G__13328;
          ks__13325 = G__13329;
          continue
        }
      }else {
        return m__13324
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__13330, v) {
  var vec__13335__13336 = p__13330;
  var k__13337 = cljs.core.nth.call(null, vec__13335__13336, 0, null);
  var ks__13338 = cljs.core.nthnext.call(null, vec__13335__13336, 1);
  if(cljs.core.truth_(ks__13338)) {
    return cljs.core.assoc.call(null, m, k__13337, assoc_in.call(null, cljs.core._lookup.call(null, m, k__13337, null), ks__13338, v))
  }else {
    return cljs.core.assoc.call(null, m, k__13337, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__13339, f, args) {
    var vec__13344__13345 = p__13339;
    var k__13346 = cljs.core.nth.call(null, vec__13344__13345, 0, null);
    var ks__13347 = cljs.core.nthnext.call(null, vec__13344__13345, 1);
    if(cljs.core.truth_(ks__13347)) {
      return cljs.core.assoc.call(null, m, k__13346, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__13346, null), ks__13347, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__13346, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__13346, null), args))
    }
  };
  var update_in = function(m, p__13339, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__13339, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__13348) {
    var m = cljs.core.first(arglist__13348);
    var p__13339 = cljs.core.first(cljs.core.next(arglist__13348));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13348)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13348)));
    return update_in__delegate(m, p__13339, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13351 = this;
  var h__2192__auto____13352 = this__13351.__hash;
  if(!(h__2192__auto____13352 == null)) {
    return h__2192__auto____13352
  }else {
    var h__2192__auto____13353 = cljs.core.hash_coll.call(null, coll);
    this__13351.__hash = h__2192__auto____13353;
    return h__2192__auto____13353
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13354 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13355 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13356 = this;
  var new_array__13357 = this__13356.array.slice();
  new_array__13357[k] = v;
  return new cljs.core.Vector(this__13356.meta, new_array__13357, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__13388 = null;
  var G__13388__2 = function(this_sym13358, k) {
    var this__13360 = this;
    var this_sym13358__13361 = this;
    var coll__13362 = this_sym13358__13361;
    return coll__13362.cljs$core$ILookup$_lookup$arity$2(coll__13362, k)
  };
  var G__13388__3 = function(this_sym13359, k, not_found) {
    var this__13360 = this;
    var this_sym13359__13363 = this;
    var coll__13364 = this_sym13359__13363;
    return coll__13364.cljs$core$ILookup$_lookup$arity$3(coll__13364, k, not_found)
  };
  G__13388 = function(this_sym13359, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13388__2.call(this, this_sym13359, k);
      case 3:
        return G__13388__3.call(this, this_sym13359, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13388
}();
cljs.core.Vector.prototype.apply = function(this_sym13349, args13350) {
  var this__13365 = this;
  return this_sym13349.call.apply(this_sym13349, [this_sym13349].concat(args13350.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13366 = this;
  var new_array__13367 = this__13366.array.slice();
  new_array__13367.push(o);
  return new cljs.core.Vector(this__13366.meta, new_array__13367, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__13368 = this;
  var this__13369 = this;
  return cljs.core.pr_str.call(null, this__13369)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__13370 = this;
  return cljs.core.ci_reduce.call(null, this__13370.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__13371 = this;
  return cljs.core.ci_reduce.call(null, this__13371.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13372 = this;
  if(this__13372.array.length > 0) {
    var vector_seq__13373 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__13372.array.length) {
          return cljs.core.cons.call(null, this__13372.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__13373.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13374 = this;
  return this__13374.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13375 = this;
  var count__13376 = this__13375.array.length;
  if(count__13376 > 0) {
    return this__13375.array[count__13376 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13377 = this;
  if(this__13377.array.length > 0) {
    var new_array__13378 = this__13377.array.slice();
    new_array__13378.pop();
    return new cljs.core.Vector(this__13377.meta, new_array__13378, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13379 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13380 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13381 = this;
  return new cljs.core.Vector(meta, this__13381.array, this__13381.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13382 = this;
  return this__13382.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13383 = this;
  if(function() {
    var and__3822__auto____13384 = 0 <= n;
    if(and__3822__auto____13384) {
      return n < this__13383.array.length
    }else {
      return and__3822__auto____13384
    }
  }()) {
    return this__13383.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13385 = this;
  if(function() {
    var and__3822__auto____13386 = 0 <= n;
    if(and__3822__auto____13386) {
      return n < this__13385.array.length
    }else {
      return and__3822__auto____13386
    }
  }()) {
    return this__13385.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13387 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__13387.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__13390 = pv.cnt;
  if(cnt__13390 < 32) {
    return 0
  }else {
    return cnt__13390 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__13396 = level;
  var ret__13397 = node;
  while(true) {
    if(ll__13396 === 0) {
      return ret__13397
    }else {
      var embed__13398 = ret__13397;
      var r__13399 = cljs.core.pv_fresh_node.call(null, edit);
      var ___13400 = cljs.core.pv_aset.call(null, r__13399, 0, embed__13398);
      var G__13401 = ll__13396 - 5;
      var G__13402 = r__13399;
      ll__13396 = G__13401;
      ret__13397 = G__13402;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__13408 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__13409 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__13408, subidx__13409, tailnode);
    return ret__13408
  }else {
    var child__13410 = cljs.core.pv_aget.call(null, parent, subidx__13409);
    if(!(child__13410 == null)) {
      var node_to_insert__13411 = push_tail.call(null, pv, level - 5, child__13410, tailnode);
      cljs.core.pv_aset.call(null, ret__13408, subidx__13409, node_to_insert__13411);
      return ret__13408
    }else {
      var node_to_insert__13412 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__13408, subidx__13409, node_to_insert__13412);
      return ret__13408
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____13416 = 0 <= i;
    if(and__3822__auto____13416) {
      return i < pv.cnt
    }else {
      return and__3822__auto____13416
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__13417 = pv.root;
      var level__13418 = pv.shift;
      while(true) {
        if(level__13418 > 0) {
          var G__13419 = cljs.core.pv_aget.call(null, node__13417, i >>> level__13418 & 31);
          var G__13420 = level__13418 - 5;
          node__13417 = G__13419;
          level__13418 = G__13420;
          continue
        }else {
          return node__13417.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__13423 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__13423, i & 31, val);
    return ret__13423
  }else {
    var subidx__13424 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__13423, subidx__13424, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13424), i, val));
    return ret__13423
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__13430 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__13431 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__13430));
    if(function() {
      var and__3822__auto____13432 = new_child__13431 == null;
      if(and__3822__auto____13432) {
        return subidx__13430 === 0
      }else {
        return and__3822__auto____13432
      }
    }()) {
      return null
    }else {
      var ret__13433 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__13433, subidx__13430, new_child__13431);
      return ret__13433
    }
  }else {
    if(subidx__13430 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__13434 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__13434, subidx__13430, null);
        return ret__13434
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13437 = this;
  return new cljs.core.TransientVector(this__13437.cnt, this__13437.shift, cljs.core.tv_editable_root.call(null, this__13437.root), cljs.core.tv_editable_tail.call(null, this__13437.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13438 = this;
  var h__2192__auto____13439 = this__13438.__hash;
  if(!(h__2192__auto____13439 == null)) {
    return h__2192__auto____13439
  }else {
    var h__2192__auto____13440 = cljs.core.hash_coll.call(null, coll);
    this__13438.__hash = h__2192__auto____13440;
    return h__2192__auto____13440
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13441 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13442 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13443 = this;
  if(function() {
    var and__3822__auto____13444 = 0 <= k;
    if(and__3822__auto____13444) {
      return k < this__13443.cnt
    }else {
      return and__3822__auto____13444
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__13445 = this__13443.tail.slice();
      new_tail__13445[k & 31] = v;
      return new cljs.core.PersistentVector(this__13443.meta, this__13443.cnt, this__13443.shift, this__13443.root, new_tail__13445, null)
    }else {
      return new cljs.core.PersistentVector(this__13443.meta, this__13443.cnt, this__13443.shift, cljs.core.do_assoc.call(null, coll, this__13443.shift, this__13443.root, k, v), this__13443.tail, null)
    }
  }else {
    if(k === this__13443.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__13443.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13493 = null;
  var G__13493__2 = function(this_sym13446, k) {
    var this__13448 = this;
    var this_sym13446__13449 = this;
    var coll__13450 = this_sym13446__13449;
    return coll__13450.cljs$core$ILookup$_lookup$arity$2(coll__13450, k)
  };
  var G__13493__3 = function(this_sym13447, k, not_found) {
    var this__13448 = this;
    var this_sym13447__13451 = this;
    var coll__13452 = this_sym13447__13451;
    return coll__13452.cljs$core$ILookup$_lookup$arity$3(coll__13452, k, not_found)
  };
  G__13493 = function(this_sym13447, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13493__2.call(this, this_sym13447, k);
      case 3:
        return G__13493__3.call(this, this_sym13447, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13493
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym13435, args13436) {
  var this__13453 = this;
  return this_sym13435.call.apply(this_sym13435, [this_sym13435].concat(args13436.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__13454 = this;
  var step_init__13455 = [0, init];
  var i__13456 = 0;
  while(true) {
    if(i__13456 < this__13454.cnt) {
      var arr__13457 = cljs.core.array_for.call(null, v, i__13456);
      var len__13458 = arr__13457.length;
      var init__13462 = function() {
        var j__13459 = 0;
        var init__13460 = step_init__13455[1];
        while(true) {
          if(j__13459 < len__13458) {
            var init__13461 = f.call(null, init__13460, j__13459 + i__13456, arr__13457[j__13459]);
            if(cljs.core.reduced_QMARK_.call(null, init__13461)) {
              return init__13461
            }else {
              var G__13494 = j__13459 + 1;
              var G__13495 = init__13461;
              j__13459 = G__13494;
              init__13460 = G__13495;
              continue
            }
          }else {
            step_init__13455[0] = len__13458;
            step_init__13455[1] = init__13460;
            return init__13460
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__13462)) {
        return cljs.core.deref.call(null, init__13462)
      }else {
        var G__13496 = i__13456 + step_init__13455[0];
        i__13456 = G__13496;
        continue
      }
    }else {
      return step_init__13455[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13463 = this;
  if(this__13463.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__13464 = this__13463.tail.slice();
    new_tail__13464.push(o);
    return new cljs.core.PersistentVector(this__13463.meta, this__13463.cnt + 1, this__13463.shift, this__13463.root, new_tail__13464, null)
  }else {
    var root_overflow_QMARK___13465 = this__13463.cnt >>> 5 > 1 << this__13463.shift;
    var new_shift__13466 = root_overflow_QMARK___13465 ? this__13463.shift + 5 : this__13463.shift;
    var new_root__13468 = root_overflow_QMARK___13465 ? function() {
      var n_r__13467 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__13467, 0, this__13463.root);
      cljs.core.pv_aset.call(null, n_r__13467, 1, cljs.core.new_path.call(null, null, this__13463.shift, new cljs.core.VectorNode(null, this__13463.tail)));
      return n_r__13467
    }() : cljs.core.push_tail.call(null, coll, this__13463.shift, this__13463.root, new cljs.core.VectorNode(null, this__13463.tail));
    return new cljs.core.PersistentVector(this__13463.meta, this__13463.cnt + 1, new_shift__13466, new_root__13468, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__13469 = this;
  if(this__13469.cnt > 0) {
    return new cljs.core.RSeq(coll, this__13469.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__13470 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__13471 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__13472 = this;
  var this__13473 = this;
  return cljs.core.pr_str.call(null, this__13473)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__13474 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__13475 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13476 = this;
  if(this__13476.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13477 = this;
  return this__13477.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13478 = this;
  if(this__13478.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__13478.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13479 = this;
  if(this__13479.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__13479.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13479.meta)
    }else {
      if(1 < this__13479.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__13479.meta, this__13479.cnt - 1, this__13479.shift, this__13479.root, this__13479.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__13480 = cljs.core.array_for.call(null, coll, this__13479.cnt - 2);
          var nr__13481 = cljs.core.pop_tail.call(null, coll, this__13479.shift, this__13479.root);
          var new_root__13482 = nr__13481 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__13481;
          var cnt_1__13483 = this__13479.cnt - 1;
          if(function() {
            var and__3822__auto____13484 = 5 < this__13479.shift;
            if(and__3822__auto____13484) {
              return cljs.core.pv_aget.call(null, new_root__13482, 1) == null
            }else {
              return and__3822__auto____13484
            }
          }()) {
            return new cljs.core.PersistentVector(this__13479.meta, cnt_1__13483, this__13479.shift - 5, cljs.core.pv_aget.call(null, new_root__13482, 0), new_tail__13480, null)
          }else {
            return new cljs.core.PersistentVector(this__13479.meta, cnt_1__13483, this__13479.shift, new_root__13482, new_tail__13480, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13485 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13486 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13487 = this;
  return new cljs.core.PersistentVector(meta, this__13487.cnt, this__13487.shift, this__13487.root, this__13487.tail, this__13487.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13488 = this;
  return this__13488.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13489 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13490 = this;
  if(function() {
    var and__3822__auto____13491 = 0 <= n;
    if(and__3822__auto____13491) {
      return n < this__13490.cnt
    }else {
      return and__3822__auto____13491
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13492 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13492.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__13497 = xs.length;
  var xs__13498 = no_clone === true ? xs : xs.slice();
  if(l__13497 < 32) {
    return new cljs.core.PersistentVector(null, l__13497, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__13498, null)
  }else {
    var node__13499 = xs__13498.slice(0, 32);
    var v__13500 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__13499, null);
    var i__13501 = 32;
    var out__13502 = cljs.core._as_transient.call(null, v__13500);
    while(true) {
      if(i__13501 < l__13497) {
        var G__13503 = i__13501 + 1;
        var G__13504 = cljs.core.conj_BANG_.call(null, out__13502, xs__13498[i__13501]);
        i__13501 = G__13503;
        out__13502 = G__13504;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__13502)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13505) {
    var args = cljs.core.seq(arglist__13505);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__13506 = this;
  if(this__13506.off + 1 < this__13506.node.length) {
    var s__13507 = cljs.core.chunked_seq.call(null, this__13506.vec, this__13506.node, this__13506.i, this__13506.off + 1);
    if(s__13507 == null) {
      return null
    }else {
      return s__13507
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13508 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13509 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13510 = this;
  return this__13510.node[this__13510.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13511 = this;
  if(this__13511.off + 1 < this__13511.node.length) {
    var s__13512 = cljs.core.chunked_seq.call(null, this__13511.vec, this__13511.node, this__13511.i, this__13511.off + 1);
    if(s__13512 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__13512
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__13513 = this;
  var l__13514 = this__13513.node.length;
  var s__13515 = this__13513.i + l__13514 < cljs.core._count.call(null, this__13513.vec) ? cljs.core.chunked_seq.call(null, this__13513.vec, this__13513.i + l__13514, 0) : null;
  if(s__13515 == null) {
    return null
  }else {
    return s__13515
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13516 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__13517 = this;
  return cljs.core.chunked_seq.call(null, this__13517.vec, this__13517.node, this__13517.i, this__13517.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__13518 = this;
  return this__13518.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13519 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__13519.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__13520 = this;
  return cljs.core.array_chunk.call(null, this__13520.node, this__13520.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__13521 = this;
  var l__13522 = this__13521.node.length;
  var s__13523 = this__13521.i + l__13522 < cljs.core._count.call(null, this__13521.vec) ? cljs.core.chunked_seq.call(null, this__13521.vec, this__13521.i + l__13522, 0) : null;
  if(s__13523 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__13523
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13526 = this;
  var h__2192__auto____13527 = this__13526.__hash;
  if(!(h__2192__auto____13527 == null)) {
    return h__2192__auto____13527
  }else {
    var h__2192__auto____13528 = cljs.core.hash_coll.call(null, coll);
    this__13526.__hash = h__2192__auto____13528;
    return h__2192__auto____13528
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13529 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13530 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__13531 = this;
  var v_pos__13532 = this__13531.start + key;
  return new cljs.core.Subvec(this__13531.meta, cljs.core._assoc.call(null, this__13531.v, v_pos__13532, val), this__13531.start, this__13531.end > v_pos__13532 + 1 ? this__13531.end : v_pos__13532 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__13558 = null;
  var G__13558__2 = function(this_sym13533, k) {
    var this__13535 = this;
    var this_sym13533__13536 = this;
    var coll__13537 = this_sym13533__13536;
    return coll__13537.cljs$core$ILookup$_lookup$arity$2(coll__13537, k)
  };
  var G__13558__3 = function(this_sym13534, k, not_found) {
    var this__13535 = this;
    var this_sym13534__13538 = this;
    var coll__13539 = this_sym13534__13538;
    return coll__13539.cljs$core$ILookup$_lookup$arity$3(coll__13539, k, not_found)
  };
  G__13558 = function(this_sym13534, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13558__2.call(this, this_sym13534, k);
      case 3:
        return G__13558__3.call(this, this_sym13534, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13558
}();
cljs.core.Subvec.prototype.apply = function(this_sym13524, args13525) {
  var this__13540 = this;
  return this_sym13524.call.apply(this_sym13524, [this_sym13524].concat(args13525.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13541 = this;
  return new cljs.core.Subvec(this__13541.meta, cljs.core._assoc_n.call(null, this__13541.v, this__13541.end, o), this__13541.start, this__13541.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__13542 = this;
  var this__13543 = this;
  return cljs.core.pr_str.call(null, this__13543)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__13544 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__13545 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13546 = this;
  var subvec_seq__13547 = function subvec_seq(i) {
    if(i === this__13546.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__13546.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__13547.call(null, this__13546.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13548 = this;
  return this__13548.end - this__13548.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13549 = this;
  return cljs.core._nth.call(null, this__13549.v, this__13549.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13550 = this;
  if(this__13550.start === this__13550.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__13550.meta, this__13550.v, this__13550.start, this__13550.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__13551 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13552 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13553 = this;
  return new cljs.core.Subvec(meta, this__13553.v, this__13553.start, this__13553.end, this__13553.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13554 = this;
  return this__13554.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13555 = this;
  return cljs.core._nth.call(null, this__13555.v, this__13555.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13556 = this;
  return cljs.core._nth.call(null, this__13556.v, this__13556.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13557 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__13557.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__13560 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__13560, 0, tl.length);
  return ret__13560
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__13564 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__13565 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__13564, subidx__13565, level === 5 ? tail_node : function() {
    var child__13566 = cljs.core.pv_aget.call(null, ret__13564, subidx__13565);
    if(!(child__13566 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__13566, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__13564
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__13571 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__13572 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__13573 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__13571, subidx__13572));
    if(function() {
      var and__3822__auto____13574 = new_child__13573 == null;
      if(and__3822__auto____13574) {
        return subidx__13572 === 0
      }else {
        return and__3822__auto____13574
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__13571, subidx__13572, new_child__13573);
      return node__13571
    }
  }else {
    if(subidx__13572 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__13571, subidx__13572, null);
        return node__13571
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____13579 = 0 <= i;
    if(and__3822__auto____13579) {
      return i < tv.cnt
    }else {
      return and__3822__auto____13579
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__13580 = tv.root;
      var node__13581 = root__13580;
      var level__13582 = tv.shift;
      while(true) {
        if(level__13582 > 0) {
          var G__13583 = cljs.core.tv_ensure_editable.call(null, root__13580.edit, cljs.core.pv_aget.call(null, node__13581, i >>> level__13582 & 31));
          var G__13584 = level__13582 - 5;
          node__13581 = G__13583;
          level__13582 = G__13584;
          continue
        }else {
          return node__13581.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13624 = null;
  var G__13624__2 = function(this_sym13587, k) {
    var this__13589 = this;
    var this_sym13587__13590 = this;
    var coll__13591 = this_sym13587__13590;
    return coll__13591.cljs$core$ILookup$_lookup$arity$2(coll__13591, k)
  };
  var G__13624__3 = function(this_sym13588, k, not_found) {
    var this__13589 = this;
    var this_sym13588__13592 = this;
    var coll__13593 = this_sym13588__13592;
    return coll__13593.cljs$core$ILookup$_lookup$arity$3(coll__13593, k, not_found)
  };
  G__13624 = function(this_sym13588, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13624__2.call(this, this_sym13588, k);
      case 3:
        return G__13624__3.call(this, this_sym13588, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13624
}();
cljs.core.TransientVector.prototype.apply = function(this_sym13585, args13586) {
  var this__13594 = this;
  return this_sym13585.call.apply(this_sym13585, [this_sym13585].concat(args13586.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13595 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13596 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__13597 = this;
  if(this__13597.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__13598 = this;
  if(function() {
    var and__3822__auto____13599 = 0 <= n;
    if(and__3822__auto____13599) {
      return n < this__13598.cnt
    }else {
      return and__3822__auto____13599
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13600 = this;
  if(this__13600.root.edit) {
    return this__13600.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__13601 = this;
  if(this__13601.root.edit) {
    if(function() {
      var and__3822__auto____13602 = 0 <= n;
      if(and__3822__auto____13602) {
        return n < this__13601.cnt
      }else {
        return and__3822__auto____13602
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__13601.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__13607 = function go(level, node) {
          var node__13605 = cljs.core.tv_ensure_editable.call(null, this__13601.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__13605, n & 31, val);
            return node__13605
          }else {
            var subidx__13606 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__13605, subidx__13606, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__13605, subidx__13606)));
            return node__13605
          }
        }.call(null, this__13601.shift, this__13601.root);
        this__13601.root = new_root__13607;
        return tcoll
      }
    }else {
      if(n === this__13601.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__13601.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__13608 = this;
  if(this__13608.root.edit) {
    if(this__13608.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__13608.cnt) {
        this__13608.cnt = 0;
        return tcoll
      }else {
        if((this__13608.cnt - 1 & 31) > 0) {
          this__13608.cnt = this__13608.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__13609 = cljs.core.editable_array_for.call(null, tcoll, this__13608.cnt - 2);
            var new_root__13611 = function() {
              var nr__13610 = cljs.core.tv_pop_tail.call(null, tcoll, this__13608.shift, this__13608.root);
              if(!(nr__13610 == null)) {
                return nr__13610
              }else {
                return new cljs.core.VectorNode(this__13608.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____13612 = 5 < this__13608.shift;
              if(and__3822__auto____13612) {
                return cljs.core.pv_aget.call(null, new_root__13611, 1) == null
              }else {
                return and__3822__auto____13612
              }
            }()) {
              var new_root__13613 = cljs.core.tv_ensure_editable.call(null, this__13608.root.edit, cljs.core.pv_aget.call(null, new_root__13611, 0));
              this__13608.root = new_root__13613;
              this__13608.shift = this__13608.shift - 5;
              this__13608.cnt = this__13608.cnt - 1;
              this__13608.tail = new_tail__13609;
              return tcoll
            }else {
              this__13608.root = new_root__13611;
              this__13608.cnt = this__13608.cnt - 1;
              this__13608.tail = new_tail__13609;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13614 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13615 = this;
  if(this__13615.root.edit) {
    if(this__13615.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__13615.tail[this__13615.cnt & 31] = o;
      this__13615.cnt = this__13615.cnt + 1;
      return tcoll
    }else {
      var tail_node__13616 = new cljs.core.VectorNode(this__13615.root.edit, this__13615.tail);
      var new_tail__13617 = cljs.core.make_array.call(null, 32);
      new_tail__13617[0] = o;
      this__13615.tail = new_tail__13617;
      if(this__13615.cnt >>> 5 > 1 << this__13615.shift) {
        var new_root_array__13618 = cljs.core.make_array.call(null, 32);
        var new_shift__13619 = this__13615.shift + 5;
        new_root_array__13618[0] = this__13615.root;
        new_root_array__13618[1] = cljs.core.new_path.call(null, this__13615.root.edit, this__13615.shift, tail_node__13616);
        this__13615.root = new cljs.core.VectorNode(this__13615.root.edit, new_root_array__13618);
        this__13615.shift = new_shift__13619;
        this__13615.cnt = this__13615.cnt + 1;
        return tcoll
      }else {
        var new_root__13620 = cljs.core.tv_push_tail.call(null, tcoll, this__13615.shift, this__13615.root, tail_node__13616);
        this__13615.root = new_root__13620;
        this__13615.cnt = this__13615.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13621 = this;
  if(this__13621.root.edit) {
    this__13621.root.edit = null;
    var len__13622 = this__13621.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__13623 = cljs.core.make_array.call(null, len__13622);
    cljs.core.array_copy.call(null, this__13621.tail, 0, trimmed_tail__13623, 0, len__13622);
    return new cljs.core.PersistentVector(null, this__13621.cnt, this__13621.shift, this__13621.root, trimmed_tail__13623, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13625 = this;
  var h__2192__auto____13626 = this__13625.__hash;
  if(!(h__2192__auto____13626 == null)) {
    return h__2192__auto____13626
  }else {
    var h__2192__auto____13627 = cljs.core.hash_coll.call(null, coll);
    this__13625.__hash = h__2192__auto____13627;
    return h__2192__auto____13627
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13628 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__13629 = this;
  var this__13630 = this;
  return cljs.core.pr_str.call(null, this__13630)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13631 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13632 = this;
  return cljs.core._first.call(null, this__13632.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13633 = this;
  var temp__3971__auto____13634 = cljs.core.next.call(null, this__13633.front);
  if(temp__3971__auto____13634) {
    var f1__13635 = temp__3971__auto____13634;
    return new cljs.core.PersistentQueueSeq(this__13633.meta, f1__13635, this__13633.rear, null)
  }else {
    if(this__13633.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__13633.meta, this__13633.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13636 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13637 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__13637.front, this__13637.rear, this__13637.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13638 = this;
  return this__13638.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13639 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__13639.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13640 = this;
  var h__2192__auto____13641 = this__13640.__hash;
  if(!(h__2192__auto____13641 == null)) {
    return h__2192__auto____13641
  }else {
    var h__2192__auto____13642 = cljs.core.hash_coll.call(null, coll);
    this__13640.__hash = h__2192__auto____13642;
    return h__2192__auto____13642
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__13643 = this;
  if(cljs.core.truth_(this__13643.front)) {
    return new cljs.core.PersistentQueue(this__13643.meta, this__13643.count + 1, this__13643.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____13644 = this__13643.rear;
      if(cljs.core.truth_(or__3824__auto____13644)) {
        return or__3824__auto____13644
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__13643.meta, this__13643.count + 1, cljs.core.conj.call(null, this__13643.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__13645 = this;
  var this__13646 = this;
  return cljs.core.pr_str.call(null, this__13646)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13647 = this;
  var rear__13648 = cljs.core.seq.call(null, this__13647.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____13649 = this__13647.front;
    if(cljs.core.truth_(or__3824__auto____13649)) {
      return or__3824__auto____13649
    }else {
      return rear__13648
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__13647.front, cljs.core.seq.call(null, rear__13648), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13650 = this;
  return this__13650.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__13651 = this;
  return cljs.core._first.call(null, this__13651.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__13652 = this;
  if(cljs.core.truth_(this__13652.front)) {
    var temp__3971__auto____13653 = cljs.core.next.call(null, this__13652.front);
    if(temp__3971__auto____13653) {
      var f1__13654 = temp__3971__auto____13653;
      return new cljs.core.PersistentQueue(this__13652.meta, this__13652.count - 1, f1__13654, this__13652.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__13652.meta, this__13652.count - 1, cljs.core.seq.call(null, this__13652.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__13655 = this;
  return cljs.core.first.call(null, this__13655.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__13656 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13657 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13658 = this;
  return new cljs.core.PersistentQueue(meta, this__13658.count, this__13658.front, this__13658.rear, this__13658.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13659 = this;
  return this__13659.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13660 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__13661 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__13664 = array.length;
  var i__13665 = 0;
  while(true) {
    if(i__13665 < len__13664) {
      if(k === array[i__13665]) {
        return i__13665
      }else {
        var G__13666 = i__13665 + incr;
        i__13665 = G__13666;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__13669 = cljs.core.hash.call(null, a);
  var b__13670 = cljs.core.hash.call(null, b);
  if(a__13669 < b__13670) {
    return-1
  }else {
    if(a__13669 > b__13670) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__13678 = m.keys;
  var len__13679 = ks__13678.length;
  var so__13680 = m.strobj;
  var out__13681 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__13682 = 0;
  var out__13683 = cljs.core.transient$.call(null, out__13681);
  while(true) {
    if(i__13682 < len__13679) {
      var k__13684 = ks__13678[i__13682];
      var G__13685 = i__13682 + 1;
      var G__13686 = cljs.core.assoc_BANG_.call(null, out__13683, k__13684, so__13680[k__13684]);
      i__13682 = G__13685;
      out__13683 = G__13686;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__13683, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__13692 = {};
  var l__13693 = ks.length;
  var i__13694 = 0;
  while(true) {
    if(i__13694 < l__13693) {
      var k__13695 = ks[i__13694];
      new_obj__13692[k__13695] = obj[k__13695];
      var G__13696 = i__13694 + 1;
      i__13694 = G__13696;
      continue
    }else {
    }
    break
  }
  return new_obj__13692
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13699 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13700 = this;
  var h__2192__auto____13701 = this__13700.__hash;
  if(!(h__2192__auto____13701 == null)) {
    return h__2192__auto____13701
  }else {
    var h__2192__auto____13702 = cljs.core.hash_imap.call(null, coll);
    this__13700.__hash = h__2192__auto____13702;
    return h__2192__auto____13702
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13703 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13704 = this;
  if(function() {
    var and__3822__auto____13705 = goog.isString(k);
    if(and__3822__auto____13705) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13704.keys) == null)
    }else {
      return and__3822__auto____13705
    }
  }()) {
    return this__13704.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13706 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____13707 = this__13706.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____13707) {
        return or__3824__auto____13707
      }else {
        return this__13706.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__13706.keys) == null)) {
        var new_strobj__13708 = cljs.core.obj_clone.call(null, this__13706.strobj, this__13706.keys);
        new_strobj__13708[k] = v;
        return new cljs.core.ObjMap(this__13706.meta, this__13706.keys, new_strobj__13708, this__13706.update_count + 1, null)
      }else {
        var new_strobj__13709 = cljs.core.obj_clone.call(null, this__13706.strobj, this__13706.keys);
        var new_keys__13710 = this__13706.keys.slice();
        new_strobj__13709[k] = v;
        new_keys__13710.push(k);
        return new cljs.core.ObjMap(this__13706.meta, new_keys__13710, new_strobj__13709, this__13706.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13711 = this;
  if(function() {
    var and__3822__auto____13712 = goog.isString(k);
    if(and__3822__auto____13712) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13711.keys) == null)
    }else {
      return and__3822__auto____13712
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13734 = null;
  var G__13734__2 = function(this_sym13713, k) {
    var this__13715 = this;
    var this_sym13713__13716 = this;
    var coll__13717 = this_sym13713__13716;
    return coll__13717.cljs$core$ILookup$_lookup$arity$2(coll__13717, k)
  };
  var G__13734__3 = function(this_sym13714, k, not_found) {
    var this__13715 = this;
    var this_sym13714__13718 = this;
    var coll__13719 = this_sym13714__13718;
    return coll__13719.cljs$core$ILookup$_lookup$arity$3(coll__13719, k, not_found)
  };
  G__13734 = function(this_sym13714, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13734__2.call(this, this_sym13714, k);
      case 3:
        return G__13734__3.call(this, this_sym13714, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13734
}();
cljs.core.ObjMap.prototype.apply = function(this_sym13697, args13698) {
  var this__13720 = this;
  return this_sym13697.call.apply(this_sym13697, [this_sym13697].concat(args13698.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13721 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__13722 = this;
  var this__13723 = this;
  return cljs.core.pr_str.call(null, this__13723)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13724 = this;
  if(this__13724.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__13687_SHARP_) {
      return cljs.core.vector.call(null, p1__13687_SHARP_, this__13724.strobj[p1__13687_SHARP_])
    }, this__13724.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13725 = this;
  return this__13725.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13726 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13727 = this;
  return new cljs.core.ObjMap(meta, this__13727.keys, this__13727.strobj, this__13727.update_count, this__13727.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13728 = this;
  return this__13728.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13729 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__13729.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13730 = this;
  if(function() {
    var and__3822__auto____13731 = goog.isString(k);
    if(and__3822__auto____13731) {
      return!(cljs.core.scan_array.call(null, 1, k, this__13730.keys) == null)
    }else {
      return and__3822__auto____13731
    }
  }()) {
    var new_keys__13732 = this__13730.keys.slice();
    var new_strobj__13733 = cljs.core.obj_clone.call(null, this__13730.strobj, this__13730.keys);
    new_keys__13732.splice(cljs.core.scan_array.call(null, 1, k, new_keys__13732), 1);
    cljs.core.js_delete.call(null, new_strobj__13733, k);
    return new cljs.core.ObjMap(this__13730.meta, new_keys__13732, new_strobj__13733, this__13730.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13738 = this;
  var h__2192__auto____13739 = this__13738.__hash;
  if(!(h__2192__auto____13739 == null)) {
    return h__2192__auto____13739
  }else {
    var h__2192__auto____13740 = cljs.core.hash_imap.call(null, coll);
    this__13738.__hash = h__2192__auto____13740;
    return h__2192__auto____13740
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13741 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13742 = this;
  var bucket__13743 = this__13742.hashobj[cljs.core.hash.call(null, k)];
  var i__13744 = cljs.core.truth_(bucket__13743) ? cljs.core.scan_array.call(null, 2, k, bucket__13743) : null;
  if(cljs.core.truth_(i__13744)) {
    return bucket__13743[i__13744 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13745 = this;
  var h__13746 = cljs.core.hash.call(null, k);
  var bucket__13747 = this__13745.hashobj[h__13746];
  if(cljs.core.truth_(bucket__13747)) {
    var new_bucket__13748 = bucket__13747.slice();
    var new_hashobj__13749 = goog.object.clone(this__13745.hashobj);
    new_hashobj__13749[h__13746] = new_bucket__13748;
    var temp__3971__auto____13750 = cljs.core.scan_array.call(null, 2, k, new_bucket__13748);
    if(cljs.core.truth_(temp__3971__auto____13750)) {
      var i__13751 = temp__3971__auto____13750;
      new_bucket__13748[i__13751 + 1] = v;
      return new cljs.core.HashMap(this__13745.meta, this__13745.count, new_hashobj__13749, null)
    }else {
      new_bucket__13748.push(k, v);
      return new cljs.core.HashMap(this__13745.meta, this__13745.count + 1, new_hashobj__13749, null)
    }
  }else {
    var new_hashobj__13752 = goog.object.clone(this__13745.hashobj);
    new_hashobj__13752[h__13746] = [k, v];
    return new cljs.core.HashMap(this__13745.meta, this__13745.count + 1, new_hashobj__13752, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13753 = this;
  var bucket__13754 = this__13753.hashobj[cljs.core.hash.call(null, k)];
  var i__13755 = cljs.core.truth_(bucket__13754) ? cljs.core.scan_array.call(null, 2, k, bucket__13754) : null;
  if(cljs.core.truth_(i__13755)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__13780 = null;
  var G__13780__2 = function(this_sym13756, k) {
    var this__13758 = this;
    var this_sym13756__13759 = this;
    var coll__13760 = this_sym13756__13759;
    return coll__13760.cljs$core$ILookup$_lookup$arity$2(coll__13760, k)
  };
  var G__13780__3 = function(this_sym13757, k, not_found) {
    var this__13758 = this;
    var this_sym13757__13761 = this;
    var coll__13762 = this_sym13757__13761;
    return coll__13762.cljs$core$ILookup$_lookup$arity$3(coll__13762, k, not_found)
  };
  G__13780 = function(this_sym13757, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13780__2.call(this, this_sym13757, k);
      case 3:
        return G__13780__3.call(this, this_sym13757, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13780
}();
cljs.core.HashMap.prototype.apply = function(this_sym13736, args13737) {
  var this__13763 = this;
  return this_sym13736.call.apply(this_sym13736, [this_sym13736].concat(args13737.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13764 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__13765 = this;
  var this__13766 = this;
  return cljs.core.pr_str.call(null, this__13766)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13767 = this;
  if(this__13767.count > 0) {
    var hashes__13768 = cljs.core.js_keys.call(null, this__13767.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__13735_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__13767.hashobj[p1__13735_SHARP_]))
    }, hashes__13768)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13769 = this;
  return this__13769.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13770 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13771 = this;
  return new cljs.core.HashMap(meta, this__13771.count, this__13771.hashobj, this__13771.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13772 = this;
  return this__13772.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13773 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__13773.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13774 = this;
  var h__13775 = cljs.core.hash.call(null, k);
  var bucket__13776 = this__13774.hashobj[h__13775];
  var i__13777 = cljs.core.truth_(bucket__13776) ? cljs.core.scan_array.call(null, 2, k, bucket__13776) : null;
  if(cljs.core.not.call(null, i__13777)) {
    return coll
  }else {
    var new_hashobj__13778 = goog.object.clone(this__13774.hashobj);
    if(3 > bucket__13776.length) {
      cljs.core.js_delete.call(null, new_hashobj__13778, h__13775)
    }else {
      var new_bucket__13779 = bucket__13776.slice();
      new_bucket__13779.splice(i__13777, 2);
      new_hashobj__13778[h__13775] = new_bucket__13779
    }
    return new cljs.core.HashMap(this__13774.meta, this__13774.count - 1, new_hashobj__13778, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__13781 = ks.length;
  var i__13782 = 0;
  var out__13783 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__13782 < len__13781) {
      var G__13784 = i__13782 + 1;
      var G__13785 = cljs.core.assoc.call(null, out__13783, ks[i__13782], vs[i__13782]);
      i__13782 = G__13784;
      out__13783 = G__13785;
      continue
    }else {
      return out__13783
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__13789 = m.arr;
  var len__13790 = arr__13789.length;
  var i__13791 = 0;
  while(true) {
    if(len__13790 <= i__13791) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__13789[i__13791], k)) {
        return i__13791
      }else {
        if("\ufdd0'else") {
          var G__13792 = i__13791 + 2;
          i__13791 = G__13792;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__13795 = this;
  return new cljs.core.TransientArrayMap({}, this__13795.arr.length, this__13795.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__13796 = this;
  var h__2192__auto____13797 = this__13796.__hash;
  if(!(h__2192__auto____13797 == null)) {
    return h__2192__auto____13797
  }else {
    var h__2192__auto____13798 = cljs.core.hash_imap.call(null, coll);
    this__13796.__hash = h__2192__auto____13798;
    return h__2192__auto____13798
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__13799 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__13800 = this;
  var idx__13801 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13801 === -1) {
    return not_found
  }else {
    return this__13800.arr[idx__13801 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__13802 = this;
  var idx__13803 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13803 === -1) {
    if(this__13802.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__13802.meta, this__13802.cnt + 1, function() {
        var G__13804__13805 = this__13802.arr.slice();
        G__13804__13805.push(k);
        G__13804__13805.push(v);
        return G__13804__13805
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__13802.arr[idx__13803 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__13802.meta, this__13802.cnt, function() {
          var G__13806__13807 = this__13802.arr.slice();
          G__13806__13807[idx__13803 + 1] = v;
          return G__13806__13807
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__13808 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13840 = null;
  var G__13840__2 = function(this_sym13809, k) {
    var this__13811 = this;
    var this_sym13809__13812 = this;
    var coll__13813 = this_sym13809__13812;
    return coll__13813.cljs$core$ILookup$_lookup$arity$2(coll__13813, k)
  };
  var G__13840__3 = function(this_sym13810, k, not_found) {
    var this__13811 = this;
    var this_sym13810__13814 = this;
    var coll__13815 = this_sym13810__13814;
    return coll__13815.cljs$core$ILookup$_lookup$arity$3(coll__13815, k, not_found)
  };
  G__13840 = function(this_sym13810, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13840__2.call(this, this_sym13810, k);
      case 3:
        return G__13840__3.call(this, this_sym13810, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13840
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym13793, args13794) {
  var this__13816 = this;
  return this_sym13793.call.apply(this_sym13793, [this_sym13793].concat(args13794.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__13817 = this;
  var len__13818 = this__13817.arr.length;
  var i__13819 = 0;
  var init__13820 = init;
  while(true) {
    if(i__13819 < len__13818) {
      var init__13821 = f.call(null, init__13820, this__13817.arr[i__13819], this__13817.arr[i__13819 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__13821)) {
        return cljs.core.deref.call(null, init__13821)
      }else {
        var G__13841 = i__13819 + 2;
        var G__13842 = init__13821;
        i__13819 = G__13841;
        init__13820 = G__13842;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__13822 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__13823 = this;
  var this__13824 = this;
  return cljs.core.pr_str.call(null, this__13824)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__13825 = this;
  if(this__13825.cnt > 0) {
    var len__13826 = this__13825.arr.length;
    var array_map_seq__13827 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__13826) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__13825.arr[i], this__13825.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__13827.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__13828 = this;
  return this__13828.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__13829 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__13830 = this;
  return new cljs.core.PersistentArrayMap(meta, this__13830.cnt, this__13830.arr, this__13830.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__13831 = this;
  return this__13831.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__13832 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__13832.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__13833 = this;
  var idx__13834 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__13834 >= 0) {
    var len__13835 = this__13833.arr.length;
    var new_len__13836 = len__13835 - 2;
    if(new_len__13836 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__13837 = cljs.core.make_array.call(null, new_len__13836);
      var s__13838 = 0;
      var d__13839 = 0;
      while(true) {
        if(s__13838 >= len__13835) {
          return new cljs.core.PersistentArrayMap(this__13833.meta, this__13833.cnt - 1, new_arr__13837, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__13833.arr[s__13838])) {
            var G__13843 = s__13838 + 2;
            var G__13844 = d__13839;
            s__13838 = G__13843;
            d__13839 = G__13844;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__13837[d__13839] = this__13833.arr[s__13838];
              new_arr__13837[d__13839 + 1] = this__13833.arr[s__13838 + 1];
              var G__13845 = s__13838 + 2;
              var G__13846 = d__13839 + 2;
              s__13838 = G__13845;
              d__13839 = G__13846;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__13847 = cljs.core.count.call(null, ks);
  var i__13848 = 0;
  var out__13849 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__13848 < len__13847) {
      var G__13850 = i__13848 + 1;
      var G__13851 = cljs.core.assoc_BANG_.call(null, out__13849, ks[i__13848], vs[i__13848]);
      i__13848 = G__13850;
      out__13849 = G__13851;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__13849)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__13852 = this;
  if(cljs.core.truth_(this__13852.editable_QMARK_)) {
    var idx__13853 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13853 >= 0) {
      this__13852.arr[idx__13853] = this__13852.arr[this__13852.len - 2];
      this__13852.arr[idx__13853 + 1] = this__13852.arr[this__13852.len - 1];
      var G__13854__13855 = this__13852.arr;
      G__13854__13855.pop();
      G__13854__13855.pop();
      G__13854__13855;
      this__13852.len = this__13852.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__13856 = this;
  if(cljs.core.truth_(this__13856.editable_QMARK_)) {
    var idx__13857 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__13857 === -1) {
      if(this__13856.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__13856.len = this__13856.len + 2;
        this__13856.arr.push(key);
        this__13856.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__13856.len, this__13856.arr), key, val)
      }
    }else {
      if(val === this__13856.arr[idx__13857 + 1]) {
        return tcoll
      }else {
        this__13856.arr[idx__13857 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__13858 = this;
  if(cljs.core.truth_(this__13858.editable_QMARK_)) {
    if(function() {
      var G__13859__13860 = o;
      if(G__13859__13860) {
        if(function() {
          var or__3824__auto____13861 = G__13859__13860.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____13861) {
            return or__3824__auto____13861
          }else {
            return G__13859__13860.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13859__13860.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13859__13860)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13859__13860)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__13862 = cljs.core.seq.call(null, o);
      var tcoll__13863 = tcoll;
      while(true) {
        var temp__3971__auto____13864 = cljs.core.first.call(null, es__13862);
        if(cljs.core.truth_(temp__3971__auto____13864)) {
          var e__13865 = temp__3971__auto____13864;
          var G__13871 = cljs.core.next.call(null, es__13862);
          var G__13872 = tcoll__13863.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__13863, cljs.core.key.call(null, e__13865), cljs.core.val.call(null, e__13865));
          es__13862 = G__13871;
          tcoll__13863 = G__13872;
          continue
        }else {
          return tcoll__13863
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__13866 = this;
  if(cljs.core.truth_(this__13866.editable_QMARK_)) {
    this__13866.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__13866.len, 2), this__13866.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__13867 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__13868 = this;
  if(cljs.core.truth_(this__13868.editable_QMARK_)) {
    var idx__13869 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__13869 === -1) {
      return not_found
    }else {
      return this__13868.arr[idx__13869 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__13870 = this;
  if(cljs.core.truth_(this__13870.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__13870.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__13875 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__13876 = 0;
  while(true) {
    if(i__13876 < len) {
      var G__13877 = cljs.core.assoc_BANG_.call(null, out__13875, arr[i__13876], arr[i__13876 + 1]);
      var G__13878 = i__13876 + 2;
      out__13875 = G__13877;
      i__13876 = G__13878;
      continue
    }else {
      return out__13875
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13883__13884 = arr.slice();
    G__13883__13884[i] = a;
    return G__13883__13884
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13885__13886 = arr.slice();
    G__13885__13886[i] = a;
    G__13885__13886[j] = b;
    return G__13885__13886
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__13888 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__13888, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__13888, 2 * i, new_arr__13888.length - 2 * i);
  return new_arr__13888
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__13891 = inode.ensure_editable(edit);
    editable__13891.arr[i] = a;
    return editable__13891
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__13892 = inode.ensure_editable(edit);
    editable__13892.arr[i] = a;
    editable__13892.arr[j] = b;
    return editable__13892
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__13899 = arr.length;
  var i__13900 = 0;
  var init__13901 = init;
  while(true) {
    if(i__13900 < len__13899) {
      var init__13904 = function() {
        var k__13902 = arr[i__13900];
        if(!(k__13902 == null)) {
          return f.call(null, init__13901, k__13902, arr[i__13900 + 1])
        }else {
          var node__13903 = arr[i__13900 + 1];
          if(!(node__13903 == null)) {
            return node__13903.kv_reduce(f, init__13901)
          }else {
            return init__13901
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__13904)) {
        return cljs.core.deref.call(null, init__13904)
      }else {
        var G__13905 = i__13900 + 2;
        var G__13906 = init__13904;
        i__13900 = G__13905;
        init__13901 = G__13906;
        continue
      }
    }else {
      return init__13901
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__13907 = this;
  var inode__13908 = this;
  if(this__13907.bitmap === bit) {
    return null
  }else {
    var editable__13909 = inode__13908.ensure_editable(e);
    var earr__13910 = editable__13909.arr;
    var len__13911 = earr__13910.length;
    editable__13909.bitmap = bit ^ editable__13909.bitmap;
    cljs.core.array_copy.call(null, earr__13910, 2 * (i + 1), earr__13910, 2 * i, len__13911 - 2 * (i + 1));
    earr__13910[len__13911 - 2] = null;
    earr__13910[len__13911 - 1] = null;
    return editable__13909
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__13912 = this;
  var inode__13913 = this;
  var bit__13914 = 1 << (hash >>> shift & 31);
  var idx__13915 = cljs.core.bitmap_indexed_node_index.call(null, this__13912.bitmap, bit__13914);
  if((this__13912.bitmap & bit__13914) === 0) {
    var n__13916 = cljs.core.bit_count.call(null, this__13912.bitmap);
    if(2 * n__13916 < this__13912.arr.length) {
      var editable__13917 = inode__13913.ensure_editable(edit);
      var earr__13918 = editable__13917.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__13918, 2 * idx__13915, earr__13918, 2 * (idx__13915 + 1), 2 * (n__13916 - idx__13915));
      earr__13918[2 * idx__13915] = key;
      earr__13918[2 * idx__13915 + 1] = val;
      editable__13917.bitmap = editable__13917.bitmap | bit__13914;
      return editable__13917
    }else {
      if(n__13916 >= 16) {
        var nodes__13919 = cljs.core.make_array.call(null, 32);
        var jdx__13920 = hash >>> shift & 31;
        nodes__13919[jdx__13920] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__13921 = 0;
        var j__13922 = 0;
        while(true) {
          if(i__13921 < 32) {
            if((this__13912.bitmap >>> i__13921 & 1) === 0) {
              var G__13975 = i__13921 + 1;
              var G__13976 = j__13922;
              i__13921 = G__13975;
              j__13922 = G__13976;
              continue
            }else {
              nodes__13919[i__13921] = !(this__13912.arr[j__13922] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__13912.arr[j__13922]), this__13912.arr[j__13922], this__13912.arr[j__13922 + 1], added_leaf_QMARK_) : this__13912.arr[j__13922 + 1];
              var G__13977 = i__13921 + 1;
              var G__13978 = j__13922 + 2;
              i__13921 = G__13977;
              j__13922 = G__13978;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__13916 + 1, nodes__13919)
      }else {
        if("\ufdd0'else") {
          var new_arr__13923 = cljs.core.make_array.call(null, 2 * (n__13916 + 4));
          cljs.core.array_copy.call(null, this__13912.arr, 0, new_arr__13923, 0, 2 * idx__13915);
          new_arr__13923[2 * idx__13915] = key;
          new_arr__13923[2 * idx__13915 + 1] = val;
          cljs.core.array_copy.call(null, this__13912.arr, 2 * idx__13915, new_arr__13923, 2 * (idx__13915 + 1), 2 * (n__13916 - idx__13915));
          added_leaf_QMARK_.val = true;
          var editable__13924 = inode__13913.ensure_editable(edit);
          editable__13924.arr = new_arr__13923;
          editable__13924.bitmap = editable__13924.bitmap | bit__13914;
          return editable__13924
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__13925 = this__13912.arr[2 * idx__13915];
    var val_or_node__13926 = this__13912.arr[2 * idx__13915 + 1];
    if(key_or_nil__13925 == null) {
      var n__13927 = val_or_node__13926.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13927 === val_or_node__13926) {
        return inode__13913
      }else {
        return cljs.core.edit_and_set.call(null, inode__13913, edit, 2 * idx__13915 + 1, n__13927)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13925)) {
        if(val === val_or_node__13926) {
          return inode__13913
        }else {
          return cljs.core.edit_and_set.call(null, inode__13913, edit, 2 * idx__13915 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__13913, edit, 2 * idx__13915, null, 2 * idx__13915 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__13925, val_or_node__13926, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__13928 = this;
  var inode__13929 = this;
  return cljs.core.create_inode_seq.call(null, this__13928.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__13930 = this;
  var inode__13931 = this;
  var bit__13932 = 1 << (hash >>> shift & 31);
  if((this__13930.bitmap & bit__13932) === 0) {
    return inode__13931
  }else {
    var idx__13933 = cljs.core.bitmap_indexed_node_index.call(null, this__13930.bitmap, bit__13932);
    var key_or_nil__13934 = this__13930.arr[2 * idx__13933];
    var val_or_node__13935 = this__13930.arr[2 * idx__13933 + 1];
    if(key_or_nil__13934 == null) {
      var n__13936 = val_or_node__13935.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__13936 === val_or_node__13935) {
        return inode__13931
      }else {
        if(!(n__13936 == null)) {
          return cljs.core.edit_and_set.call(null, inode__13931, edit, 2 * idx__13933 + 1, n__13936)
        }else {
          if(this__13930.bitmap === bit__13932) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__13931.edit_and_remove_pair(edit, bit__13932, idx__13933)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13934)) {
        removed_leaf_QMARK_[0] = true;
        return inode__13931.edit_and_remove_pair(edit, bit__13932, idx__13933)
      }else {
        if("\ufdd0'else") {
          return inode__13931
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__13937 = this;
  var inode__13938 = this;
  if(e === this__13937.edit) {
    return inode__13938
  }else {
    var n__13939 = cljs.core.bit_count.call(null, this__13937.bitmap);
    var new_arr__13940 = cljs.core.make_array.call(null, n__13939 < 0 ? 4 : 2 * (n__13939 + 1));
    cljs.core.array_copy.call(null, this__13937.arr, 0, new_arr__13940, 0, 2 * n__13939);
    return new cljs.core.BitmapIndexedNode(e, this__13937.bitmap, new_arr__13940)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__13941 = this;
  var inode__13942 = this;
  return cljs.core.inode_kv_reduce.call(null, this__13941.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__13943 = this;
  var inode__13944 = this;
  var bit__13945 = 1 << (hash >>> shift & 31);
  if((this__13943.bitmap & bit__13945) === 0) {
    return not_found
  }else {
    var idx__13946 = cljs.core.bitmap_indexed_node_index.call(null, this__13943.bitmap, bit__13945);
    var key_or_nil__13947 = this__13943.arr[2 * idx__13946];
    var val_or_node__13948 = this__13943.arr[2 * idx__13946 + 1];
    if(key_or_nil__13947 == null) {
      return val_or_node__13948.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13947)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__13947, val_or_node__13948], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__13949 = this;
  var inode__13950 = this;
  var bit__13951 = 1 << (hash >>> shift & 31);
  if((this__13949.bitmap & bit__13951) === 0) {
    return inode__13950
  }else {
    var idx__13952 = cljs.core.bitmap_indexed_node_index.call(null, this__13949.bitmap, bit__13951);
    var key_or_nil__13953 = this__13949.arr[2 * idx__13952];
    var val_or_node__13954 = this__13949.arr[2 * idx__13952 + 1];
    if(key_or_nil__13953 == null) {
      var n__13955 = val_or_node__13954.inode_without(shift + 5, hash, key);
      if(n__13955 === val_or_node__13954) {
        return inode__13950
      }else {
        if(!(n__13955 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__13949.bitmap, cljs.core.clone_and_set.call(null, this__13949.arr, 2 * idx__13952 + 1, n__13955))
        }else {
          if(this__13949.bitmap === bit__13951) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__13949.bitmap ^ bit__13951, cljs.core.remove_pair.call(null, this__13949.arr, idx__13952))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13953)) {
        return new cljs.core.BitmapIndexedNode(null, this__13949.bitmap ^ bit__13951, cljs.core.remove_pair.call(null, this__13949.arr, idx__13952))
      }else {
        if("\ufdd0'else") {
          return inode__13950
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__13956 = this;
  var inode__13957 = this;
  var bit__13958 = 1 << (hash >>> shift & 31);
  var idx__13959 = cljs.core.bitmap_indexed_node_index.call(null, this__13956.bitmap, bit__13958);
  if((this__13956.bitmap & bit__13958) === 0) {
    var n__13960 = cljs.core.bit_count.call(null, this__13956.bitmap);
    if(n__13960 >= 16) {
      var nodes__13961 = cljs.core.make_array.call(null, 32);
      var jdx__13962 = hash >>> shift & 31;
      nodes__13961[jdx__13962] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__13963 = 0;
      var j__13964 = 0;
      while(true) {
        if(i__13963 < 32) {
          if((this__13956.bitmap >>> i__13963 & 1) === 0) {
            var G__13979 = i__13963 + 1;
            var G__13980 = j__13964;
            i__13963 = G__13979;
            j__13964 = G__13980;
            continue
          }else {
            nodes__13961[i__13963] = !(this__13956.arr[j__13964] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__13956.arr[j__13964]), this__13956.arr[j__13964], this__13956.arr[j__13964 + 1], added_leaf_QMARK_) : this__13956.arr[j__13964 + 1];
            var G__13981 = i__13963 + 1;
            var G__13982 = j__13964 + 2;
            i__13963 = G__13981;
            j__13964 = G__13982;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__13960 + 1, nodes__13961)
    }else {
      var new_arr__13965 = cljs.core.make_array.call(null, 2 * (n__13960 + 1));
      cljs.core.array_copy.call(null, this__13956.arr, 0, new_arr__13965, 0, 2 * idx__13959);
      new_arr__13965[2 * idx__13959] = key;
      new_arr__13965[2 * idx__13959 + 1] = val;
      cljs.core.array_copy.call(null, this__13956.arr, 2 * idx__13959, new_arr__13965, 2 * (idx__13959 + 1), 2 * (n__13960 - idx__13959));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__13956.bitmap | bit__13958, new_arr__13965)
    }
  }else {
    var key_or_nil__13966 = this__13956.arr[2 * idx__13959];
    var val_or_node__13967 = this__13956.arr[2 * idx__13959 + 1];
    if(key_or_nil__13966 == null) {
      var n__13968 = val_or_node__13967.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__13968 === val_or_node__13967) {
        return inode__13957
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__13956.bitmap, cljs.core.clone_and_set.call(null, this__13956.arr, 2 * idx__13959 + 1, n__13968))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13966)) {
        if(val === val_or_node__13967) {
          return inode__13957
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__13956.bitmap, cljs.core.clone_and_set.call(null, this__13956.arr, 2 * idx__13959 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__13956.bitmap, cljs.core.clone_and_set.call(null, this__13956.arr, 2 * idx__13959, null, 2 * idx__13959 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__13966, val_or_node__13967, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__13969 = this;
  var inode__13970 = this;
  var bit__13971 = 1 << (hash >>> shift & 31);
  if((this__13969.bitmap & bit__13971) === 0) {
    return not_found
  }else {
    var idx__13972 = cljs.core.bitmap_indexed_node_index.call(null, this__13969.bitmap, bit__13971);
    var key_or_nil__13973 = this__13969.arr[2 * idx__13972];
    var val_or_node__13974 = this__13969.arr[2 * idx__13972 + 1];
    if(key_or_nil__13973 == null) {
      return val_or_node__13974.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__13973)) {
        return val_or_node__13974
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__13990 = array_node.arr;
  var len__13991 = 2 * (array_node.cnt - 1);
  var new_arr__13992 = cljs.core.make_array.call(null, len__13991);
  var i__13993 = 0;
  var j__13994 = 1;
  var bitmap__13995 = 0;
  while(true) {
    if(i__13993 < len__13991) {
      if(function() {
        var and__3822__auto____13996 = !(i__13993 === idx);
        if(and__3822__auto____13996) {
          return!(arr__13990[i__13993] == null)
        }else {
          return and__3822__auto____13996
        }
      }()) {
        new_arr__13992[j__13994] = arr__13990[i__13993];
        var G__13997 = i__13993 + 1;
        var G__13998 = j__13994 + 2;
        var G__13999 = bitmap__13995 | 1 << i__13993;
        i__13993 = G__13997;
        j__13994 = G__13998;
        bitmap__13995 = G__13999;
        continue
      }else {
        var G__14000 = i__13993 + 1;
        var G__14001 = j__13994;
        var G__14002 = bitmap__13995;
        i__13993 = G__14000;
        j__13994 = G__14001;
        bitmap__13995 = G__14002;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__13995, new_arr__13992)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14003 = this;
  var inode__14004 = this;
  var idx__14005 = hash >>> shift & 31;
  var node__14006 = this__14003.arr[idx__14005];
  if(node__14006 == null) {
    var editable__14007 = cljs.core.edit_and_set.call(null, inode__14004, edit, idx__14005, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__14007.cnt = editable__14007.cnt + 1;
    return editable__14007
  }else {
    var n__14008 = node__14006.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14008 === node__14006) {
      return inode__14004
    }else {
      return cljs.core.edit_and_set.call(null, inode__14004, edit, idx__14005, n__14008)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__14009 = this;
  var inode__14010 = this;
  return cljs.core.create_array_node_seq.call(null, this__14009.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14011 = this;
  var inode__14012 = this;
  var idx__14013 = hash >>> shift & 31;
  var node__14014 = this__14011.arr[idx__14013];
  if(node__14014 == null) {
    return inode__14012
  }else {
    var n__14015 = node__14014.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__14015 === node__14014) {
      return inode__14012
    }else {
      if(n__14015 == null) {
        if(this__14011.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14012, edit, idx__14013)
        }else {
          var editable__14016 = cljs.core.edit_and_set.call(null, inode__14012, edit, idx__14013, n__14015);
          editable__14016.cnt = editable__14016.cnt - 1;
          return editable__14016
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__14012, edit, idx__14013, n__14015)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__14017 = this;
  var inode__14018 = this;
  if(e === this__14017.edit) {
    return inode__14018
  }else {
    return new cljs.core.ArrayNode(e, this__14017.cnt, this__14017.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__14019 = this;
  var inode__14020 = this;
  var len__14021 = this__14019.arr.length;
  var i__14022 = 0;
  var init__14023 = init;
  while(true) {
    if(i__14022 < len__14021) {
      var node__14024 = this__14019.arr[i__14022];
      if(!(node__14024 == null)) {
        var init__14025 = node__14024.kv_reduce(f, init__14023);
        if(cljs.core.reduced_QMARK_.call(null, init__14025)) {
          return cljs.core.deref.call(null, init__14025)
        }else {
          var G__14044 = i__14022 + 1;
          var G__14045 = init__14025;
          i__14022 = G__14044;
          init__14023 = G__14045;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__14023
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14026 = this;
  var inode__14027 = this;
  var idx__14028 = hash >>> shift & 31;
  var node__14029 = this__14026.arr[idx__14028];
  if(!(node__14029 == null)) {
    return node__14029.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__14030 = this;
  var inode__14031 = this;
  var idx__14032 = hash >>> shift & 31;
  var node__14033 = this__14030.arr[idx__14032];
  if(!(node__14033 == null)) {
    var n__14034 = node__14033.inode_without(shift + 5, hash, key);
    if(n__14034 === node__14033) {
      return inode__14031
    }else {
      if(n__14034 == null) {
        if(this__14030.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__14031, null, idx__14032)
        }else {
          return new cljs.core.ArrayNode(null, this__14030.cnt - 1, cljs.core.clone_and_set.call(null, this__14030.arr, idx__14032, n__14034))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__14030.cnt, cljs.core.clone_and_set.call(null, this__14030.arr, idx__14032, n__14034))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__14031
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14035 = this;
  var inode__14036 = this;
  var idx__14037 = hash >>> shift & 31;
  var node__14038 = this__14035.arr[idx__14037];
  if(node__14038 == null) {
    return new cljs.core.ArrayNode(null, this__14035.cnt + 1, cljs.core.clone_and_set.call(null, this__14035.arr, idx__14037, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__14039 = node__14038.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__14039 === node__14038) {
      return inode__14036
    }else {
      return new cljs.core.ArrayNode(null, this__14035.cnt, cljs.core.clone_and_set.call(null, this__14035.arr, idx__14037, n__14039))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14040 = this;
  var inode__14041 = this;
  var idx__14042 = hash >>> shift & 31;
  var node__14043 = this__14040.arr[idx__14042];
  if(!(node__14043 == null)) {
    return node__14043.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__14048 = 2 * cnt;
  var i__14049 = 0;
  while(true) {
    if(i__14049 < lim__14048) {
      if(cljs.core.key_test.call(null, key, arr[i__14049])) {
        return i__14049
      }else {
        var G__14050 = i__14049 + 2;
        i__14049 = G__14050;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__14051 = this;
  var inode__14052 = this;
  if(hash === this__14051.collision_hash) {
    var idx__14053 = cljs.core.hash_collision_node_find_index.call(null, this__14051.arr, this__14051.cnt, key);
    if(idx__14053 === -1) {
      if(this__14051.arr.length > 2 * this__14051.cnt) {
        var editable__14054 = cljs.core.edit_and_set.call(null, inode__14052, edit, 2 * this__14051.cnt, key, 2 * this__14051.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__14054.cnt = editable__14054.cnt + 1;
        return editable__14054
      }else {
        var len__14055 = this__14051.arr.length;
        var new_arr__14056 = cljs.core.make_array.call(null, len__14055 + 2);
        cljs.core.array_copy.call(null, this__14051.arr, 0, new_arr__14056, 0, len__14055);
        new_arr__14056[len__14055] = key;
        new_arr__14056[len__14055 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__14052.ensure_editable_array(edit, this__14051.cnt + 1, new_arr__14056)
      }
    }else {
      if(this__14051.arr[idx__14053 + 1] === val) {
        return inode__14052
      }else {
        return cljs.core.edit_and_set.call(null, inode__14052, edit, idx__14053 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__14051.collision_hash >>> shift & 31), [null, inode__14052, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__14057 = this;
  var inode__14058 = this;
  return cljs.core.create_inode_seq.call(null, this__14057.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__14059 = this;
  var inode__14060 = this;
  var idx__14061 = cljs.core.hash_collision_node_find_index.call(null, this__14059.arr, this__14059.cnt, key);
  if(idx__14061 === -1) {
    return inode__14060
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__14059.cnt === 1) {
      return null
    }else {
      var editable__14062 = inode__14060.ensure_editable(edit);
      var earr__14063 = editable__14062.arr;
      earr__14063[idx__14061] = earr__14063[2 * this__14059.cnt - 2];
      earr__14063[idx__14061 + 1] = earr__14063[2 * this__14059.cnt - 1];
      earr__14063[2 * this__14059.cnt - 1] = null;
      earr__14063[2 * this__14059.cnt - 2] = null;
      editable__14062.cnt = editable__14062.cnt - 1;
      return editable__14062
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__14064 = this;
  var inode__14065 = this;
  if(e === this__14064.edit) {
    return inode__14065
  }else {
    var new_arr__14066 = cljs.core.make_array.call(null, 2 * (this__14064.cnt + 1));
    cljs.core.array_copy.call(null, this__14064.arr, 0, new_arr__14066, 0, 2 * this__14064.cnt);
    return new cljs.core.HashCollisionNode(e, this__14064.collision_hash, this__14064.cnt, new_arr__14066)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__14067 = this;
  var inode__14068 = this;
  return cljs.core.inode_kv_reduce.call(null, this__14067.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__14069 = this;
  var inode__14070 = this;
  var idx__14071 = cljs.core.hash_collision_node_find_index.call(null, this__14069.arr, this__14069.cnt, key);
  if(idx__14071 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14069.arr[idx__14071])) {
      return cljs.core.PersistentVector.fromArray([this__14069.arr[idx__14071], this__14069.arr[idx__14071 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__14072 = this;
  var inode__14073 = this;
  var idx__14074 = cljs.core.hash_collision_node_find_index.call(null, this__14072.arr, this__14072.cnt, key);
  if(idx__14074 === -1) {
    return inode__14073
  }else {
    if(this__14072.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__14072.collision_hash, this__14072.cnt - 1, cljs.core.remove_pair.call(null, this__14072.arr, cljs.core.quot.call(null, idx__14074, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__14075 = this;
  var inode__14076 = this;
  if(hash === this__14075.collision_hash) {
    var idx__14077 = cljs.core.hash_collision_node_find_index.call(null, this__14075.arr, this__14075.cnt, key);
    if(idx__14077 === -1) {
      var len__14078 = this__14075.arr.length;
      var new_arr__14079 = cljs.core.make_array.call(null, len__14078 + 2);
      cljs.core.array_copy.call(null, this__14075.arr, 0, new_arr__14079, 0, len__14078);
      new_arr__14079[len__14078] = key;
      new_arr__14079[len__14078 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__14075.collision_hash, this__14075.cnt + 1, new_arr__14079)
    }else {
      if(cljs.core._EQ_.call(null, this__14075.arr[idx__14077], val)) {
        return inode__14076
      }else {
        return new cljs.core.HashCollisionNode(null, this__14075.collision_hash, this__14075.cnt, cljs.core.clone_and_set.call(null, this__14075.arr, idx__14077 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__14075.collision_hash >>> shift & 31), [null, inode__14076])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__14080 = this;
  var inode__14081 = this;
  var idx__14082 = cljs.core.hash_collision_node_find_index.call(null, this__14080.arr, this__14080.cnt, key);
  if(idx__14082 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__14080.arr[idx__14082])) {
      return this__14080.arr[idx__14082 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__14083 = this;
  var inode__14084 = this;
  if(e === this__14083.edit) {
    this__14083.arr = array;
    this__14083.cnt = count;
    return inode__14084
  }else {
    return new cljs.core.HashCollisionNode(this__14083.edit, this__14083.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14089 = cljs.core.hash.call(null, key1);
    if(key1hash__14089 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14089, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14090 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__14089, key1, val1, added_leaf_QMARK___14090).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___14090)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__14091 = cljs.core.hash.call(null, key1);
    if(key1hash__14091 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__14091, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___14092 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__14091, key1, val1, added_leaf_QMARK___14092).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___14092)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14093 = this;
  var h__2192__auto____14094 = this__14093.__hash;
  if(!(h__2192__auto____14094 == null)) {
    return h__2192__auto____14094
  }else {
    var h__2192__auto____14095 = cljs.core.hash_coll.call(null, coll);
    this__14093.__hash = h__2192__auto____14095;
    return h__2192__auto____14095
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14096 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__14097 = this;
  var this__14098 = this;
  return cljs.core.pr_str.call(null, this__14098)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14099 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14100 = this;
  if(this__14100.s == null) {
    return cljs.core.PersistentVector.fromArray([this__14100.nodes[this__14100.i], this__14100.nodes[this__14100.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__14100.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14101 = this;
  if(this__14101.s == null) {
    return cljs.core.create_inode_seq.call(null, this__14101.nodes, this__14101.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__14101.nodes, this__14101.i, cljs.core.next.call(null, this__14101.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14102 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14103 = this;
  return new cljs.core.NodeSeq(meta, this__14103.nodes, this__14103.i, this__14103.s, this__14103.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14104 = this;
  return this__14104.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14105 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14105.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__14112 = nodes.length;
      var j__14113 = i;
      while(true) {
        if(j__14113 < len__14112) {
          if(!(nodes[j__14113] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__14113, null, null)
          }else {
            var temp__3971__auto____14114 = nodes[j__14113 + 1];
            if(cljs.core.truth_(temp__3971__auto____14114)) {
              var node__14115 = temp__3971__auto____14114;
              var temp__3971__auto____14116 = node__14115.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____14116)) {
                var node_seq__14117 = temp__3971__auto____14116;
                return new cljs.core.NodeSeq(null, nodes, j__14113 + 2, node_seq__14117, null)
              }else {
                var G__14118 = j__14113 + 2;
                j__14113 = G__14118;
                continue
              }
            }else {
              var G__14119 = j__14113 + 2;
              j__14113 = G__14119;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14120 = this;
  var h__2192__auto____14121 = this__14120.__hash;
  if(!(h__2192__auto____14121 == null)) {
    return h__2192__auto____14121
  }else {
    var h__2192__auto____14122 = cljs.core.hash_coll.call(null, coll);
    this__14120.__hash = h__2192__auto____14122;
    return h__2192__auto____14122
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14123 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__14124 = this;
  var this__14125 = this;
  return cljs.core.pr_str.call(null, this__14125)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14126 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__14127 = this;
  return cljs.core.first.call(null, this__14127.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__14128 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__14128.nodes, this__14128.i, cljs.core.next.call(null, this__14128.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14129 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14130 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__14130.nodes, this__14130.i, this__14130.s, this__14130.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14131 = this;
  return this__14131.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14132 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14132.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__14139 = nodes.length;
      var j__14140 = i;
      while(true) {
        if(j__14140 < len__14139) {
          var temp__3971__auto____14141 = nodes[j__14140];
          if(cljs.core.truth_(temp__3971__auto____14141)) {
            var nj__14142 = temp__3971__auto____14141;
            var temp__3971__auto____14143 = nj__14142.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____14143)) {
              var ns__14144 = temp__3971__auto____14143;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__14140 + 1, ns__14144, null)
            }else {
              var G__14145 = j__14140 + 1;
              j__14140 = G__14145;
              continue
            }
          }else {
            var G__14146 = j__14140 + 1;
            j__14140 = G__14146;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14149 = this;
  return new cljs.core.TransientHashMap({}, this__14149.root, this__14149.cnt, this__14149.has_nil_QMARK_, this__14149.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14150 = this;
  var h__2192__auto____14151 = this__14150.__hash;
  if(!(h__2192__auto____14151 == null)) {
    return h__2192__auto____14151
  }else {
    var h__2192__auto____14152 = cljs.core.hash_imap.call(null, coll);
    this__14150.__hash = h__2192__auto____14152;
    return h__2192__auto____14152
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14153 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14154 = this;
  if(k == null) {
    if(this__14154.has_nil_QMARK_) {
      return this__14154.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14154.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__14154.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14155 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____14156 = this__14155.has_nil_QMARK_;
      if(and__3822__auto____14156) {
        return v === this__14155.nil_val
      }else {
        return and__3822__auto____14156
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14155.meta, this__14155.has_nil_QMARK_ ? this__14155.cnt : this__14155.cnt + 1, this__14155.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___14157 = new cljs.core.Box(false);
    var new_root__14158 = (this__14155.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14155.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14157);
    if(new_root__14158 === this__14155.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__14155.meta, added_leaf_QMARK___14157.val ? this__14155.cnt + 1 : this__14155.cnt, new_root__14158, this__14155.has_nil_QMARK_, this__14155.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14159 = this;
  if(k == null) {
    return this__14159.has_nil_QMARK_
  }else {
    if(this__14159.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__14159.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14182 = null;
  var G__14182__2 = function(this_sym14160, k) {
    var this__14162 = this;
    var this_sym14160__14163 = this;
    var coll__14164 = this_sym14160__14163;
    return coll__14164.cljs$core$ILookup$_lookup$arity$2(coll__14164, k)
  };
  var G__14182__3 = function(this_sym14161, k, not_found) {
    var this__14162 = this;
    var this_sym14161__14165 = this;
    var coll__14166 = this_sym14161__14165;
    return coll__14166.cljs$core$ILookup$_lookup$arity$3(coll__14166, k, not_found)
  };
  G__14182 = function(this_sym14161, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14182__2.call(this, this_sym14161, k);
      case 3:
        return G__14182__3.call(this, this_sym14161, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14182
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym14147, args14148) {
  var this__14167 = this;
  return this_sym14147.call.apply(this_sym14147, [this_sym14147].concat(args14148.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14168 = this;
  var init__14169 = this__14168.has_nil_QMARK_ ? f.call(null, init, null, this__14168.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__14169)) {
    return cljs.core.deref.call(null, init__14169)
  }else {
    if(!(this__14168.root == null)) {
      return this__14168.root.kv_reduce(f, init__14169)
    }else {
      if("\ufdd0'else") {
        return init__14169
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14170 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__14171 = this;
  var this__14172 = this;
  return cljs.core.pr_str.call(null, this__14172)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14173 = this;
  if(this__14173.cnt > 0) {
    var s__14174 = !(this__14173.root == null) ? this__14173.root.inode_seq() : null;
    if(this__14173.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__14173.nil_val], true), s__14174)
    }else {
      return s__14174
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14175 = this;
  return this__14175.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14176 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14177 = this;
  return new cljs.core.PersistentHashMap(meta, this__14177.cnt, this__14177.root, this__14177.has_nil_QMARK_, this__14177.nil_val, this__14177.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14178 = this;
  return this__14178.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14179 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__14179.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14180 = this;
  if(k == null) {
    if(this__14180.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__14180.meta, this__14180.cnt - 1, this__14180.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__14180.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__14181 = this__14180.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__14181 === this__14180.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__14180.meta, this__14180.cnt - 1, new_root__14181, this__14180.has_nil_QMARK_, this__14180.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__14183 = ks.length;
  var i__14184 = 0;
  var out__14185 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__14184 < len__14183) {
      var G__14186 = i__14184 + 1;
      var G__14187 = cljs.core.assoc_BANG_.call(null, out__14185, ks[i__14184], vs[i__14184]);
      i__14184 = G__14186;
      out__14185 = G__14187;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14185)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__14188 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__14189 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__14190 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14191 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__14192 = this;
  if(k == null) {
    if(this__14192.has_nil_QMARK_) {
      return this__14192.nil_val
    }else {
      return null
    }
  }else {
    if(this__14192.root == null) {
      return null
    }else {
      return this__14192.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__14193 = this;
  if(k == null) {
    if(this__14193.has_nil_QMARK_) {
      return this__14193.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__14193.root == null) {
      return not_found
    }else {
      return this__14193.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14194 = this;
  if(this__14194.edit) {
    return this__14194.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__14195 = this;
  var tcoll__14196 = this;
  if(this__14195.edit) {
    if(function() {
      var G__14197__14198 = o;
      if(G__14197__14198) {
        if(function() {
          var or__3824__auto____14199 = G__14197__14198.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____14199) {
            return or__3824__auto____14199
          }else {
            return G__14197__14198.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__14197__14198.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14197__14198)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__14197__14198)
      }
    }()) {
      return tcoll__14196.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__14200 = cljs.core.seq.call(null, o);
      var tcoll__14201 = tcoll__14196;
      while(true) {
        var temp__3971__auto____14202 = cljs.core.first.call(null, es__14200);
        if(cljs.core.truth_(temp__3971__auto____14202)) {
          var e__14203 = temp__3971__auto____14202;
          var G__14214 = cljs.core.next.call(null, es__14200);
          var G__14215 = tcoll__14201.assoc_BANG_(cljs.core.key.call(null, e__14203), cljs.core.val.call(null, e__14203));
          es__14200 = G__14214;
          tcoll__14201 = G__14215;
          continue
        }else {
          return tcoll__14201
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__14204 = this;
  var tcoll__14205 = this;
  if(this__14204.edit) {
    if(k == null) {
      if(this__14204.nil_val === v) {
      }else {
        this__14204.nil_val = v
      }
      if(this__14204.has_nil_QMARK_) {
      }else {
        this__14204.count = this__14204.count + 1;
        this__14204.has_nil_QMARK_ = true
      }
      return tcoll__14205
    }else {
      var added_leaf_QMARK___14206 = new cljs.core.Box(false);
      var node__14207 = (this__14204.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__14204.root).inode_assoc_BANG_(this__14204.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___14206);
      if(node__14207 === this__14204.root) {
      }else {
        this__14204.root = node__14207
      }
      if(added_leaf_QMARK___14206.val) {
        this__14204.count = this__14204.count + 1
      }else {
      }
      return tcoll__14205
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__14208 = this;
  var tcoll__14209 = this;
  if(this__14208.edit) {
    if(k == null) {
      if(this__14208.has_nil_QMARK_) {
        this__14208.has_nil_QMARK_ = false;
        this__14208.nil_val = null;
        this__14208.count = this__14208.count - 1;
        return tcoll__14209
      }else {
        return tcoll__14209
      }
    }else {
      if(this__14208.root == null) {
        return tcoll__14209
      }else {
        var removed_leaf_QMARK___14210 = new cljs.core.Box(false);
        var node__14211 = this__14208.root.inode_without_BANG_(this__14208.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___14210);
        if(node__14211 === this__14208.root) {
        }else {
          this__14208.root = node__14211
        }
        if(cljs.core.truth_(removed_leaf_QMARK___14210[0])) {
          this__14208.count = this__14208.count - 1
        }else {
        }
        return tcoll__14209
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__14212 = this;
  var tcoll__14213 = this;
  if(this__14212.edit) {
    this__14212.edit = null;
    return new cljs.core.PersistentHashMap(null, this__14212.count, this__14212.root, this__14212.has_nil_QMARK_, this__14212.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__14218 = node;
  var stack__14219 = stack;
  while(true) {
    if(!(t__14218 == null)) {
      var G__14220 = ascending_QMARK_ ? t__14218.left : t__14218.right;
      var G__14221 = cljs.core.conj.call(null, stack__14219, t__14218);
      t__14218 = G__14220;
      stack__14219 = G__14221;
      continue
    }else {
      return stack__14219
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14222 = this;
  var h__2192__auto____14223 = this__14222.__hash;
  if(!(h__2192__auto____14223 == null)) {
    return h__2192__auto____14223
  }else {
    var h__2192__auto____14224 = cljs.core.hash_coll.call(null, coll);
    this__14222.__hash = h__2192__auto____14224;
    return h__2192__auto____14224
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14225 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__14226 = this;
  var this__14227 = this;
  return cljs.core.pr_str.call(null, this__14227)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__14228 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14229 = this;
  if(this__14229.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__14229.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__14230 = this;
  return cljs.core.peek.call(null, this__14230.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__14231 = this;
  var t__14232 = cljs.core.first.call(null, this__14231.stack);
  var next_stack__14233 = cljs.core.tree_map_seq_push.call(null, this__14231.ascending_QMARK_ ? t__14232.right : t__14232.left, cljs.core.next.call(null, this__14231.stack), this__14231.ascending_QMARK_);
  if(!(next_stack__14233 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__14233, this__14231.ascending_QMARK_, this__14231.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14234 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14235 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__14235.stack, this__14235.ascending_QMARK_, this__14235.cnt, this__14235.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14236 = this;
  return this__14236.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____14238 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____14238) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____14238
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____14240 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____14240) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____14240
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__14244 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__14244)) {
    return cljs.core.deref.call(null, init__14244)
  }else {
    var init__14245 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__14244) : init__14244;
    if(cljs.core.reduced_QMARK_.call(null, init__14245)) {
      return cljs.core.deref.call(null, init__14245)
    }else {
      var init__14246 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__14245) : init__14245;
      if(cljs.core.reduced_QMARK_.call(null, init__14246)) {
        return cljs.core.deref.call(null, init__14246)
      }else {
        return init__14246
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14249 = this;
  var h__2192__auto____14250 = this__14249.__hash;
  if(!(h__2192__auto____14250 == null)) {
    return h__2192__auto____14250
  }else {
    var h__2192__auto____14251 = cljs.core.hash_coll.call(null, coll);
    this__14249.__hash = h__2192__auto____14251;
    return h__2192__auto____14251
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14252 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14253 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14254 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14254.key, this__14254.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14302 = null;
  var G__14302__2 = function(this_sym14255, k) {
    var this__14257 = this;
    var this_sym14255__14258 = this;
    var node__14259 = this_sym14255__14258;
    return node__14259.cljs$core$ILookup$_lookup$arity$2(node__14259, k)
  };
  var G__14302__3 = function(this_sym14256, k, not_found) {
    var this__14257 = this;
    var this_sym14256__14260 = this;
    var node__14261 = this_sym14256__14260;
    return node__14261.cljs$core$ILookup$_lookup$arity$3(node__14261, k, not_found)
  };
  G__14302 = function(this_sym14256, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14302__2.call(this, this_sym14256, k);
      case 3:
        return G__14302__3.call(this, this_sym14256, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14302
}();
cljs.core.BlackNode.prototype.apply = function(this_sym14247, args14248) {
  var this__14262 = this;
  return this_sym14247.call.apply(this_sym14247, [this_sym14247].concat(args14248.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14263 = this;
  return cljs.core.PersistentVector.fromArray([this__14263.key, this__14263.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14264 = this;
  return this__14264.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14265 = this;
  return this__14265.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__14266 = this;
  var node__14267 = this;
  return ins.balance_right(node__14267)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__14268 = this;
  var node__14269 = this;
  return new cljs.core.RedNode(this__14268.key, this__14268.val, this__14268.left, this__14268.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__14270 = this;
  var node__14271 = this;
  return cljs.core.balance_right_del.call(null, this__14270.key, this__14270.val, this__14270.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__14272 = this;
  var node__14273 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__14274 = this;
  var node__14275 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14275, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__14276 = this;
  var node__14277 = this;
  return cljs.core.balance_left_del.call(null, this__14276.key, this__14276.val, del, this__14276.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__14278 = this;
  var node__14279 = this;
  return ins.balance_left(node__14279)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__14280 = this;
  var node__14281 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__14281, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__14303 = null;
  var G__14303__0 = function() {
    var this__14282 = this;
    var this__14284 = this;
    return cljs.core.pr_str.call(null, this__14284)
  };
  G__14303 = function() {
    switch(arguments.length) {
      case 0:
        return G__14303__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14303
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__14285 = this;
  var node__14286 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14286, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__14287 = this;
  var node__14288 = this;
  return node__14288
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14289 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14290 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14291 = this;
  return cljs.core.list.call(null, this__14291.key, this__14291.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14292 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14293 = this;
  return this__14293.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14294 = this;
  return cljs.core.PersistentVector.fromArray([this__14294.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14295 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14295.key, this__14295.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14296 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14297 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14297.key, this__14297.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14298 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14299 = this;
  if(n === 0) {
    return this__14299.key
  }else {
    if(n === 1) {
      return this__14299.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14300 = this;
  if(n === 0) {
    return this__14300.key
  }else {
    if(n === 1) {
      return this__14300.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14301 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14306 = this;
  var h__2192__auto____14307 = this__14306.__hash;
  if(!(h__2192__auto____14307 == null)) {
    return h__2192__auto____14307
  }else {
    var h__2192__auto____14308 = cljs.core.hash_coll.call(null, coll);
    this__14306.__hash = h__2192__auto____14308;
    return h__2192__auto____14308
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__14309 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__14310 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__14311 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__14311.key, this__14311.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__14359 = null;
  var G__14359__2 = function(this_sym14312, k) {
    var this__14314 = this;
    var this_sym14312__14315 = this;
    var node__14316 = this_sym14312__14315;
    return node__14316.cljs$core$ILookup$_lookup$arity$2(node__14316, k)
  };
  var G__14359__3 = function(this_sym14313, k, not_found) {
    var this__14314 = this;
    var this_sym14313__14317 = this;
    var node__14318 = this_sym14313__14317;
    return node__14318.cljs$core$ILookup$_lookup$arity$3(node__14318, k, not_found)
  };
  G__14359 = function(this_sym14313, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14359__2.call(this, this_sym14313, k);
      case 3:
        return G__14359__3.call(this, this_sym14313, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14359
}();
cljs.core.RedNode.prototype.apply = function(this_sym14304, args14305) {
  var this__14319 = this;
  return this_sym14304.call.apply(this_sym14304, [this_sym14304].concat(args14305.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__14320 = this;
  return cljs.core.PersistentVector.fromArray([this__14320.key, this__14320.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__14321 = this;
  return this__14321.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__14322 = this;
  return this__14322.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__14323 = this;
  var node__14324 = this;
  return new cljs.core.RedNode(this__14323.key, this__14323.val, this__14323.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__14325 = this;
  var node__14326 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__14327 = this;
  var node__14328 = this;
  return new cljs.core.RedNode(this__14327.key, this__14327.val, this__14327.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__14329 = this;
  var node__14330 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__14331 = this;
  var node__14332 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__14332, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__14333 = this;
  var node__14334 = this;
  return new cljs.core.RedNode(this__14333.key, this__14333.val, del, this__14333.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__14335 = this;
  var node__14336 = this;
  return new cljs.core.RedNode(this__14335.key, this__14335.val, ins, this__14335.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__14337 = this;
  var node__14338 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14337.left)) {
    return new cljs.core.RedNode(this__14337.key, this__14337.val, this__14337.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__14337.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14337.right)) {
      return new cljs.core.RedNode(this__14337.right.key, this__14337.right.val, new cljs.core.BlackNode(this__14337.key, this__14337.val, this__14337.left, this__14337.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__14337.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__14338, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__14360 = null;
  var G__14360__0 = function() {
    var this__14339 = this;
    var this__14341 = this;
    return cljs.core.pr_str.call(null, this__14341)
  };
  G__14360 = function() {
    switch(arguments.length) {
      case 0:
        return G__14360__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14360
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__14342 = this;
  var node__14343 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14342.right)) {
    return new cljs.core.RedNode(this__14342.key, this__14342.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14342.left, null), this__14342.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__14342.left)) {
      return new cljs.core.RedNode(this__14342.left.key, this__14342.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__14342.left.left, null), new cljs.core.BlackNode(this__14342.key, this__14342.val, this__14342.left.right, this__14342.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__14343, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__14344 = this;
  var node__14345 = this;
  return new cljs.core.BlackNode(this__14344.key, this__14344.val, this__14344.left, this__14344.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__14346 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__14347 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__14348 = this;
  return cljs.core.list.call(null, this__14348.key, this__14348.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__14349 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__14350 = this;
  return this__14350.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__14351 = this;
  return cljs.core.PersistentVector.fromArray([this__14351.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__14352 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__14352.key, this__14352.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14353 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__14354 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__14354.key, this__14354.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__14355 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__14356 = this;
  if(n === 0) {
    return this__14356.key
  }else {
    if(n === 1) {
      return this__14356.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__14357 = this;
  if(n === 0) {
    return this__14357.key
  }else {
    if(n === 1) {
      return this__14357.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__14358 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__14364 = comp.call(null, k, tree.key);
    if(c__14364 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__14364 < 0) {
        var ins__14365 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__14365 == null)) {
          return tree.add_left(ins__14365)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__14366 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__14366 == null)) {
            return tree.add_right(ins__14366)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__14369 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14369)) {
            return new cljs.core.RedNode(app__14369.key, app__14369.val, new cljs.core.RedNode(left.key, left.val, left.left, app__14369.left, null), new cljs.core.RedNode(right.key, right.val, app__14369.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__14369, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__14370 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__14370)) {
              return new cljs.core.RedNode(app__14370.key, app__14370.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__14370.left, null), new cljs.core.BlackNode(right.key, right.val, app__14370.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__14370, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__14376 = comp.call(null, k, tree.key);
    if(c__14376 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__14376 < 0) {
        var del__14377 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____14378 = !(del__14377 == null);
          if(or__3824__auto____14378) {
            return or__3824__auto____14378
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__14377, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__14377, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__14379 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____14380 = !(del__14379 == null);
            if(or__3824__auto____14380) {
              return or__3824__auto____14380
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__14379)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__14379, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__14383 = tree.key;
  var c__14384 = comp.call(null, k, tk__14383);
  if(c__14384 === 0) {
    return tree.replace(tk__14383, v, tree.left, tree.right)
  }else {
    if(c__14384 < 0) {
      return tree.replace(tk__14383, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__14383, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14387 = this;
  var h__2192__auto____14388 = this__14387.__hash;
  if(!(h__2192__auto____14388 == null)) {
    return h__2192__auto____14388
  }else {
    var h__2192__auto____14389 = cljs.core.hash_imap.call(null, coll);
    this__14387.__hash = h__2192__auto____14389;
    return h__2192__auto____14389
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__14390 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__14391 = this;
  var n__14392 = coll.entry_at(k);
  if(!(n__14392 == null)) {
    return n__14392.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__14393 = this;
  var found__14394 = [null];
  var t__14395 = cljs.core.tree_map_add.call(null, this__14393.comp, this__14393.tree, k, v, found__14394);
  if(t__14395 == null) {
    var found_node__14396 = cljs.core.nth.call(null, found__14394, 0);
    if(cljs.core._EQ_.call(null, v, found_node__14396.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14393.comp, cljs.core.tree_map_replace.call(null, this__14393.comp, this__14393.tree, k, v), this__14393.cnt, this__14393.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14393.comp, t__14395.blacken(), this__14393.cnt + 1, this__14393.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__14397 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14431 = null;
  var G__14431__2 = function(this_sym14398, k) {
    var this__14400 = this;
    var this_sym14398__14401 = this;
    var coll__14402 = this_sym14398__14401;
    return coll__14402.cljs$core$ILookup$_lookup$arity$2(coll__14402, k)
  };
  var G__14431__3 = function(this_sym14399, k, not_found) {
    var this__14400 = this;
    var this_sym14399__14403 = this;
    var coll__14404 = this_sym14399__14403;
    return coll__14404.cljs$core$ILookup$_lookup$arity$3(coll__14404, k, not_found)
  };
  G__14431 = function(this_sym14399, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14431__2.call(this, this_sym14399, k);
      case 3:
        return G__14431__3.call(this, this_sym14399, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14431
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym14385, args14386) {
  var this__14405 = this;
  return this_sym14385.call.apply(this_sym14385, [this_sym14385].concat(args14386.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__14406 = this;
  if(!(this__14406.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__14406.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__14407 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14408 = this;
  if(this__14408.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14408.tree, false, this__14408.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__14409 = this;
  var this__14410 = this;
  return cljs.core.pr_str.call(null, this__14410)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__14411 = this;
  var coll__14412 = this;
  var t__14413 = this__14411.tree;
  while(true) {
    if(!(t__14413 == null)) {
      var c__14414 = this__14411.comp.call(null, k, t__14413.key);
      if(c__14414 === 0) {
        return t__14413
      }else {
        if(c__14414 < 0) {
          var G__14432 = t__14413.left;
          t__14413 = G__14432;
          continue
        }else {
          if("\ufdd0'else") {
            var G__14433 = t__14413.right;
            t__14413 = G__14433;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__14415 = this;
  if(this__14415.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14415.tree, ascending_QMARK_, this__14415.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__14416 = this;
  if(this__14416.cnt > 0) {
    var stack__14417 = null;
    var t__14418 = this__14416.tree;
    while(true) {
      if(!(t__14418 == null)) {
        var c__14419 = this__14416.comp.call(null, k, t__14418.key);
        if(c__14419 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__14417, t__14418), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__14419 < 0) {
              var G__14434 = cljs.core.conj.call(null, stack__14417, t__14418);
              var G__14435 = t__14418.left;
              stack__14417 = G__14434;
              t__14418 = G__14435;
              continue
            }else {
              var G__14436 = stack__14417;
              var G__14437 = t__14418.right;
              stack__14417 = G__14436;
              t__14418 = G__14437;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__14419 > 0) {
                var G__14438 = cljs.core.conj.call(null, stack__14417, t__14418);
                var G__14439 = t__14418.right;
                stack__14417 = G__14438;
                t__14418 = G__14439;
                continue
              }else {
                var G__14440 = stack__14417;
                var G__14441 = t__14418.left;
                stack__14417 = G__14440;
                t__14418 = G__14441;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__14417 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__14417, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__14420 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__14421 = this;
  return this__14421.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14422 = this;
  if(this__14422.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__14422.tree, true, this__14422.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14423 = this;
  return this__14423.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14424 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14425 = this;
  return new cljs.core.PersistentTreeMap(this__14425.comp, this__14425.tree, this__14425.cnt, meta, this__14425.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14426 = this;
  return this__14426.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14427 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__14427.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__14428 = this;
  var found__14429 = [null];
  var t__14430 = cljs.core.tree_map_remove.call(null, this__14428.comp, this__14428.tree, k, found__14429);
  if(t__14430 == null) {
    if(cljs.core.nth.call(null, found__14429, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__14428.comp, null, 0, this__14428.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__14428.comp, t__14430.blacken(), this__14428.cnt - 1, this__14428.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__14444 = cljs.core.seq.call(null, keyvals);
    var out__14445 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__14444) {
        var G__14446 = cljs.core.nnext.call(null, in__14444);
        var G__14447 = cljs.core.assoc_BANG_.call(null, out__14445, cljs.core.first.call(null, in__14444), cljs.core.second.call(null, in__14444));
        in__14444 = G__14446;
        out__14445 = G__14447;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__14445)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14448) {
    var keyvals = cljs.core.seq(arglist__14448);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14449) {
    var keyvals = cljs.core.seq(arglist__14449);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__14453 = [];
    var obj__14454 = {};
    var kvs__14455 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__14455) {
        ks__14453.push(cljs.core.first.call(null, kvs__14455));
        obj__14454[cljs.core.first.call(null, kvs__14455)] = cljs.core.second.call(null, kvs__14455);
        var G__14456 = cljs.core.nnext.call(null, kvs__14455);
        kvs__14455 = G__14456;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__14453, obj__14454)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14457) {
    var keyvals = cljs.core.seq(arglist__14457);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__14460 = cljs.core.seq.call(null, keyvals);
    var out__14461 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__14460) {
        var G__14462 = cljs.core.nnext.call(null, in__14460);
        var G__14463 = cljs.core.assoc.call(null, out__14461, cljs.core.first.call(null, in__14460), cljs.core.second.call(null, in__14460));
        in__14460 = G__14462;
        out__14461 = G__14463;
        continue
      }else {
        return out__14461
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14464) {
    var keyvals = cljs.core.seq(arglist__14464);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__14467 = cljs.core.seq.call(null, keyvals);
    var out__14468 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__14467) {
        var G__14469 = cljs.core.nnext.call(null, in__14467);
        var G__14470 = cljs.core.assoc.call(null, out__14468, cljs.core.first.call(null, in__14467), cljs.core.second.call(null, in__14467));
        in__14467 = G__14469;
        out__14468 = G__14470;
        continue
      }else {
        return out__14468
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14471) {
    var comparator = cljs.core.first(arglist__14471);
    var keyvals = cljs.core.rest(arglist__14471);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__14472_SHARP_, p2__14473_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____14475 = p1__14472_SHARP_;
          if(cljs.core.truth_(or__3824__auto____14475)) {
            return or__3824__auto____14475
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__14473_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14476) {
    var maps = cljs.core.seq(arglist__14476);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__14484 = function(m, e) {
        var k__14482 = cljs.core.first.call(null, e);
        var v__14483 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__14482)) {
          return cljs.core.assoc.call(null, m, k__14482, f.call(null, cljs.core._lookup.call(null, m, k__14482, null), v__14483))
        }else {
          return cljs.core.assoc.call(null, m, k__14482, v__14483)
        }
      };
      var merge2__14486 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__14484, function() {
          var or__3824__auto____14485 = m1;
          if(cljs.core.truth_(or__3824__auto____14485)) {
            return or__3824__auto____14485
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__14486, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14487) {
    var f = cljs.core.first(arglist__14487);
    var maps = cljs.core.rest(arglist__14487);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__14492 = cljs.core.ObjMap.EMPTY;
  var keys__14493 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__14493) {
      var key__14494 = cljs.core.first.call(null, keys__14493);
      var entry__14495 = cljs.core._lookup.call(null, map, key__14494, "\ufdd0'cljs.core/not-found");
      var G__14496 = cljs.core.not_EQ_.call(null, entry__14495, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__14492, key__14494, entry__14495) : ret__14492;
      var G__14497 = cljs.core.next.call(null, keys__14493);
      ret__14492 = G__14496;
      keys__14493 = G__14497;
      continue
    }else {
      return ret__14492
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__14501 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__14501.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14502 = this;
  var h__2192__auto____14503 = this__14502.__hash;
  if(!(h__2192__auto____14503 == null)) {
    return h__2192__auto____14503
  }else {
    var h__2192__auto____14504 = cljs.core.hash_iset.call(null, coll);
    this__14502.__hash = h__2192__auto____14504;
    return h__2192__auto____14504
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__14505 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__14506 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__14506.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14527 = null;
  var G__14527__2 = function(this_sym14507, k) {
    var this__14509 = this;
    var this_sym14507__14510 = this;
    var coll__14511 = this_sym14507__14510;
    return coll__14511.cljs$core$ILookup$_lookup$arity$2(coll__14511, k)
  };
  var G__14527__3 = function(this_sym14508, k, not_found) {
    var this__14509 = this;
    var this_sym14508__14512 = this;
    var coll__14513 = this_sym14508__14512;
    return coll__14513.cljs$core$ILookup$_lookup$arity$3(coll__14513, k, not_found)
  };
  G__14527 = function(this_sym14508, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14527__2.call(this, this_sym14508, k);
      case 3:
        return G__14527__3.call(this, this_sym14508, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14527
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym14499, args14500) {
  var this__14514 = this;
  return this_sym14499.call.apply(this_sym14499, [this_sym14499].concat(args14500.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14515 = this;
  return new cljs.core.PersistentHashSet(this__14515.meta, cljs.core.assoc.call(null, this__14515.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__14516 = this;
  var this__14517 = this;
  return cljs.core.pr_str.call(null, this__14517)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14518 = this;
  return cljs.core.keys.call(null, this__14518.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__14519 = this;
  return new cljs.core.PersistentHashSet(this__14519.meta, cljs.core.dissoc.call(null, this__14519.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14520 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14521 = this;
  var and__3822__auto____14522 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____14522) {
    var and__3822__auto____14523 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____14523) {
      return cljs.core.every_QMARK_.call(null, function(p1__14498_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__14498_SHARP_)
      }, other)
    }else {
      return and__3822__auto____14523
    }
  }else {
    return and__3822__auto____14522
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14524 = this;
  return new cljs.core.PersistentHashSet(meta, this__14524.hash_map, this__14524.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14525 = this;
  return this__14525.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14526 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__14526.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__14528 = cljs.core.count.call(null, items);
  var i__14529 = 0;
  var out__14530 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__14529 < len__14528) {
      var G__14531 = i__14529 + 1;
      var G__14532 = cljs.core.conj_BANG_.call(null, out__14530, items[i__14529]);
      i__14529 = G__14531;
      out__14530 = G__14532;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__14530)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14550 = null;
  var G__14550__2 = function(this_sym14536, k) {
    var this__14538 = this;
    var this_sym14536__14539 = this;
    var tcoll__14540 = this_sym14536__14539;
    if(cljs.core._lookup.call(null, this__14538.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__14550__3 = function(this_sym14537, k, not_found) {
    var this__14538 = this;
    var this_sym14537__14541 = this;
    var tcoll__14542 = this_sym14537__14541;
    if(cljs.core._lookup.call(null, this__14538.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__14550 = function(this_sym14537, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14550__2.call(this, this_sym14537, k);
      case 3:
        return G__14550__3.call(this, this_sym14537, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14550
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym14534, args14535) {
  var this__14543 = this;
  return this_sym14534.call.apply(this_sym14534, [this_sym14534].concat(args14535.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__14544 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__14545 = this;
  if(cljs.core._lookup.call(null, this__14545.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__14546 = this;
  return cljs.core.count.call(null, this__14546.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__14547 = this;
  this__14547.transient_map = cljs.core.dissoc_BANG_.call(null, this__14547.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__14548 = this;
  this__14548.transient_map = cljs.core.assoc_BANG_.call(null, this__14548.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__14549 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__14549.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__14553 = this;
  var h__2192__auto____14554 = this__14553.__hash;
  if(!(h__2192__auto____14554 == null)) {
    return h__2192__auto____14554
  }else {
    var h__2192__auto____14555 = cljs.core.hash_iset.call(null, coll);
    this__14553.__hash = h__2192__auto____14555;
    return h__2192__auto____14555
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__14556 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__14557 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__14557.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14583 = null;
  var G__14583__2 = function(this_sym14558, k) {
    var this__14560 = this;
    var this_sym14558__14561 = this;
    var coll__14562 = this_sym14558__14561;
    return coll__14562.cljs$core$ILookup$_lookup$arity$2(coll__14562, k)
  };
  var G__14583__3 = function(this_sym14559, k, not_found) {
    var this__14560 = this;
    var this_sym14559__14563 = this;
    var coll__14564 = this_sym14559__14563;
    return coll__14564.cljs$core$ILookup$_lookup$arity$3(coll__14564, k, not_found)
  };
  G__14583 = function(this_sym14559, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14583__2.call(this, this_sym14559, k);
      case 3:
        return G__14583__3.call(this, this_sym14559, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__14583
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym14551, args14552) {
  var this__14565 = this;
  return this_sym14551.call.apply(this_sym14551, [this_sym14551].concat(args14552.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__14566 = this;
  return new cljs.core.PersistentTreeSet(this__14566.meta, cljs.core.assoc.call(null, this__14566.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__14567 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__14567.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__14568 = this;
  var this__14569 = this;
  return cljs.core.pr_str.call(null, this__14569)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__14570 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__14570.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__14571 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__14571.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__14572 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__14573 = this;
  return cljs.core._comparator.call(null, this__14573.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__14574 = this;
  return cljs.core.keys.call(null, this__14574.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__14575 = this;
  return new cljs.core.PersistentTreeSet(this__14575.meta, cljs.core.dissoc.call(null, this__14575.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__14576 = this;
  return cljs.core.count.call(null, this__14576.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__14577 = this;
  var and__3822__auto____14578 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____14578) {
    var and__3822__auto____14579 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____14579) {
      return cljs.core.every_QMARK_.call(null, function(p1__14533_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__14533_SHARP_)
      }, other)
    }else {
      return and__3822__auto____14579
    }
  }else {
    return and__3822__auto____14578
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__14580 = this;
  return new cljs.core.PersistentTreeSet(meta, this__14580.tree_map, this__14580.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__14581 = this;
  return this__14581.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__14582 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__14582.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__14588__delegate = function(keys) {
      var in__14586 = cljs.core.seq.call(null, keys);
      var out__14587 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__14586)) {
          var G__14589 = cljs.core.next.call(null, in__14586);
          var G__14590 = cljs.core.conj_BANG_.call(null, out__14587, cljs.core.first.call(null, in__14586));
          in__14586 = G__14589;
          out__14587 = G__14590;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__14587)
        }
        break
      }
    };
    var G__14588 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14588__delegate.call(this, keys)
    };
    G__14588.cljs$lang$maxFixedArity = 0;
    G__14588.cljs$lang$applyTo = function(arglist__14591) {
      var keys = cljs.core.seq(arglist__14591);
      return G__14588__delegate(keys)
    };
    G__14588.cljs$lang$arity$variadic = G__14588__delegate;
    return G__14588
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14592) {
    var keys = cljs.core.seq(arglist__14592);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14594) {
    var comparator = cljs.core.first(arglist__14594);
    var keys = cljs.core.rest(arglist__14594);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__14600 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____14601 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____14601)) {
        var e__14602 = temp__3971__auto____14601;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__14602))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__14600, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__14593_SHARP_) {
      var temp__3971__auto____14603 = cljs.core.find.call(null, smap, p1__14593_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____14603)) {
        var e__14604 = temp__3971__auto____14603;
        return cljs.core.second.call(null, e__14604)
      }else {
        return p1__14593_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__14634 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__14627, seen) {
        while(true) {
          var vec__14628__14629 = p__14627;
          var f__14630 = cljs.core.nth.call(null, vec__14628__14629, 0, null);
          var xs__14631 = vec__14628__14629;
          var temp__3974__auto____14632 = cljs.core.seq.call(null, xs__14631);
          if(temp__3974__auto____14632) {
            var s__14633 = temp__3974__auto____14632;
            if(cljs.core.contains_QMARK_.call(null, seen, f__14630)) {
              var G__14635 = cljs.core.rest.call(null, s__14633);
              var G__14636 = seen;
              p__14627 = G__14635;
              seen = G__14636;
              continue
            }else {
              return cljs.core.cons.call(null, f__14630, step.call(null, cljs.core.rest.call(null, s__14633), cljs.core.conj.call(null, seen, f__14630)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__14634.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__14639 = cljs.core.PersistentVector.EMPTY;
  var s__14640 = s;
  while(true) {
    if(cljs.core.next.call(null, s__14640)) {
      var G__14641 = cljs.core.conj.call(null, ret__14639, cljs.core.first.call(null, s__14640));
      var G__14642 = cljs.core.next.call(null, s__14640);
      ret__14639 = G__14641;
      s__14640 = G__14642;
      continue
    }else {
      return cljs.core.seq.call(null, ret__14639)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____14645 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____14645) {
        return or__3824__auto____14645
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__14646 = x.lastIndexOf("/");
      if(i__14646 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__14646 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____14649 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____14649) {
      return or__3824__auto____14649
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__14650 = x.lastIndexOf("/");
    if(i__14650 > -1) {
      return cljs.core.subs.call(null, x, 2, i__14650)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__14657 = cljs.core.ObjMap.EMPTY;
  var ks__14658 = cljs.core.seq.call(null, keys);
  var vs__14659 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____14660 = ks__14658;
      if(and__3822__auto____14660) {
        return vs__14659
      }else {
        return and__3822__auto____14660
      }
    }()) {
      var G__14661 = cljs.core.assoc.call(null, map__14657, cljs.core.first.call(null, ks__14658), cljs.core.first.call(null, vs__14659));
      var G__14662 = cljs.core.next.call(null, ks__14658);
      var G__14663 = cljs.core.next.call(null, vs__14659);
      map__14657 = G__14661;
      ks__14658 = G__14662;
      vs__14659 = G__14663;
      continue
    }else {
      return map__14657
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__14666__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14651_SHARP_, p2__14652_SHARP_) {
        return max_key.call(null, k, p1__14651_SHARP_, p2__14652_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__14666 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14666__delegate.call(this, k, x, y, more)
    };
    G__14666.cljs$lang$maxFixedArity = 3;
    G__14666.cljs$lang$applyTo = function(arglist__14667) {
      var k = cljs.core.first(arglist__14667);
      var x = cljs.core.first(cljs.core.next(arglist__14667));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14667)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14667)));
      return G__14666__delegate(k, x, y, more)
    };
    G__14666.cljs$lang$arity$variadic = G__14666__delegate;
    return G__14666
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__14668__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14664_SHARP_, p2__14665_SHARP_) {
        return min_key.call(null, k, p1__14664_SHARP_, p2__14665_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__14668 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14668__delegate.call(this, k, x, y, more)
    };
    G__14668.cljs$lang$maxFixedArity = 3;
    G__14668.cljs$lang$applyTo = function(arglist__14669) {
      var k = cljs.core.first(arglist__14669);
      var x = cljs.core.first(cljs.core.next(arglist__14669));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14669)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14669)));
      return G__14668__delegate(k, x, y, more)
    };
    G__14668.cljs$lang$arity$variadic = G__14668__delegate;
    return G__14668
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14672 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14672) {
        var s__14673 = temp__3974__auto____14672;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__14673), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__14673)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14676 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14676) {
      var s__14677 = temp__3974__auto____14676;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__14677)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__14677), take_while.call(null, pred, cljs.core.rest.call(null, s__14677)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__14679 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__14679.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__14691 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____14692 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____14692)) {
        var vec__14693__14694 = temp__3974__auto____14692;
        var e__14695 = cljs.core.nth.call(null, vec__14693__14694, 0, null);
        var s__14696 = vec__14693__14694;
        if(cljs.core.truth_(include__14691.call(null, e__14695))) {
          return s__14696
        }else {
          return cljs.core.next.call(null, s__14696)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14691, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14697 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____14697)) {
      var vec__14698__14699 = temp__3974__auto____14697;
      var e__14700 = cljs.core.nth.call(null, vec__14698__14699, 0, null);
      var s__14701 = vec__14698__14699;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__14700)) ? s__14701 : cljs.core.next.call(null, s__14701))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__14713 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____14714 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____14714)) {
        var vec__14715__14716 = temp__3974__auto____14714;
        var e__14717 = cljs.core.nth.call(null, vec__14715__14716, 0, null);
        var s__14718 = vec__14715__14716;
        if(cljs.core.truth_(include__14713.call(null, e__14717))) {
          return s__14718
        }else {
          return cljs.core.next.call(null, s__14718)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__14713, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____14719 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____14719)) {
      var vec__14720__14721 = temp__3974__auto____14719;
      var e__14722 = cljs.core.nth.call(null, vec__14720__14721, 0, null);
      var s__14723 = vec__14720__14721;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__14722)) ? s__14723 : cljs.core.next.call(null, s__14723))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__14724 = this;
  var h__2192__auto____14725 = this__14724.__hash;
  if(!(h__2192__auto____14725 == null)) {
    return h__2192__auto____14725
  }else {
    var h__2192__auto____14726 = cljs.core.hash_coll.call(null, rng);
    this__14724.__hash = h__2192__auto____14726;
    return h__2192__auto____14726
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__14727 = this;
  if(this__14727.step > 0) {
    if(this__14727.start + this__14727.step < this__14727.end) {
      return new cljs.core.Range(this__14727.meta, this__14727.start + this__14727.step, this__14727.end, this__14727.step, null)
    }else {
      return null
    }
  }else {
    if(this__14727.start + this__14727.step > this__14727.end) {
      return new cljs.core.Range(this__14727.meta, this__14727.start + this__14727.step, this__14727.end, this__14727.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__14728 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__14729 = this;
  var this__14730 = this;
  return cljs.core.pr_str.call(null, this__14730)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__14731 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__14732 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__14733 = this;
  if(this__14733.step > 0) {
    if(this__14733.start < this__14733.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__14733.start > this__14733.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__14734 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__14734.end - this__14734.start) / this__14734.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__14735 = this;
  return this__14735.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__14736 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__14736.meta, this__14736.start + this__14736.step, this__14736.end, this__14736.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__14737 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__14738 = this;
  return new cljs.core.Range(meta, this__14738.start, this__14738.end, this__14738.step, this__14738.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__14739 = this;
  return this__14739.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__14740 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14740.start + n * this__14740.step
  }else {
    if(function() {
      var and__3822__auto____14741 = this__14740.start > this__14740.end;
      if(and__3822__auto____14741) {
        return this__14740.step === 0
      }else {
        return and__3822__auto____14741
      }
    }()) {
      return this__14740.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__14742 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__14742.start + n * this__14742.step
  }else {
    if(function() {
      var and__3822__auto____14743 = this__14742.start > this__14742.end;
      if(and__3822__auto____14743) {
        return this__14742.step === 0
      }else {
        return and__3822__auto____14743
      }
    }()) {
      return this__14742.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__14744 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__14744.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14747 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14747) {
      var s__14748 = temp__3974__auto____14747;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__14748), take_nth.call(null, n, cljs.core.drop.call(null, n, s__14748)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____14755 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____14755) {
      var s__14756 = temp__3974__auto____14755;
      var fst__14757 = cljs.core.first.call(null, s__14756);
      var fv__14758 = f.call(null, fst__14757);
      var run__14759 = cljs.core.cons.call(null, fst__14757, cljs.core.take_while.call(null, function(p1__14749_SHARP_) {
        return cljs.core._EQ_.call(null, fv__14758, f.call(null, p1__14749_SHARP_))
      }, cljs.core.next.call(null, s__14756)));
      return cljs.core.cons.call(null, run__14759, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__14759), s__14756))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____14774 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____14774) {
        var s__14775 = temp__3971__auto____14774;
        return reductions.call(null, f, cljs.core.first.call(null, s__14775), cljs.core.rest.call(null, s__14775))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____14776 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____14776) {
        var s__14777 = temp__3974__auto____14776;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__14777)), cljs.core.rest.call(null, s__14777))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14780 = null;
      var G__14780__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__14780__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__14780__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__14780__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__14780__4 = function() {
        var G__14781__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__14781 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14781__delegate.call(this, x, y, z, args)
        };
        G__14781.cljs$lang$maxFixedArity = 3;
        G__14781.cljs$lang$applyTo = function(arglist__14782) {
          var x = cljs.core.first(arglist__14782);
          var y = cljs.core.first(cljs.core.next(arglist__14782));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14782)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14782)));
          return G__14781__delegate(x, y, z, args)
        };
        G__14781.cljs$lang$arity$variadic = G__14781__delegate;
        return G__14781
      }();
      G__14780 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14780__0.call(this);
          case 1:
            return G__14780__1.call(this, x);
          case 2:
            return G__14780__2.call(this, x, y);
          case 3:
            return G__14780__3.call(this, x, y, z);
          default:
            return G__14780__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14780.cljs$lang$maxFixedArity = 3;
      G__14780.cljs$lang$applyTo = G__14780__4.cljs$lang$applyTo;
      return G__14780
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14783 = null;
      var G__14783__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__14783__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__14783__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__14783__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__14783__4 = function() {
        var G__14784__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14784 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14784__delegate.call(this, x, y, z, args)
        };
        G__14784.cljs$lang$maxFixedArity = 3;
        G__14784.cljs$lang$applyTo = function(arglist__14785) {
          var x = cljs.core.first(arglist__14785);
          var y = cljs.core.first(cljs.core.next(arglist__14785));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14785)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14785)));
          return G__14784__delegate(x, y, z, args)
        };
        G__14784.cljs$lang$arity$variadic = G__14784__delegate;
        return G__14784
      }();
      G__14783 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14783__0.call(this);
          case 1:
            return G__14783__1.call(this, x);
          case 2:
            return G__14783__2.call(this, x, y);
          case 3:
            return G__14783__3.call(this, x, y, z);
          default:
            return G__14783__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14783.cljs$lang$maxFixedArity = 3;
      G__14783.cljs$lang$applyTo = G__14783__4.cljs$lang$applyTo;
      return G__14783
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14786 = null;
      var G__14786__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__14786__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__14786__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__14786__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__14786__4 = function() {
        var G__14787__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__14787 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14787__delegate.call(this, x, y, z, args)
        };
        G__14787.cljs$lang$maxFixedArity = 3;
        G__14787.cljs$lang$applyTo = function(arglist__14788) {
          var x = cljs.core.first(arglist__14788);
          var y = cljs.core.first(cljs.core.next(arglist__14788));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14788)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14788)));
          return G__14787__delegate(x, y, z, args)
        };
        G__14787.cljs$lang$arity$variadic = G__14787__delegate;
        return G__14787
      }();
      G__14786 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14786__0.call(this);
          case 1:
            return G__14786__1.call(this, x);
          case 2:
            return G__14786__2.call(this, x, y);
          case 3:
            return G__14786__3.call(this, x, y, z);
          default:
            return G__14786__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__14786.cljs$lang$maxFixedArity = 3;
      G__14786.cljs$lang$applyTo = G__14786__4.cljs$lang$applyTo;
      return G__14786
    }()
  };
  var juxt__4 = function() {
    var G__14789__delegate = function(f, g, h, fs) {
      var fs__14779 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__14790 = null;
        var G__14790__0 = function() {
          return cljs.core.reduce.call(null, function(p1__14760_SHARP_, p2__14761_SHARP_) {
            return cljs.core.conj.call(null, p1__14760_SHARP_, p2__14761_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__14779)
        };
        var G__14790__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__14762_SHARP_, p2__14763_SHARP_) {
            return cljs.core.conj.call(null, p1__14762_SHARP_, p2__14763_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__14779)
        };
        var G__14790__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__14764_SHARP_, p2__14765_SHARP_) {
            return cljs.core.conj.call(null, p1__14764_SHARP_, p2__14765_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__14779)
        };
        var G__14790__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__14766_SHARP_, p2__14767_SHARP_) {
            return cljs.core.conj.call(null, p1__14766_SHARP_, p2__14767_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__14779)
        };
        var G__14790__4 = function() {
          var G__14791__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__14768_SHARP_, p2__14769_SHARP_) {
              return cljs.core.conj.call(null, p1__14768_SHARP_, cljs.core.apply.call(null, p2__14769_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__14779)
          };
          var G__14791 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14791__delegate.call(this, x, y, z, args)
          };
          G__14791.cljs$lang$maxFixedArity = 3;
          G__14791.cljs$lang$applyTo = function(arglist__14792) {
            var x = cljs.core.first(arglist__14792);
            var y = cljs.core.first(cljs.core.next(arglist__14792));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14792)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14792)));
            return G__14791__delegate(x, y, z, args)
          };
          G__14791.cljs$lang$arity$variadic = G__14791__delegate;
          return G__14791
        }();
        G__14790 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__14790__0.call(this);
            case 1:
              return G__14790__1.call(this, x);
            case 2:
              return G__14790__2.call(this, x, y);
            case 3:
              return G__14790__3.call(this, x, y, z);
            default:
              return G__14790__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__14790.cljs$lang$maxFixedArity = 3;
        G__14790.cljs$lang$applyTo = G__14790__4.cljs$lang$applyTo;
        return G__14790
      }()
    };
    var G__14789 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14789__delegate.call(this, f, g, h, fs)
    };
    G__14789.cljs$lang$maxFixedArity = 3;
    G__14789.cljs$lang$applyTo = function(arglist__14793) {
      var f = cljs.core.first(arglist__14793);
      var g = cljs.core.first(cljs.core.next(arglist__14793));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14793)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__14793)));
      return G__14789__delegate(f, g, h, fs)
    };
    G__14789.cljs$lang$arity$variadic = G__14789__delegate;
    return G__14789
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14796 = cljs.core.next.call(null, coll);
        coll = G__14796;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____14795 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____14795) {
          return n > 0
        }else {
          return and__3822__auto____14795
        }
      }())) {
        var G__14797 = n - 1;
        var G__14798 = cljs.core.next.call(null, coll);
        n = G__14797;
        coll = G__14798;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__14800 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__14800), s)) {
    if(cljs.core.count.call(null, matches__14800) === 1) {
      return cljs.core.first.call(null, matches__14800)
    }else {
      return cljs.core.vec.call(null, matches__14800)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__14802 = re.exec(s);
  if(matches__14802 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__14802) === 1) {
      return cljs.core.first.call(null, matches__14802)
    }else {
      return cljs.core.vec.call(null, matches__14802)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__14807 = cljs.core.re_find.call(null, re, s);
  var match_idx__14808 = s.search(re);
  var match_str__14809 = cljs.core.coll_QMARK_.call(null, match_data__14807) ? cljs.core.first.call(null, match_data__14807) : match_data__14807;
  var post_match__14810 = cljs.core.subs.call(null, s, match_idx__14808 + cljs.core.count.call(null, match_str__14809));
  if(cljs.core.truth_(match_data__14807)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__14807, re_seq.call(null, re, post_match__14810))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14817__14818 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___14819 = cljs.core.nth.call(null, vec__14817__14818, 0, null);
  var flags__14820 = cljs.core.nth.call(null, vec__14817__14818, 1, null);
  var pattern__14821 = cljs.core.nth.call(null, vec__14817__14818, 2, null);
  return new RegExp(pattern__14821, flags__14820)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__14811_SHARP_) {
    return print_one.call(null, p1__14811_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____14831 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____14831)) {
            var and__3822__auto____14835 = function() {
              var G__14832__14833 = obj;
              if(G__14832__14833) {
                if(function() {
                  var or__3824__auto____14834 = G__14832__14833.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____14834) {
                    return or__3824__auto____14834
                  }else {
                    return G__14832__14833.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__14832__14833.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14832__14833)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__14832__14833)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____14835)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____14835
            }
          }else {
            return and__3822__auto____14831
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____14836 = !(obj == null);
          if(and__3822__auto____14836) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____14836
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__14837__14838 = obj;
          if(G__14837__14838) {
            if(function() {
              var or__3824__auto____14839 = G__14837__14838.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____14839) {
                return or__3824__auto____14839
              }else {
                return G__14837__14838.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__14837__14838.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14837__14838)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__14837__14838)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__14859 = new goog.string.StringBuffer;
  var G__14860__14861 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14860__14861) {
    var string__14862 = cljs.core.first.call(null, G__14860__14861);
    var G__14860__14863 = G__14860__14861;
    while(true) {
      sb__14859.append(string__14862);
      var temp__3974__auto____14864 = cljs.core.next.call(null, G__14860__14863);
      if(temp__3974__auto____14864) {
        var G__14860__14865 = temp__3974__auto____14864;
        var G__14878 = cljs.core.first.call(null, G__14860__14865);
        var G__14879 = G__14860__14865;
        string__14862 = G__14878;
        G__14860__14863 = G__14879;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14866__14867 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14866__14867) {
    var obj__14868 = cljs.core.first.call(null, G__14866__14867);
    var G__14866__14869 = G__14866__14867;
    while(true) {
      sb__14859.append(" ");
      var G__14870__14871 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14868, opts));
      if(G__14870__14871) {
        var string__14872 = cljs.core.first.call(null, G__14870__14871);
        var G__14870__14873 = G__14870__14871;
        while(true) {
          sb__14859.append(string__14872);
          var temp__3974__auto____14874 = cljs.core.next.call(null, G__14870__14873);
          if(temp__3974__auto____14874) {
            var G__14870__14875 = temp__3974__auto____14874;
            var G__14880 = cljs.core.first.call(null, G__14870__14875);
            var G__14881 = G__14870__14875;
            string__14872 = G__14880;
            G__14870__14873 = G__14881;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14876 = cljs.core.next.call(null, G__14866__14869);
      if(temp__3974__auto____14876) {
        var G__14866__14877 = temp__3974__auto____14876;
        var G__14882 = cljs.core.first.call(null, G__14866__14877);
        var G__14883 = G__14866__14877;
        obj__14868 = G__14882;
        G__14866__14869 = G__14883;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__14859
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__14885 = cljs.core.pr_sb.call(null, objs, opts);
  sb__14885.append("\n");
  return[cljs.core.str(sb__14885)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__14904__14905 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__14904__14905) {
    var string__14906 = cljs.core.first.call(null, G__14904__14905);
    var G__14904__14907 = G__14904__14905;
    while(true) {
      cljs.core.string_print.call(null, string__14906);
      var temp__3974__auto____14908 = cljs.core.next.call(null, G__14904__14907);
      if(temp__3974__auto____14908) {
        var G__14904__14909 = temp__3974__auto____14908;
        var G__14922 = cljs.core.first.call(null, G__14904__14909);
        var G__14923 = G__14904__14909;
        string__14906 = G__14922;
        G__14904__14907 = G__14923;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__14910__14911 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__14910__14911) {
    var obj__14912 = cljs.core.first.call(null, G__14910__14911);
    var G__14910__14913 = G__14910__14911;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__14914__14915 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__14912, opts));
      if(G__14914__14915) {
        var string__14916 = cljs.core.first.call(null, G__14914__14915);
        var G__14914__14917 = G__14914__14915;
        while(true) {
          cljs.core.string_print.call(null, string__14916);
          var temp__3974__auto____14918 = cljs.core.next.call(null, G__14914__14917);
          if(temp__3974__auto____14918) {
            var G__14914__14919 = temp__3974__auto____14918;
            var G__14924 = cljs.core.first.call(null, G__14914__14919);
            var G__14925 = G__14914__14919;
            string__14916 = G__14924;
            G__14914__14917 = G__14925;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____14920 = cljs.core.next.call(null, G__14910__14913);
      if(temp__3974__auto____14920) {
        var G__14910__14921 = temp__3974__auto____14920;
        var G__14926 = cljs.core.first.call(null, G__14910__14921);
        var G__14927 = G__14910__14921;
        obj__14912 = G__14926;
        G__14910__14913 = G__14927;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14928) {
    var objs = cljs.core.seq(arglist__14928);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14929) {
    var objs = cljs.core.seq(arglist__14929);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14930) {
    var objs = cljs.core.seq(arglist__14930);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14931) {
    var objs = cljs.core.seq(arglist__14931);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14932) {
    var objs = cljs.core.seq(arglist__14932);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14933) {
    var objs = cljs.core.seq(arglist__14933);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14934) {
    var objs = cljs.core.seq(arglist__14934);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14935) {
    var objs = cljs.core.seq(arglist__14935);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__14936) {
    var fmt = cljs.core.first(arglist__14936);
    var args = cljs.core.rest(arglist__14936);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14937 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14937, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14938 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14938, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14939 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14939, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____14940 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____14940)) {
        var nspc__14941 = temp__3974__auto____14940;
        return[cljs.core.str(nspc__14941), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____14942 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____14942)) {
          var nspc__14943 = temp__3974__auto____14942;
          return[cljs.core.str(nspc__14943), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14944 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14944, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__14946 = function(n, len) {
    var ns__14945 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__14945) < len) {
        var G__14948 = [cljs.core.str("0"), cljs.core.str(ns__14945)].join("");
        ns__14945 = G__14948;
        continue
      }else {
        return ns__14945
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__14946.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__14946.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__14946.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14946.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__14946.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__14946.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__14947 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__14947, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__14949 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__14950 = this;
  var G__14951__14952 = cljs.core.seq.call(null, this__14950.watches);
  if(G__14951__14952) {
    var G__14954__14956 = cljs.core.first.call(null, G__14951__14952);
    var vec__14955__14957 = G__14954__14956;
    var key__14958 = cljs.core.nth.call(null, vec__14955__14957, 0, null);
    var f__14959 = cljs.core.nth.call(null, vec__14955__14957, 1, null);
    var G__14951__14960 = G__14951__14952;
    var G__14954__14961 = G__14954__14956;
    var G__14951__14962 = G__14951__14960;
    while(true) {
      var vec__14963__14964 = G__14954__14961;
      var key__14965 = cljs.core.nth.call(null, vec__14963__14964, 0, null);
      var f__14966 = cljs.core.nth.call(null, vec__14963__14964, 1, null);
      var G__14951__14967 = G__14951__14962;
      f__14966.call(null, key__14965, this$, oldval, newval);
      var temp__3974__auto____14968 = cljs.core.next.call(null, G__14951__14967);
      if(temp__3974__auto____14968) {
        var G__14951__14969 = temp__3974__auto____14968;
        var G__14976 = cljs.core.first.call(null, G__14951__14969);
        var G__14977 = G__14951__14969;
        G__14954__14961 = G__14976;
        G__14951__14962 = G__14977;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__14970 = this;
  return this$.watches = cljs.core.assoc.call(null, this__14970.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__14971 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__14971.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__14972 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__14972.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__14973 = this;
  return this__14973.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__14974 = this;
  return this__14974.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__14975 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__14989__delegate = function(x, p__14978) {
      var map__14984__14985 = p__14978;
      var map__14984__14986 = cljs.core.seq_QMARK_.call(null, map__14984__14985) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14984__14985) : map__14984__14985;
      var validator__14987 = cljs.core._lookup.call(null, map__14984__14986, "\ufdd0'validator", null);
      var meta__14988 = cljs.core._lookup.call(null, map__14984__14986, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__14988, validator__14987, null)
    };
    var G__14989 = function(x, var_args) {
      var p__14978 = null;
      if(goog.isDef(var_args)) {
        p__14978 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14989__delegate.call(this, x, p__14978)
    };
    G__14989.cljs$lang$maxFixedArity = 1;
    G__14989.cljs$lang$applyTo = function(arglist__14990) {
      var x = cljs.core.first(arglist__14990);
      var p__14978 = cljs.core.rest(arglist__14990);
      return G__14989__delegate(x, p__14978)
    };
    G__14989.cljs$lang$arity$variadic = G__14989__delegate;
    return G__14989
  }();
  atom = function(x, var_args) {
    var p__14978 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____14994 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____14994)) {
    var validate__14995 = temp__3974__auto____14994;
    if(cljs.core.truth_(validate__14995.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__14996 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__14996, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__14997__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__14997 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14997__delegate.call(this, a, f, x, y, z, more)
    };
    G__14997.cljs$lang$maxFixedArity = 5;
    G__14997.cljs$lang$applyTo = function(arglist__14998) {
      var a = cljs.core.first(arglist__14998);
      var f = cljs.core.first(cljs.core.next(arglist__14998));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__14998)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14998))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14998)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__14998)))));
      return G__14997__delegate(a, f, x, y, z, more)
    };
    G__14997.cljs$lang$arity$variadic = G__14997__delegate;
    return G__14997
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14999) {
    var iref = cljs.core.first(arglist__14999);
    var f = cljs.core.first(cljs.core.next(arglist__14999));
    var args = cljs.core.rest(cljs.core.next(arglist__14999));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__15000 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__15000.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__15001 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__15001.state, function(p__15002) {
    var map__15003__15004 = p__15002;
    var map__15003__15005 = cljs.core.seq_QMARK_.call(null, map__15003__15004) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15003__15004) : map__15003__15004;
    var curr_state__15006 = map__15003__15005;
    var done__15007 = cljs.core._lookup.call(null, map__15003__15005, "\ufdd0'done", null);
    if(cljs.core.truth_(done__15007)) {
      return curr_state__15006
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__15001.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__15028__15029 = options;
    var map__15028__15030 = cljs.core.seq_QMARK_.call(null, map__15028__15029) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15028__15029) : map__15028__15029;
    var keywordize_keys__15031 = cljs.core._lookup.call(null, map__15028__15030, "\ufdd0'keywordize-keys", null);
    var keyfn__15032 = cljs.core.truth_(keywordize_keys__15031) ? cljs.core.keyword : cljs.core.str;
    var f__15047 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____15046 = function iter__15040(s__15041) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__15041__15044 = s__15041;
                    while(true) {
                      if(cljs.core.seq.call(null, s__15041__15044)) {
                        var k__15045 = cljs.core.first.call(null, s__15041__15044);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__15032.call(null, k__15045), thisfn.call(null, x[k__15045])], true), iter__15040.call(null, cljs.core.rest.call(null, s__15041__15044)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____15046.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__15047.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__15048) {
    var x = cljs.core.first(arglist__15048);
    var options = cljs.core.rest(arglist__15048);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__15053 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__15057__delegate = function(args) {
      var temp__3971__auto____15054 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__15053), args, null);
      if(cljs.core.truth_(temp__3971__auto____15054)) {
        var v__15055 = temp__3971__auto____15054;
        return v__15055
      }else {
        var ret__15056 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__15053, cljs.core.assoc, args, ret__15056);
        return ret__15056
      }
    };
    var G__15057 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15057__delegate.call(this, args)
    };
    G__15057.cljs$lang$maxFixedArity = 0;
    G__15057.cljs$lang$applyTo = function(arglist__15058) {
      var args = cljs.core.seq(arglist__15058);
      return G__15057__delegate(args)
    };
    G__15057.cljs$lang$arity$variadic = G__15057__delegate;
    return G__15057
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__15060 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__15060)) {
        var G__15061 = ret__15060;
        f = G__15061;
        continue
      }else {
        return ret__15060
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__15062__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__15062 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__15062__delegate.call(this, f, args)
    };
    G__15062.cljs$lang$maxFixedArity = 1;
    G__15062.cljs$lang$applyTo = function(arglist__15063) {
      var f = cljs.core.first(arglist__15063);
      var args = cljs.core.rest(arglist__15063);
      return G__15062__delegate(f, args)
    };
    G__15062.cljs$lang$arity$variadic = G__15062__delegate;
    return G__15062
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__15065 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__15065, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__15065, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____15074 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____15074) {
      return or__3824__auto____15074
    }else {
      var or__3824__auto____15075 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____15075) {
        return or__3824__auto____15075
      }else {
        var and__3822__auto____15076 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____15076) {
          var and__3822__auto____15077 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____15077) {
            var and__3822__auto____15078 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____15078) {
              var ret__15079 = true;
              var i__15080 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____15081 = cljs.core.not.call(null, ret__15079);
                  if(or__3824__auto____15081) {
                    return or__3824__auto____15081
                  }else {
                    return i__15080 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__15079
                }else {
                  var G__15082 = isa_QMARK_.call(null, h, child.call(null, i__15080), parent.call(null, i__15080));
                  var G__15083 = i__15080 + 1;
                  ret__15079 = G__15082;
                  i__15080 = G__15083;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____15078
            }
          }else {
            return and__3822__auto____15077
          }
        }else {
          return and__3822__auto____15076
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__15092 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__15093 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__15094 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__15095 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____15096 = cljs.core.contains_QMARK_.call(null, tp__15092.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__15094.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__15094.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__15092, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__15095.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__15093, parent, ta__15094), "\ufdd0'descendants":tf__15095.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__15094, tag, td__15093)})
    }();
    if(cljs.core.truth_(or__3824__auto____15096)) {
      return or__3824__auto____15096
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__15101 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__15102 = cljs.core.truth_(parentMap__15101.call(null, tag)) ? cljs.core.disj.call(null, parentMap__15101.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__15103 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__15102)) ? cljs.core.assoc.call(null, parentMap__15101, tag, childsParents__15102) : cljs.core.dissoc.call(null, parentMap__15101, tag);
    var deriv_seq__15104 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__15084_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15084_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15084_SHARP_), cljs.core.second.call(null, p1__15084_SHARP_)))
    }, cljs.core.seq.call(null, newParents__15103)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__15101.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15085_SHARP_, p2__15086_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15085_SHARP_, p2__15086_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__15104))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__15112 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____15114 = cljs.core.truth_(function() {
    var and__3822__auto____15113 = xprefs__15112;
    if(cljs.core.truth_(and__3822__auto____15113)) {
      return xprefs__15112.call(null, y)
    }else {
      return and__3822__auto____15113
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____15114)) {
    return or__3824__auto____15114
  }else {
    var or__3824__auto____15116 = function() {
      var ps__15115 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__15115) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__15115), prefer_table))) {
          }else {
          }
          var G__15119 = cljs.core.rest.call(null, ps__15115);
          ps__15115 = G__15119;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____15116)) {
      return or__3824__auto____15116
    }else {
      var or__3824__auto____15118 = function() {
        var ps__15117 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__15117) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__15117), y, prefer_table))) {
            }else {
            }
            var G__15120 = cljs.core.rest.call(null, ps__15117);
            ps__15117 = G__15120;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____15118)) {
        return or__3824__auto____15118
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____15122 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____15122)) {
    return or__3824__auto____15122
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__15140 = cljs.core.reduce.call(null, function(be, p__15132) {
    var vec__15133__15134 = p__15132;
    var k__15135 = cljs.core.nth.call(null, vec__15133__15134, 0, null);
    var ___15136 = cljs.core.nth.call(null, vec__15133__15134, 1, null);
    var e__15137 = vec__15133__15134;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__15135)) {
      var be2__15139 = cljs.core.truth_(function() {
        var or__3824__auto____15138 = be == null;
        if(or__3824__auto____15138) {
          return or__3824__auto____15138
        }else {
          return cljs.core.dominates.call(null, k__15135, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__15137 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__15139), k__15135, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__15135), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__15139)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__15139
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__15140)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__15140));
      return cljs.core.second.call(null, best_entry__15140)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____15145 = mf;
    if(and__3822__auto____15145) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____15145
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____15146 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15147 = cljs.core._reset[goog.typeOf(x__2363__auto____15146)];
      if(or__3824__auto____15147) {
        return or__3824__auto____15147
      }else {
        var or__3824__auto____15148 = cljs.core._reset["_"];
        if(or__3824__auto____15148) {
          return or__3824__auto____15148
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____15153 = mf;
    if(and__3822__auto____15153) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____15153
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____15154 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15155 = cljs.core._add_method[goog.typeOf(x__2363__auto____15154)];
      if(or__3824__auto____15155) {
        return or__3824__auto____15155
      }else {
        var or__3824__auto____15156 = cljs.core._add_method["_"];
        if(or__3824__auto____15156) {
          return or__3824__auto____15156
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15161 = mf;
    if(and__3822__auto____15161) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____15161
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____15162 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15163 = cljs.core._remove_method[goog.typeOf(x__2363__auto____15162)];
      if(or__3824__auto____15163) {
        return or__3824__auto____15163
      }else {
        var or__3824__auto____15164 = cljs.core._remove_method["_"];
        if(or__3824__auto____15164) {
          return or__3824__auto____15164
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____15169 = mf;
    if(and__3822__auto____15169) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____15169
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____15170 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15171 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____15170)];
      if(or__3824__auto____15171) {
        return or__3824__auto____15171
      }else {
        var or__3824__auto____15172 = cljs.core._prefer_method["_"];
        if(or__3824__auto____15172) {
          return or__3824__auto____15172
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____15177 = mf;
    if(and__3822__auto____15177) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____15177
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____15178 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15179 = cljs.core._get_method[goog.typeOf(x__2363__auto____15178)];
      if(or__3824__auto____15179) {
        return or__3824__auto____15179
      }else {
        var or__3824__auto____15180 = cljs.core._get_method["_"];
        if(or__3824__auto____15180) {
          return or__3824__auto____15180
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____15185 = mf;
    if(and__3822__auto____15185) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____15185
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____15186 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15187 = cljs.core._methods[goog.typeOf(x__2363__auto____15186)];
      if(or__3824__auto____15187) {
        return or__3824__auto____15187
      }else {
        var or__3824__auto____15188 = cljs.core._methods["_"];
        if(or__3824__auto____15188) {
          return or__3824__auto____15188
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____15193 = mf;
    if(and__3822__auto____15193) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____15193
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____15194 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15195 = cljs.core._prefers[goog.typeOf(x__2363__auto____15194)];
      if(or__3824__auto____15195) {
        return or__3824__auto____15195
      }else {
        var or__3824__auto____15196 = cljs.core._prefers["_"];
        if(or__3824__auto____15196) {
          return or__3824__auto____15196
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____15201 = mf;
    if(and__3822__auto____15201) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____15201
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____15202 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____15203 = cljs.core._dispatch[goog.typeOf(x__2363__auto____15202)];
      if(or__3824__auto____15203) {
        return or__3824__auto____15203
      }else {
        var or__3824__auto____15204 = cljs.core._dispatch["_"];
        if(or__3824__auto____15204) {
          return or__3824__auto____15204
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__15207 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__15208 = cljs.core._get_method.call(null, mf, dispatch_val__15207);
  if(cljs.core.truth_(target_fn__15208)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__15207)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__15208, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15209 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__15210 = this;
  cljs.core.swap_BANG_.call(null, this__15210.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15210.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15210.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__15210.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__15211 = this;
  cljs.core.swap_BANG_.call(null, this__15211.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__15211.method_cache, this__15211.method_table, this__15211.cached_hierarchy, this__15211.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__15212 = this;
  cljs.core.swap_BANG_.call(null, this__15212.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__15212.method_cache, this__15212.method_table, this__15212.cached_hierarchy, this__15212.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__15213 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__15213.cached_hierarchy), cljs.core.deref.call(null, this__15213.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__15213.method_cache, this__15213.method_table, this__15213.cached_hierarchy, this__15213.hierarchy)
  }
  var temp__3971__auto____15214 = cljs.core.deref.call(null, this__15213.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____15214)) {
    var target_fn__15215 = temp__3971__auto____15214;
    return target_fn__15215
  }else {
    var temp__3971__auto____15216 = cljs.core.find_and_cache_best_method.call(null, this__15213.name, dispatch_val, this__15213.hierarchy, this__15213.method_table, this__15213.prefer_table, this__15213.method_cache, this__15213.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____15216)) {
      var target_fn__15217 = temp__3971__auto____15216;
      return target_fn__15217
    }else {
      return cljs.core.deref.call(null, this__15213.method_table).call(null, this__15213.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__15218 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__15218.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__15218.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__15218.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__15218.method_cache, this__15218.method_table, this__15218.cached_hierarchy, this__15218.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__15219 = this;
  return cljs.core.deref.call(null, this__15219.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__15220 = this;
  return cljs.core.deref.call(null, this__15220.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__15221 = this;
  return cljs.core.do_dispatch.call(null, mf, this__15221.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__15223__delegate = function(_, args) {
    var self__15222 = this;
    return cljs.core._dispatch.call(null, self__15222, args)
  };
  var G__15223 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__15223__delegate.call(this, _, args)
  };
  G__15223.cljs$lang$maxFixedArity = 1;
  G__15223.cljs$lang$applyTo = function(arglist__15224) {
    var _ = cljs.core.first(arglist__15224);
    var args = cljs.core.rest(arglist__15224);
    return G__15223__delegate(_, args)
  };
  G__15223.cljs$lang$arity$variadic = G__15223__delegate;
  return G__15223
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__15225 = this;
  return cljs.core._dispatch.call(null, self__15225, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__15226 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_15228, _) {
  var this__15227 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__15227.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__15229 = this;
  var and__3822__auto____15230 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____15230) {
    return this__15229.uuid === other.uuid
  }else {
    return and__3822__auto____15230
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__15231 = this;
  var this__15232 = this;
  return cljs.core.pr_str.call(null, this__15232)
};
cljs.core.UUID;
goog.provide("goog.vec.Float32Array");
goog.vec.Float32Array = function(p0) {
  this.length = p0.length || p0;
  for(var i = 0;i < this.length;i++) {
    this[i] = p0[i] || 0
  }
};
goog.vec.Float32Array.BYTES_PER_ELEMENT = 4;
goog.vec.Float32Array.prototype.BYTES_PER_ELEMENT = 4;
goog.vec.Float32Array.prototype.set = function(values, opt_offset) {
  opt_offset = opt_offset || 0;
  for(var i = 0;i < values.length && opt_offset + i < this.length;i++) {
    this[opt_offset + i] = values[i]
  }
};
goog.vec.Float32Array.prototype.toString = Array.prototype.join;
if(typeof Float32Array == "undefined") {
  goog.exportProperty(goog.vec.Float32Array, "BYTES_PER_ELEMENT", goog.vec.Float32Array.BYTES_PER_ELEMENT);
  goog.exportProperty(goog.vec.Float32Array.prototype, "BYTES_PER_ELEMENT", goog.vec.Float32Array.prototype.BYTES_PER_ELEMENT);
  goog.exportProperty(goog.vec.Float32Array.prototype, "set", goog.vec.Float32Array.prototype.set);
  goog.exportProperty(goog.vec.Float32Array.prototype, "toString", goog.vec.Float32Array.prototype.toString);
  goog.exportSymbol("Float32Array", goog.vec.Float32Array)
}
;goog.provide("goog.vec");
goog.require("goog.vec.Float32Array");
goog.vec.ArrayType;
goog.vec.EPSILON = 1.0E-6;
goog.provide("webgl.matrix");
goog.require("cljs.core");
webgl.matrix.make = cljs.core.comp.call(null, function(p1__11009_SHARP_) {
  return new Float32Array(p1__11009_SHARP_)
}, cljs.core.array);
webgl.matrix.identity = webgl.matrix.make.call(null, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
webgl.matrix.translation = function translation(t) {
  return webgl.matrix.make.call(null, 1, 0, 0, t[0], 0, 1, 0, t[1], 0, 0, 1, t[2], 0, 0, 0, 1)
};
webgl.matrix.scaling = function scaling(s) {
  return webgl.matrix.make.call(null, s, 0, 0, 0, 0, s, 0, 0, 0, 0, s, 0, 0, 0, 0, s)
};
webgl.matrix.x_rotation = function x_rotation(angle) {
  var sin__11012 = Math.sin(angle);
  var cos__11013 = Math.cos(angle);
  return webgl.matrix.make.call(null, 1, 0, 0, 0, 0, cos__11013, -sin__11012, 0, 0, sin__11012, cos__11013, 0, 0, 0, 0, 1)
};
webgl.matrix.y_rotation = function y_rotation(angle) {
  var sin__11016 = Math.sin(angle);
  var cos__11017 = Math.cos(angle);
  return webgl.matrix.make.call(null, cos__11017, 0, sin__11016, 0, 0, 1, 0, 0, -sin__11016, 0, cos__11017, 0, 0, 0, 0, 1)
};
webgl.matrix.z_rotation = function z_rotation(angle) {
  var sin__11020 = Math.sin(angle);
  var cos__11021 = Math.cos(angle);
  return webgl.matrix.make.call(null, cos__11021, -sin__11020, 0, 0, sin__11020, cos__11021, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
};
webgl.matrix.transpose = function transpose(m) {
  var clone__11027 = new Float32Array(m);
  var y__11028 = 0;
  while(true) {
    if(y__11028 < 3) {
      var x__11029 = y__11028 + 1;
      while(true) {
        if(x__11029 < 4) {
          var upper__11030 = x__11029 + y__11028 * 4;
          var lower__11031 = y__11028 + x__11029 * 4;
          clone__11027[upper__11030] = m[lower__11031];
          clone__11027[lower__11031] = m[upper__11030];
          var G__11032 = x__11029 + 1;
          x__11029 = G__11032;
          continue
        }else {
        }
        break
      }
      var G__11033 = y__11028 + 1;
      y__11028 = G__11033;
      continue
    }else {
    }
    break
  }
  return clone__11027
};
webgl.matrix._STAR_ = function _STAR_(l, r) {
  var clone__11043 = new Float32Array(l);
  var row__11044 = 0;
  while(true) {
    if(row__11044 < l.length) {
      var r1__11045 = row__11044 + 1;
      var r2__11046 = row__11044 + 2;
      var r3__11047 = row__11044 + 3;
      var v0__11048 = l[row__11044];
      var v1__11049 = l[r1__11045];
      var v2__11050 = l[r2__11046];
      var v3__11051 = l[r3__11047];
      clone__11043[row__11044] = v0__11048 * r[0] + v1__11049 * r[4] + v2__11050 * r[8] + v3__11051 * r[12];
      clone__11043[r1__11045] = v0__11048 * r[1] + v1__11049 * r[5] + v2__11050 * r[9] + v3__11051 * r[13];
      clone__11043[r2__11046] = v0__11048 * r[2] + v1__11049 * r[6] + v2__11050 * r[10] + v3__11051 * r[14];
      clone__11043[r3__11047] = v0__11048 * r[3] + v1__11049 * r[7] + v2__11050 * r[11] + v3__11051 * r[15];
      var G__11052 = row__11044 + 4;
      row__11044 = G__11052;
      continue
    }else {
    }
    break
  }
  return clone__11043
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__15239 = s;
      var limit__15240 = limit;
      var parts__15241 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__15240, 1)) {
          return cljs.core.conj.call(null, parts__15241, s__15239)
        }else {
          var temp__3971__auto____15242 = cljs.core.re_find.call(null, re, s__15239);
          if(cljs.core.truth_(temp__3971__auto____15242)) {
            var m__15243 = temp__3971__auto____15242;
            var index__15244 = s__15239.indexOf(m__15243);
            var G__15245 = s__15239.substring(index__15244 + cljs.core.count.call(null, m__15243));
            var G__15246 = limit__15240 - 1;
            var G__15247 = cljs.core.conj.call(null, parts__15241, s__15239.substring(0, index__15244));
            s__15239 = G__15245;
            limit__15240 = G__15246;
            parts__15241 = G__15247;
            continue
          }else {
            return cljs.core.conj.call(null, parts__15241, s__15239)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__15251 = s.length;
  while(true) {
    if(index__15251 === 0) {
      return""
    }else {
      var ch__15252 = cljs.core._lookup.call(null, s, index__15251 - 1, null);
      if(function() {
        var or__3824__auto____15253 = cljs.core._EQ_.call(null, ch__15252, "\n");
        if(or__3824__auto____15253) {
          return or__3824__auto____15253
        }else {
          return cljs.core._EQ_.call(null, ch__15252, "\r")
        }
      }()) {
        var G__15254 = index__15251 - 1;
        index__15251 = G__15254;
        continue
      }else {
        return s.substring(0, index__15251)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__15258 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____15259 = cljs.core.not.call(null, s__15258);
    if(or__3824__auto____15259) {
      return or__3824__auto____15259
    }else {
      var or__3824__auto____15260 = cljs.core._EQ_.call(null, "", s__15258);
      if(or__3824__auto____15260) {
        return or__3824__auto____15260
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__15258)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__15267 = new goog.string.StringBuffer;
  var length__15268 = s.length;
  var index__15269 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__15268, index__15269)) {
      return buffer__15267.toString()
    }else {
      var ch__15270 = s.charAt(index__15269);
      var temp__3971__auto____15271 = cljs.core._lookup.call(null, cmap, ch__15270, null);
      if(cljs.core.truth_(temp__3971__auto____15271)) {
        var replacement__15272 = temp__3971__auto____15271;
        buffer__15267.append([cljs.core.str(replacement__15272)].join(""))
      }else {
        buffer__15267.append(ch__15270)
      }
      var G__15273 = index__15269 + 1;
      index__15269 = G__15273;
      continue
    }
    break
  }
};
goog.provide("webgl.test.matrix");
goog.require("cljs.core");
goog.require("goog.vec");
goog.require("goog.string");
goog.require("webgl.matrix");
goog.require("clojure.string");
webgl.test.matrix.epsilon = 1.0E-4;
webgl.test.matrix.cell__GT_str = function cell__GT_str(row, cell) {
  return row[cell].toFixed(5)
};
webgl.test.matrix.row__GT_str = function row__GT_str(matrix, i) {
  var row__11235 = matrix.subarray(i, i + 4);
  return clojure.string.join.call(null, ", ", cljs.core.map.call(null, cljs.core.partial.call(null, webgl.test.matrix.cell__GT_str, row__11235), cljs.core.range.call(null, 4)))
};
webgl.test.matrix.matrix__GT_str = function matrix__GT_str(array) {
  return[cljs.core.str("["), cljs.core.str(clojure.string.join.call(null, "\n ", cljs.core.map.call(null, cljs.core.partial.call(null, webgl.test.matrix.row__GT_str, array), cljs.core.range.call(null, 4)))), cljs.core.str("]")].join("")
};
webgl.test.matrix.roughly = function roughly(this__11224__auto__) {
  var matchers__11225__auto____11250 = {};
  matchers__11225__auto____11250["roughly"] = function() {
    var G__11264__delegate = function(rest__11226__auto__) {
      var this_fn__11227__auto____11251 = this;
      var vec__11252__11253 = cljs.core.cons.call(null, this_fn__11227__auto____11251["actual"], rest__11226__auto__);
      var actual__11254 = cljs.core.nth.call(null, vec__11252__11253, 0, null);
      var expected__11255 = cljs.core.nth.call(null, vec__11252__11253, 1, null);
      var checker__11228__auto____11262 = function() {
        var a__2521__auto____11256 = expected__11255;
        var i__11257 = 0;
        var equal_QMARK___11258 = true;
        while(true) {
          if(i__11257 < a__2521__auto____11256.length) {
            var G__11265 = i__11257 + 1;
            var G__11266 = function() {
              var error__11259 = expected__11255[i__11257] - actual__11254[i__11257];
              var and__3822__auto____11260 = error__11259 < webgl.test.matrix.epsilon;
              if(and__3822__auto____11260) {
                var and__3822__auto____11261 = error__11259 > -webgl.test.matrix.epsilon;
                if(and__3822__auto____11261) {
                  return equal_QMARK___11258
                }else {
                  return and__3822__auto____11261
                }
              }else {
                return and__3822__auto____11260
              }
            }();
            i__11257 = G__11265;
            equal_QMARK___11258 = G__11266;
            continue
          }else {
            return equal_QMARK___11258
          }
          break
        }
      };
      var this__11218__auto____11263 = this;
      this__11218__auto____11263["message"] = function() {
        return goog.string.format("Expected value of:\n%s\ndoes not equal actual value:\n%s,\nwith an error tollerance of: %f", webgl.test.matrix.matrix__GT_str.call(null, expected__11255), webgl.test.matrix.matrix__GT_str.call(null, actual__11254), webgl.test.matrix.epsilon)
      };
      return checker__11228__auto____11262.call(null)
    };
    var G__11264 = function(var_args) {
      var rest__11226__auto__ = null;
      if(goog.isDef(var_args)) {
        rest__11226__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11264__delegate.call(this, rest__11226__auto__)
    };
    G__11264.cljs$lang$maxFixedArity = 0;
    G__11264.cljs$lang$applyTo = function(arglist__11267) {
      var rest__11226__auto__ = cljs.core.seq(arglist__11267);
      return G__11264__delegate(rest__11226__auto__)
    };
    G__11264.cljs$lang$arity$variadic = G__11264__delegate;
    return G__11264
  }();
  return this__11224__auto__.addMatchers(matchers__11225__auto____11250)
};
describe("When multiplying", function() {
  it("two identity matrices, the result should be the identity matrix", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11270 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11270)
    }
    return expect(webgl.matrix._STAR_.call(null, webgl.matrix.identity, webgl.matrix.identity)).roughly(webgl.matrix.identity)
  });
  it("with identity on the left side the right operand should be preserved", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11273 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11273)
    }
    return expect(webgl.matrix._STAR_.call(null, webgl.matrix.identity, webgl.matrix.translation.call(null, webgl.matrix.make.call(null, 1, 0, 0)))).roughly(webgl.matrix.translation.call(null, webgl.matrix.make.call(null, 1, 0, 0)))
  });
  return it("with identity on the right side the left operand should be preseved", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11276 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11276)
    }
    return expect(webgl.matrix._STAR_.call(null, webgl.matrix.translation.call(null, webgl.matrix.make.call(null, 0.1, 0.5, 1)), webgl.matrix.identity)).roughly(webgl.matrix.translation.call(null, webgl.matrix.make.call(null, 0.1, 0.5, 1)))
  })
});
describe("The transpose", function() {
  it("of the identity matrix is the identity matrix", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11279 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11279)
    }
    return expect(webgl.matrix.transpose.call(null, webgl.matrix.identity)).roughly(webgl.matrix.identity)
  });
  var to_transpose__11280 = webgl.matrix.make.call(null, 0, 0.1, 0.2, 0.3, 1.1, 0, 0.4, 0.5, 1.2, 1.3, 0, 0.6, 1.4, 1.5, 1.6, 0);
  var transposed__11281 = webgl.matrix.make.call(null, 0, 1.1, 1.2, 1.4, 0.1, 0, 1.3, 1.5, 0.2, 0.4, 0, 1.6, 0.3, 0.5, 0.6, 0);
  it("of any matrix A is another matrix A' with the rows of A as columns", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11284 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11284)
    }
    return expect(webgl.matrix.transpose.call(null, to_transpose__11280)).roughly(transposed__11281)
  });
  it("of a transposed matrix is the original matrix", function() {
    if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
    }else {
      var this__11212__auto____11287 = this;
      webgl.test.matrix.roughly.call(null, this__11212__auto____11287)
    }
    return expect(webgl.matrix.transpose.call(null, webgl.matrix.transpose.call(null, to_transpose__11280))).roughly(to_transpose__11280)
  });
  return it("of the multiplication of two matrices is the same as the multiplication of\n           the trnaspose of each individual matrix", function() {
    var A__11288 = webgl.matrix.x_rotation.call(null, 1.5);
    var B__11289 = webgl.matrix.z_rotation.call(null, 0.8);
    return function() {
      if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd1'webgl.jasmine/toBeTruthy", "\ufdd1'webgl.jasmine/toBeFalsy"]), "\ufdd1'roughly")) {
      }else {
        var this__11212__auto____11292 = this;
        webgl.test.matrix.roughly.call(null, this__11212__auto____11292)
      }
      return expect(webgl.matrix.transpose.call(null, webgl.matrix._STAR_.call(null, A__11288, B__11289))).roughly(webgl.matrix._STAR_.call(null, webgl.matrix.transpose.call(null, B__11289), webgl.matrix.transpose.call(null, A__11288)))
    }
  }())
});
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("webgl.shader.code");
goog.require("cljs.core");
goog.require("clojure.string");
webgl.shader.code.joiner = function joiner(delimeter) {
  return cljs.core.partial.call(null, clojure.string.join, delimeter)
};
webgl.shader.code.variadic = function variadic(f) {
  return cljs.core.comp.call(null, f, cljs.core.list)
};
webgl.shader.code.embracer = function embracer(open, close) {
  return function(p1__10652_SHARP_) {
    return[cljs.core.str(open), cljs.core.str(p1__10652_SHARP_), cljs.core.str(close)].join("")
  }
};
webgl.shader.code.encloser = function encloser(s) {
  return webgl.shader.code.embracer.call(null, s, s)
};
webgl.shader.code.applier = function applier(f) {
  return function() {
    var G__10654__delegate = function(rest__10653_SHARP_) {
      return cljs.core.apply.call(null, f, rest__10653_SHARP_)
    };
    var G__10654 = function(var_args) {
      var rest__10653_SHARP_ = null;
      if(goog.isDef(var_args)) {
        rest__10653_SHARP_ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10654__delegate.call(this, rest__10653_SHARP_)
    };
    G__10654.cljs$lang$maxFixedArity = 0;
    G__10654.cljs$lang$applyTo = function(arglist__10655) {
      var rest__10653_SHARP_ = cljs.core.seq(arglist__10655);
      return G__10654__delegate(rest__10653_SHARP_)
    };
    G__10654.cljs$lang$arity$variadic = G__10654__delegate;
    return G__10654
  }()
};
webgl.shader.code.concatter = function concatter(f) {
  return cljs.core.comp.call(null, f, webgl.shader.code.applier.call(null, cljs.core.concat))
};
webgl.shader.code.words = webgl.shader.code.joiner.call(null, " ");
webgl.shader.code.lines = webgl.shader.code.joiner.call(null, "\n");
webgl.shader.code.stars = webgl.shader.code.joiner.call(null, "*");
webgl.shader.code.words_STAR_ = webgl.shader.code.variadic.call(null, webgl.shader.code.words);
webgl.shader.code.lines_STAR_ = webgl.shader.code.variadic.call(null, webgl.shader.code.lines);
webgl.shader.code.stars_STAR_ = webgl.shader.code.variadic.call(null, webgl.shader.code.stars);
webgl.shader.code.braces = webgl.shader.code.embracer.call(null, "{", "}");
webgl.shader.code.enline = webgl.shader.code.encloser.call(null, "\n");
webgl.shader.code.block = cljs.core.comp.call(null, webgl.shader.code.braces, webgl.shader.code.enline);
webgl.shader.code.line_cat = webgl.shader.code.concatter.call(null, webgl.shader.code.lines);
webgl.shader.code.statement = function statement(x) {
  return[cljs.core.str(x), cljs.core.str(";")].join("")
};
webgl.shader.code.identifier = function identifier(prefix) {
  return cljs.core.name.call(null, cljs.core.gensym.call(null, cljs.core.name.call(null, prefix)))
};
webgl.shader.code.attribute_printer = function attribute_printer(key, type, name) {
  return webgl.shader.code.statement.call(null, webgl.shader.code.words.call(null, cljs.core.vector.call(null, key, type, name)))
};
webgl.shader.code.func = function func(name, body) {
  return webgl.shader.code.lines_STAR_.call(null, webgl.shader.code.words_STAR_.call(null, "void", [cljs.core.str(name), cljs.core.str("()")].join("")), webgl.shader.code.block.call(null, body))
};
webgl.shader.code.main = function main(code) {
  return webgl.shader.code.func.call(null, "main", webgl.shader.code.statement.call(null, webgl.shader.code.words.call(null, cljs.core.vector.call(null, "gl_Position", "=", code))))
};
webgl.shader.code.shader = function shader(declarations, out) {
  return webgl.shader.code.lines_STAR_.call(null, webgl.shader.code.lines.call(null, declarations), webgl.shader.code.main.call(null, out))
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("webgl.editor");
goog.require("cljs.core");
webgl.editor.add_triangle = function add_triangle(editor, cell) {
  console.log("TEST");
  var template__16808 = editor.templates["triangle"];
  var graph__16809 = editor.graph;
  var model__16810 = graph__16809.model;
  var clone__16811 = model__16810.cloneCell(template__16808);
  var parent__16812 = graph__16809.getDefaultParent();
  model__16810.beginUpdate();
  model__16810.add(parent__16812, clone__16811);
  return model__16810.endUpdate()
};
webgl.editor.add_linear = function add_linear(editor, cell) {
  var template__16818 = editor.templates["linear"];
  var graph__16819 = editor.graph;
  var model__16820 = graph__16819.model;
  var clone__16821 = model__16820.cloneCell(template__16818);
  var parent__16822 = graph__16819.getDefaultParent();
  model__16820.beginUpdate();
  model__16820.add(parent__16822, clone__16821);
  graph__16819.insertEdge(parent__16822, null, cell, clone__16821);
  return model__16820.endUpdate()
};
webgl.editor.load_config = function load_config(path) {
  var config__16826 = mxUtils.load(path).getDocumentElement();
  var G__16827__16828 = new mxEditor(config__16826);
  G__16827__16828.addAction("triangle", webgl.editor.add_triangle);
  G__16827__16828.addAction("linear", webgl.editor.add_linear);
  return G__16827__16828
};
goog.provide("webgl.constants");
goog.require("cljs.core");
webgl.constants.flags = cljs.core.ObjMap.fromObject(["\ufdd0'float", "\ufdd0'array", "\ufdd0'triangles", "\ufdd0'color-buffer", "\ufdd0'static", "\ufdd0'fragment", "\ufdd0'index", "\ufdd0'vertex", "\ufdd0'unsigned-short"], {"\ufdd0'float":WebGLRenderingContext.FLOAT, "\ufdd0'array":WebGLRenderingContext.ARRAY_BUFFER, "\ufdd0'triangles":WebGLRenderingContext.TRIANGLES, "\ufdd0'color-buffer":WebGLRenderingContext.COLOR_BUFFER_BIT, "\ufdd0'static":WebGLRenderingContext.STATIC_DRAW, "\ufdd0'fragment":WebGLRenderingContext.FRAGMENT_SHADER, 
"\ufdd0'index":WebGLRenderingContext.ELEMENT_ARRAY_BUFFER, "\ufdd0'vertex":WebGLRenderingContext.VERTEX_SHADER, "\ufdd0'unsigned-short":WebGLRenderingContext.UNSIGNED_SHORT});
webgl.constants.get = webgl.constants.flags;
goog.provide("webgl.api");
goog.require("cljs.core");
goog.require("webgl.constants");
webgl.api._STAR_context_STAR_ = null;
webgl.api.make_context = function make_context(canvas) {
  return canvas.getContext("experimental-webgl")
};
webgl.api.context = function context() {
  return webgl.api._STAR_context_STAR_
};
webgl.api.canvas = function canvas() {
  return webgl.api._STAR_context_STAR_.canvas
};
webgl.api.with_context = function() {
  var with_context__delegate = function(context, f, args) {
    var _STAR_context_STAR_11005__11006 = webgl.api._STAR_context_STAR_;
    try {
      webgl.api._STAR_context_STAR_ = context;
      return cljs.core.apply.call(null, f, args)
    }finally {
      webgl.api._STAR_context_STAR_ = _STAR_context_STAR_11005__11006
    }
  };
  var with_context = function(context, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return with_context__delegate.call(this, context, f, args)
  };
  with_context.cljs$lang$maxFixedArity = 2;
  with_context.cljs$lang$applyTo = function(arglist__11008) {
    var context = cljs.core.first(arglist__11008);
    var f = cljs.core.first(cljs.core.next(arglist__11008));
    var args = cljs.core.rest(cljs.core.next(arglist__11008));
    return with_context__delegate(context, f, args)
  };
  with_context.cljs$lang$arity$variadic = with_context__delegate;
  return with_context
}();
webgl.api.make_program = function make_program() {
  return webgl.api._STAR_context_STAR_.createProgram()
};
webgl.api.make_shader = function make_shader(type) {
  return webgl.api._STAR_context_STAR_.createShader(webgl.constants.get.call(null, type))
};
webgl.api.set_source = function set_source(shader, code) {
  return webgl.api._STAR_context_STAR_.shaderSource(shader, code)
};
webgl.api.compile_shader = function compile_shader(shader) {
  return webgl.api._STAR_context_STAR_.compileShader(shader)
};
webgl.api.attach_shader = function attach_shader(program, shader) {
  return webgl.api._STAR_context_STAR_.attachShader(program, shader)
};
webgl.api.link_program = function link_program(program) {
  return webgl.api._STAR_context_STAR_.linkProgram(program)
};
webgl.api.use_program = function use_program(program) {
  return webgl.api._STAR_context_STAR_.useProgram(program)
};
webgl.api.make_buffer = function make_buffer() {
  return webgl.api._STAR_context_STAR_.createBuffer()
};
webgl.api.bind_buffer = function bind_buffer(buffer_type, id) {
  return webgl.api._STAR_context_STAR_.bindBuffer(webgl.constants.get.call(null, buffer_type), id)
};
webgl.api.buffer_data = function buffer_data(buffer_type, data) {
  return webgl.api._STAR_context_STAR_.bufferData(webgl.constants.get.call(null, buffer_type), data, webgl.constants.get.call(null, "\ufdd0'static"))
};
webgl.api.attribute_location = function attribute_location(program, name) {
  return webgl.api._STAR_context_STAR_.getAttribLocation(program, name)
};
webgl.api.vertex_attribute_pointer = function vertex_attribute_pointer(location, size, data_type, normalized_QMARK_, stride, offset) {
  return webgl.api._STAR_context_STAR_.vertexAttribPointer(location, size, webgl.constants.get.call(null, data_type), normalized_QMARK_, stride, offset)
};
webgl.api.enable_vertex_attribute_array = function enable_vertex_attribute_array(location) {
  return webgl.api._STAR_context_STAR_.enableVertexAttribArray(location)
};
webgl.api.uniform_location = function uniform_location(program, name) {
  return webgl.api._STAR_context_STAR_.getUniformLocation(program, name)
};
webgl.api.uniform_matrix = function uniform_matrix(location, value) {
  return webgl.api._STAR_context_STAR_.uniformMatrix4fv(location, false, new Float32Array(value))
};
webgl.api.clear_color = function clear_color(r, g, b, a) {
  return webgl.api._STAR_context_STAR_.clearColor(r, g, b, a)
};
webgl.api.clear = function clear(buffer_type) {
  return webgl.api._STAR_context_STAR_.clear(webgl.constants.get.call(null, buffer_type))
};
webgl.api.draw_arrays = function draw_arrays(primitive_type, offset, n) {
  return webgl.api._STAR_context_STAR_.drawArrays(webgl.constants.get.call(null, primitive_type), offset, n)
};
webgl.api.draw_elements = function draw_elements(primitive_type, n, data_type, offset) {
  return webgl.api._STAR_context_STAR_.drawElements(webgl.constants.get.call(null, primitive_type), n, webgl.constants.get.call(null, data_type), offset)
};
webgl.api.error__GT_str = cljs.core.PersistentArrayMap.fromArrays([0, 1280, 1281, 1282, 1285], ["No Error", "Invalid Enum", "Invalid Value", "Invalid Operation", "Out Of Memory"]);
webgl.api.error = function error() {
  return webgl.api.error__GT_str.call(null, webgl.api._STAR_context_STAR_.getError())
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("webgl.buffer");
goog.require("cljs.core");
goog.require("webgl.constants");
goog.require("webgl.api");
webgl.buffer.Buffer = function(type, id, __meta, __extmap) {
  this.type = type;
  this.id = id;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
webgl.buffer.Buffer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__11056 = this;
  var h__2192__auto____11057 = this__11056.__hash;
  if(!(h__2192__auto____11057 == null)) {
    return h__2192__auto____11057
  }else {
    var h__2192__auto____11058 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__11056.__hash = h__2192__auto____11058;
    return h__2192__auto____11058
  }
};
webgl.buffer.Buffer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__11059 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
webgl.buffer.Buffer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k11054, else__2326__auto__) {
  var this__11060 = this;
  if(k11054 === "\ufdd0'type") {
    return this__11060.type
  }else {
    if(k11054 === "\ufdd0'id") {
      return this__11060.id
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__11060.__extmap, k11054, else__2326__auto__)
      }else {
        return null
      }
    }
  }
};
webgl.buffer.Buffer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__11053) {
  var this__11061 = this;
  var pred__11062__11065 = cljs.core.identical_QMARK_;
  var expr__11063__11066 = k__2331__auto__;
  if(pred__11062__11065.call(null, "\ufdd0'type", expr__11063__11066)) {
    return new webgl.buffer.Buffer(G__11053, this__11061.id, this__11061.__meta, this__11061.__extmap, null)
  }else {
    if(pred__11062__11065.call(null, "\ufdd0'id", expr__11063__11066)) {
      return new webgl.buffer.Buffer(this__11061.type, G__11053, this__11061.__meta, this__11061.__extmap, null)
    }else {
      return new webgl.buffer.Buffer(this__11061.type, this__11061.id, this__11061.__meta, cljs.core.assoc.call(null, this__11061.__extmap, k__2331__auto__, G__11053), null)
    }
  }
};
webgl.buffer.Buffer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__11067 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
webgl.buffer.Buffer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__11068 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'type", this__11068.type), cljs.core.vector.call(null, "\ufdd0'id", this__11068.id)], true), this__11068.__extmap))
};
webgl.buffer.Buffer.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__11069 = this;
  var pr_pair__2339__auto____11070 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____11070, [cljs.core.str("#"), cljs.core.str("Buffer"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'type", this__11069.type), cljs.core.vector.call(null, "\ufdd0'id", this__11069.id)], true), this__11069.__extmap))
};
webgl.buffer.Buffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__11071 = this;
  return 2 + cljs.core.count.call(null, this__11071.__extmap)
};
webgl.buffer.Buffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__11072 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____11073 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____11073)) {
      var and__3822__auto____11074 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____11074) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____11074
      }
    }else {
      return and__3822__auto____11073
    }
  }())) {
    return true
  }else {
    return false
  }
};
webgl.buffer.Buffer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__11053) {
  var this__11075 = this;
  return new webgl.buffer.Buffer(this__11075.type, this__11075.id, G__11053, this__11075.__extmap, this__11075.__hash)
};
webgl.buffer.Buffer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__11076 = this;
  return this__11076.__meta
};
webgl.buffer.Buffer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__11077 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'type", "\ufdd0'id"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__11077.__meta), k__2333__auto__)
  }else {
    return new webgl.buffer.Buffer(this__11077.type, this__11077.id, this__11077.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11077.__extmap, k__2333__auto__)), null)
  }
};
webgl.buffer.Buffer.cljs$lang$type = true;
webgl.buffer.Buffer.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "webgl.buffer/Buffer")
};
webgl.buffer.__GT_Buffer = function __GT_Buffer(type, id) {
  return new webgl.buffer.Buffer(type, id)
};
webgl.buffer.map__GT_Buffer = function map__GT_Buffer(G__11055) {
  return new webgl.buffer.Buffer((new cljs.core.Keyword("\ufdd0'type")).call(null, G__11055), (new cljs.core.Keyword("\ufdd0'id")).call(null, G__11055), null, cljs.core.dissoc.call(null, G__11055, "\ufdd0'type", "\ufdd0'id"))
};
webgl.buffer.Buffer;
webgl.buffer.bind = function bind(buffer) {
  return webgl.api.bind_buffer.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, buffer), (new cljs.core.Keyword("\ufdd0'id")).call(null, buffer))
};
webgl.buffer.make = function make(buffer_type, content) {
  var id__11080 = webgl.api.make_buffer.call(null);
  var buffer__11081 = new webgl.buffer.Buffer(buffer_type, id__11080);
  webgl.buffer.bind.call(null, buffer__11081);
  webgl.api.buffer_data.call(null, buffer_type, content);
  return buffer__11081
};
goog.provide("webgl.geometry");
goog.require("cljs.core");
goog.require("webgl.buffer");
webgl.geometry.as_float32 = function as_float32(v) {
  return new Float32Array(v)
};
webgl.geometry.as_uint16 = function as_uint16(v) {
  return new Uint16Array(v)
};
webgl.geometry.AsBuffered = {};
webgl.geometry.as_buffered = function as_buffered(_) {
  if(function() {
    var and__3822__auto____10532 = _;
    if(and__3822__auto____10532) {
      return _.webgl$geometry$AsBuffered$as_buffered$arity$1
    }else {
      return and__3822__auto____10532
    }
  }()) {
    return _.webgl$geometry$AsBuffered$as_buffered$arity$1(_)
  }else {
    var x__2363__auto____10533 = _ == null ? null : _;
    return function() {
      var or__3824__auto____10534 = webgl.geometry.as_buffered[goog.typeOf(x__2363__auto____10533)];
      if(or__3824__auto____10534) {
        return or__3824__auto____10534
      }else {
        var or__3824__auto____10535 = webgl.geometry.as_buffered["_"];
        if(or__3824__auto____10535) {
          return or__3824__auto____10535
        }else {
          throw cljs.core.missing_protocol.call(null, "AsBuffered.as-buffered", _);
        }
      }
    }().call(null, _)
  }
};
webgl.geometry.BufferedGeometry = function(source, vertices, indices, __meta, __extmap) {
  this.source = source;
  this.vertices = vertices;
  this.indices = indices;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__10539 = this;
  var h__2192__auto____10540 = this__10539.__hash;
  if(!(h__2192__auto____10540 == null)) {
    return h__2192__auto____10540
  }else {
    var h__2192__auto____10541 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__10539.__hash = h__2192__auto____10541;
    return h__2192__auto____10541
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__10542 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k10537, else__2326__auto__) {
  var this__10543 = this;
  if(k10537 === "\ufdd0'source") {
    return this__10543.source
  }else {
    if(k10537 === "\ufdd0'vertices") {
      return this__10543.vertices
    }else {
      if(k10537 === "\ufdd0'indices") {
        return this__10543.indices
      }else {
        if("\ufdd0'else") {
          return cljs.core._lookup.call(null, this__10543.__extmap, k10537, else__2326__auto__)
        }else {
          return null
        }
      }
    }
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__10536) {
  var this__10544 = this;
  var pred__10545__10548 = cljs.core.identical_QMARK_;
  var expr__10546__10549 = k__2331__auto__;
  if(pred__10545__10548.call(null, "\ufdd0'source", expr__10546__10549)) {
    return new webgl.geometry.BufferedGeometry(G__10536, this__10544.vertices, this__10544.indices, this__10544.__meta, this__10544.__extmap, null)
  }else {
    if(pred__10545__10548.call(null, "\ufdd0'vertices", expr__10546__10549)) {
      return new webgl.geometry.BufferedGeometry(this__10544.source, G__10536, this__10544.indices, this__10544.__meta, this__10544.__extmap, null)
    }else {
      if(pred__10545__10548.call(null, "\ufdd0'indices", expr__10546__10549)) {
        return new webgl.geometry.BufferedGeometry(this__10544.source, this__10544.vertices, G__10536, this__10544.__meta, this__10544.__extmap, null)
      }else {
        return new webgl.geometry.BufferedGeometry(this__10544.source, this__10544.vertices, this__10544.indices, this__10544.__meta, cljs.core.assoc.call(null, this__10544.__extmap, k__2331__auto__, G__10536), null)
      }
    }
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__10550 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__10551 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'source", this__10551.source), cljs.core.vector.call(null, "\ufdd0'vertices", this__10551.vertices), cljs.core.vector.call(null, "\ufdd0'indices", this__10551.indices)], true), this__10551.__extmap))
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__10552 = this;
  var pr_pair__2339__auto____10553 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____10553, [cljs.core.str("#"), cljs.core.str("BufferedGeometry"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'source", this__10552.source), cljs.core.vector.call(null, "\ufdd0'vertices", this__10552.vertices), cljs.core.vector.call(null, "\ufdd0'indices", this__10552.indices)], true), this__10552.__extmap))
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__10554 = this;
  return 3 + cljs.core.count.call(null, this__10554.__extmap)
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__10555 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____10556 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____10556)) {
      var and__3822__auto____10557 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____10557) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____10557
      }
    }else {
      return and__3822__auto____10556
    }
  }())) {
    return true
  }else {
    return false
  }
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__10536) {
  var this__10558 = this;
  return new webgl.geometry.BufferedGeometry(this__10558.source, this__10558.vertices, this__10558.indices, G__10536, this__10558.__extmap, this__10558.__hash)
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__10559 = this;
  return this__10559.__meta
};
webgl.geometry.BufferedGeometry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__10560 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'vertices", "\ufdd0'source", "\ufdd0'indices"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__10560.__meta), k__2333__auto__)
  }else {
    return new webgl.geometry.BufferedGeometry(this__10560.source, this__10560.vertices, this__10560.indices, this__10560.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__10560.__extmap, k__2333__auto__)), null)
  }
};
webgl.geometry.BufferedGeometry.cljs$lang$type = true;
webgl.geometry.BufferedGeometry.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "webgl.geometry/BufferedGeometry")
};
webgl.geometry.__GT_BufferedGeometry = function __GT_BufferedGeometry(source, vertices, indices) {
  return new webgl.geometry.BufferedGeometry(source, vertices, indices)
};
webgl.geometry.map__GT_BufferedGeometry = function map__GT_BufferedGeometry(G__10538) {
  return new webgl.geometry.BufferedGeometry((new cljs.core.Keyword("\ufdd0'source")).call(null, G__10538), (new cljs.core.Keyword("\ufdd0'vertices")).call(null, G__10538), (new cljs.core.Keyword("\ufdd0'indices")).call(null, G__10538), null, cljs.core.dissoc.call(null, G__10538, "\ufdd0'source", "\ufdd0'vertices", "\ufdd0'indices"))
};
webgl.geometry.BufferedGeometry;
webgl.geometry.Geometry = function(vertices, indices, __meta, __extmap) {
  this.vertices = vertices;
  this.indices = indices;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
webgl.geometry.Geometry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__10564 = this;
  var h__2192__auto____10565 = this__10564.__hash;
  if(!(h__2192__auto____10565 == null)) {
    return h__2192__auto____10565
  }else {
    var h__2192__auto____10566 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__10564.__hash = h__2192__auto____10566;
    return h__2192__auto____10566
  }
};
webgl.geometry.Geometry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__10567 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
webgl.geometry.Geometry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k10562, else__2326__auto__) {
  var this__10568 = this;
  if(k10562 === "\ufdd0'vertices") {
    return this__10568.vertices
  }else {
    if(k10562 === "\ufdd0'indices") {
      return this__10568.indices
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__10568.__extmap, k10562, else__2326__auto__)
      }else {
        return null
      }
    }
  }
};
webgl.geometry.Geometry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__10561) {
  var this__10569 = this;
  var pred__10570__10573 = cljs.core.identical_QMARK_;
  var expr__10571__10574 = k__2331__auto__;
  if(pred__10570__10573.call(null, "\ufdd0'vertices", expr__10571__10574)) {
    return new webgl.geometry.Geometry(G__10561, this__10569.indices, this__10569.__meta, this__10569.__extmap, null)
  }else {
    if(pred__10570__10573.call(null, "\ufdd0'indices", expr__10571__10574)) {
      return new webgl.geometry.Geometry(this__10569.vertices, G__10561, this__10569.__meta, this__10569.__extmap, null)
    }else {
      return new webgl.geometry.Geometry(this__10569.vertices, this__10569.indices, this__10569.__meta, cljs.core.assoc.call(null, this__10569.__extmap, k__2331__auto__, G__10561), null)
    }
  }
};
webgl.geometry.Geometry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__10575 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
webgl.geometry.Geometry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__10576 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'vertices", this__10576.vertices), cljs.core.vector.call(null, "\ufdd0'indices", this__10576.indices)], true), this__10576.__extmap))
};
webgl.geometry.Geometry.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__10577 = this;
  var pr_pair__2339__auto____10578 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____10578, [cljs.core.str("#"), cljs.core.str("Geometry"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'vertices", this__10577.vertices), cljs.core.vector.call(null, "\ufdd0'indices", this__10577.indices)], true), this__10577.__extmap))
};
webgl.geometry.Geometry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__10579 = this;
  return 2 + cljs.core.count.call(null, this__10579.__extmap)
};
webgl.geometry.Geometry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__10580 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____10581 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____10581)) {
      var and__3822__auto____10582 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____10582) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____10582
      }
    }else {
      return and__3822__auto____10581
    }
  }())) {
    return true
  }else {
    return false
  }
};
webgl.geometry.Geometry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__10561) {
  var this__10583 = this;
  return new webgl.geometry.Geometry(this__10583.vertices, this__10583.indices, G__10561, this__10583.__extmap, this__10583.__hash)
};
webgl.geometry.Geometry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__10584 = this;
  return this__10584.__meta
};
webgl.geometry.Geometry.prototype.webgl$geometry$AsBuffered$ = true;
webgl.geometry.Geometry.prototype.webgl$geometry$AsBuffered$as_buffered$arity$1 = function(this$) {
  var this__10585 = this;
  return new webgl.geometry.BufferedGeometry(this$, webgl.buffer.make.call(null, "\ufdd0'array", this__10585.vertices), webgl.buffer.make.call(null, "\ufdd0'index", this__10585.indices))
};
webgl.geometry.Geometry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__10586 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'vertices", "\ufdd0'indices"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__10586.__meta), k__2333__auto__)
  }else {
    return new webgl.geometry.Geometry(this__10586.vertices, this__10586.indices, this__10586.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__10586.__extmap, k__2333__auto__)), null)
  }
};
webgl.geometry.Geometry.cljs$lang$type = true;
webgl.geometry.Geometry.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "webgl.geometry/Geometry")
};
webgl.geometry.__GT_Geometry = function __GT_Geometry(vertices, indices) {
  return new webgl.geometry.Geometry(vertices, indices)
};
webgl.geometry.map__GT_Geometry = function map__GT_Geometry(G__10563) {
  return new webgl.geometry.Geometry((new cljs.core.Keyword("\ufdd0'vertices")).call(null, G__10563), (new cljs.core.Keyword("\ufdd0'indices")).call(null, G__10563), null, cljs.core.dissoc.call(null, G__10563, "\ufdd0'vertices", "\ufdd0'indices"))
};
webgl.geometry.Geometry;
webgl.geometry.triangle = new webgl.geometry.Geometry(webgl.geometry.as_float32.call(null, [0, 0.1, 0, 1, -0.1, -0.1, 0, 1, 0.1, -0.1, 0, 1]), webgl.geometry.as_uint16.call(null, [0, 1, 2]));
webgl.geometry.aiterate = function aiterate(acoll, n, trans) {
  var length__10596 = acoll.length;
  var n__10597 = n + 1;
  var ctor__10598 = cljs.core.type.call(null, acoll);
  var out__10599 = new ctor__10598(n__10597 * length__10596);
  out__10599.set(acoll);
  var i__10600 = 1;
  var original__10601 = acoll;
  while(true) {
    if(i__10600 < n__10597) {
      var offset__10602 = i__10600 * length__10596;
      var end__10603 = offset__10602 + length__10596;
      var destination__10604 = out__10599.subarray(offset__10602, end__10603);
      destination__10604.set(trans.call(null, original__10601));
      var G__10605 = i__10600 + 1;
      var G__10606 = destination__10604;
      i__10600 = G__10605;
      original__10601 = G__10606;
      continue
    }else {
    }
    break
  }
  return out__10599
};
webgl.geometry.cloned_indices = function cloned_indices(indices) {
  var c__10611 = indices.length;
  var out__10612 = new Uint16Array(c__10611);
  var n__2527__auto____10613 = c__10611;
  var x__10614 = 0;
  while(true) {
    if(x__10614 < n__2527__auto____10613) {
      out__10612[x__10614] = indices[x__10614] + c__10611;
      var G__10615 = x__10614 + 1;
      x__10614 = G__10615;
      continue
    }else {
    }
    break
  }
  return out__10612
};
webgl.geometry.clone = function clone(n, trans, in$) {
  return new webgl.geometry.Geometry(webgl.geometry.aiterate.call(null, (new cljs.core.Keyword("\ufdd0'vertices")).call(null, in$), n, trans), webgl.geometry.aiterate.call(null, (new cljs.core.Keyword("\ufdd0'indices")).call(null, in$), n, webgl.geometry.cloned_indices))
};
webgl.geometry.transform = function transform(trans, in$) {
  return new webgl.geometry.Geometry(trans.call(null, (new cljs.core.Keyword("\ufdd0'vertices")).call(null, in$)), (new cljs.core.Keyword("\ufdd0'indices")).call(null, in$))
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____15431 = this$;
    if(and__3822__auto____15431) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____15431
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____15432 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____15433 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____15432)];
      if(or__3824__auto____15433) {
        return or__3824__auto____15433
      }else {
        var or__3824__auto____15434 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____15434) {
          return or__3824__auto____15434
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__15435) {
    var vec__15436__15437 = p__15435;
    var k__15438 = cljs.core.nth.call(null, vec__15436__15437, 0, null);
    var v__15439 = cljs.core.nth.call(null, vec__15436__15437, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__15438.toLowerCase()), v__15439], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__15440) {
    var vec__15441__15442 = p__15440;
    var k__15443 = cljs.core.nth.call(null, vec__15441__15442, 0, null);
    var v__15444 = cljs.core.nth.call(null, vec__15441__15442, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__15443.toLowerCase()), v__15444], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__15294) {
  var vec__15295__15296 = p__15294;
  var k__15297 = cljs.core.nth.call(null, vec__15295__15296, 0, null);
  var v__15298 = cljs.core.nth.call(null, vec__15295__15296, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__15297.toLowerCase()), v__15298], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____15315 = this$;
      if(and__3822__auto____15315) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____15315
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____15316 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15317 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____15316)];
        if(or__3824__auto____15317) {
          return or__3824__auto____15317
        }else {
          var or__3824__auto____15318 = clojure.browser.net.connect["_"];
          if(or__3824__auto____15318) {
            return or__3824__auto____15318
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____15319 = this$;
      if(and__3822__auto____15319) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____15319
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____15320 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15321 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____15320)];
        if(or__3824__auto____15321) {
          return or__3824__auto____15321
        }else {
          var or__3824__auto____15322 = clojure.browser.net.connect["_"];
          if(or__3824__auto____15322) {
            return or__3824__auto____15322
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____15323 = this$;
      if(and__3822__auto____15323) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____15323
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____15324 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15325 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____15324)];
        if(or__3824__auto____15325) {
          return or__3824__auto____15325
        }else {
          var or__3824__auto____15326 = clojure.browser.net.connect["_"];
          if(or__3824__auto____15326) {
            return or__3824__auto____15326
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____15327 = this$;
      if(and__3822__auto____15327) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____15327
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____15328 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15329 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____15328)];
        if(or__3824__auto____15329) {
          return or__3824__auto____15329
        }else {
          var or__3824__auto____15330 = clojure.browser.net.connect["_"];
          if(or__3824__auto____15330) {
            return or__3824__auto____15330
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____15351 = this$;
      if(and__3822__auto____15351) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____15351
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____15352 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15353 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____15352)];
        if(or__3824__auto____15353) {
          return or__3824__auto____15353
        }else {
          var or__3824__auto____15354 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____15354) {
            return or__3824__auto____15354
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____15355 = this$;
      if(and__3822__auto____15355) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____15355
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____15356 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15357 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____15356)];
        if(or__3824__auto____15357) {
          return or__3824__auto____15357
        }else {
          var or__3824__auto____15358 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____15358) {
            return or__3824__auto____15358
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____15359 = this$;
      if(and__3822__auto____15359) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____15359
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____15360 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15361 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____15360)];
        if(or__3824__auto____15361) {
          return or__3824__auto____15361
        }else {
          var or__3824__auto____15362 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____15362) {
            return or__3824__auto____15362
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____15363 = this$;
      if(and__3822__auto____15363) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____15363
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____15364 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15365 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____15364)];
        if(or__3824__auto____15365) {
          return or__3824__auto____15365
        }else {
          var or__3824__auto____15366 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____15366) {
            return or__3824__auto____15366
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____15367 = this$;
      if(and__3822__auto____15367) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____15367
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____15368 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15369 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____15368)];
        if(or__3824__auto____15369) {
          return or__3824__auto____15369
        }else {
          var or__3824__auto____15370 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____15370) {
            return or__3824__auto____15370
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____15375 = this$;
    if(and__3822__auto____15375) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____15375
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____15376 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____15377 = clojure.browser.net.close[goog.typeOf(x__2363__auto____15376)];
      if(or__3824__auto____15377) {
        return or__3824__auto____15377
      }else {
        var or__3824__auto____15378 = clojure.browser.net.close["_"];
        if(or__3824__auto____15378) {
          return or__3824__auto____15378
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__15379) {
    var vec__15380__15381 = p__15379;
    var k__15382 = cljs.core.nth.call(null, vec__15380__15381, 0, null);
    var v__15383 = cljs.core.nth.call(null, vec__15380__15381, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__15382.toLowerCase()), v__15383], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__15384) {
  var vec__15385__15386 = p__15384;
  var k__15387 = cljs.core.nth.call(null, vec__15385__15386, 0, null);
  var v__15388 = cljs.core.nth.call(null, vec__15385__15386, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__15387.toLowerCase()), v__15388], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____15397 = this$;
      if(and__3822__auto____15397) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____15397
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____15398 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15399 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____15398)];
        if(or__3824__auto____15399) {
          return or__3824__auto____15399
        }else {
          var or__3824__auto____15400 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____15400) {
            return or__3824__auto____15400
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____15401 = this$;
      if(and__3822__auto____15401) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____15401
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____15402 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____15403 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____15402)];
        if(or__3824__auto____15403) {
          return or__3824__auto____15403
        }else {
          var or__3824__auto____15404 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____15404) {
            return or__3824__auto____15404
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____15416 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____15416)) {
      var config__15417 = temp__3974__auto____15416;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__15417))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__15418) {
      var vec__15419__15420 = p__15418;
      var k__15421 = cljs.core.nth.call(null, vec__15419__15420, 0, null);
      var v__15422 = cljs.core.nth.call(null, vec__15419__15420, 1, null);
      var temp__3971__auto____15423 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__15421, null);
      if(cljs.core.truth_(temp__3971__auto____15423)) {
        var field__15424 = temp__3971__auto____15423;
        var G__15425__15426 = sum;
        G__15425__15426[field__15424] = v__15422;
        return G__15425__15426
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("webgl.program");
goog.require("cljs.core");
goog.require("webgl.constants");
goog.require("webgl.api");
webgl.program.make = webgl.api.make_program;
webgl.program.attach_BANG_ = function attach_BANG_(program, shader_type, code) {
  var shader__11083 = webgl.api.make_shader.call(null, shader_type);
  webgl.api.set_source.call(null, shader__11083, code);
  webgl.api.compile_shader.call(null, shader__11083);
  return webgl.api.attach_shader.call(null, program, shader__11083)
};
webgl.program.link_BANG_ = webgl.api.link_program;
webgl.program.use_BANG_ = webgl.api.use_program;
goog.provide("webgl.operators");
goog.require("cljs.core");
goog.require("webgl.matrix");
goog.require("webgl.geometry");
webgl.operators.constant = cljs.core.constantly;
webgl.operators.time = function time(fps) {
  return function(frame) {
    return frame / fps
  }
};
webgl.operators.scale = function scale(in$, s) {
  return function(frame) {
    return s * in$.call(null, frame)
  }
};
webgl.operators.offset = function offset(in$, offset) {
  return function(frame) {
    return offset + in$.call(null, frame)
  }
};
webgl.operators.modulate = function modulate(lhs, rhs) {
  return function(frame) {
    return lhs.call(null, frame) * rhs.call(null, frame)
  }
};
webgl.operators.sin = function sin(in$) {
  return function(frame) {
    return Math.sin(in$.call(null, frame))
  }
};
webgl.operators.cos = function cos(in$) {
  return function(frame) {
    return Math.cos(in$.call(null, frame))
  }
};
webgl.operators.quadratic = function quadratic(p1__11084_SHARP_) {
  return p1__11084_SHARP_ * p1__11084_SHARP_
};
webgl.operators.cubic = function cubic(p1__11085_SHARP_) {
  return p1__11085_SHARP_ * p1__11085_SHARP_ * p1__11085_SHARP_
};
webgl.operators.quartic = function quartic(p1__11086_SHARP_) {
  return p1__11086_SHARP_ * p1__11086_SHARP_ * p1__11086_SHARP_ * p1__11086_SHARP_
};
webgl.operators.quintic = function quintic(p1__11087_SHARP_) {
  return p1__11087_SHARP_ * p1__11087_SHARP_ * p1__11087_SHARP_ * p1__11087_SHARP_ * p1__11087_SHARP_
};
webgl.operators.easing = function easing(in$, f) {
  return function(frame) {
    var t__11092 = in$.call(null, frame);
    var s__11093 = -1;
    var c__11094 = t__11092 + 1;
    return s__11093 + (c__11094 < 1 ? f.call(null, c__11094) : 2 - f.call(null, 2 - c__11094))
  }
};
webgl.operators.matrix_transform = function matrix_transform(m) {
  var transposed__11096 = webgl.matrix.transpose.call(null, m);
  return function(p1__11088_SHARP_) {
    return webgl.matrix._STAR_.call(null, p1__11088_SHARP_, transposed__11096)
  }
};
webgl.operators.transformer = function transformer(geometry, tx, ty, tz, x, y, z, s) {
  return function(frame) {
    var g__11105 = geometry.call(null, frame);
    var tx__11106 = tx.call(null, frame);
    var ty__11107 = ty.call(null, frame);
    var tz__11108 = tz.call(null, frame);
    var x__11109 = x.call(null, frame);
    var y__11110 = y.call(null, frame);
    var z__11111 = z.call(null, frame);
    var s__11112 = s.call(null, frame);
    return webgl.geometry.transform.call(null, webgl.operators.matrix_transform.call(null, webgl.matrix._STAR_.call(null, webgl.matrix.z_rotation.call(null, z__11111), webgl.matrix._STAR_.call(null, webgl.matrix.y_rotation.call(null, y__11110), webgl.matrix._STAR_.call(null, webgl.matrix.x_rotation.call(null, x__11109), webgl.matrix._STAR_.call(null, webgl.matrix.translation.call(null, webgl.matrix.make.call(null, tx__11106, ty__11107, tz__11108)), webgl.matrix._STAR_.call(null, webgl.matrix.scaling.call(null, 
    s__11112), webgl.matrix.identity)))))), g__11105)
  }
};
webgl.operators.cloner = function cloner(geometry, n, t) {
  return function(frame) {
    return webgl.geometry.clone.call(null, n, webgl.operators.matrix_transform.call(null, t), geometry)
  }
};
webgl.operators.bufferer = function bufferer(geometry) {
  return function(frame) {
    return webgl.geometry.as_buffered.call(null, geometry.call(null, frame))
  }
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____15276 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____15276)) {
    var conn__15277 = temp__3971__auto____15276;
    return clojure.browser.net.transmit.call(null, conn__15277, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__15283 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e15281) {
      if(cljs.core.instance_QMARK_.call(null, Error, e15281)) {
        var e__15282 = e15281;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__15282), "\ufdd0'stacktrace":cljs.core.truth_(e__15282.hasOwnProperty("stack")) ? e__15282.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e15281;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__15283)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__15285 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__15285, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__15285, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____15289 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____15289)) {
    var repl_connection__15290 = temp__3971__auto____15289;
    var connection__15291 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__15291, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__15290, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__15290, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__15291, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__15290, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__15290, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__15291, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__15293 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__15293));
  clojure.browser.net.register_service.call(null, repl_connection__15293, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__15293, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__15293, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__15293, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("webgl.shader");
goog.require("cljs.core");
goog.require("webgl.geometry");
goog.require("webgl.shader.code");
goog.require("webgl.buffer");
goog.require("webgl.api");
webgl.shader.GLSLType = {};
webgl.shader.type_name = function type_name(_) {
  if(function() {
    var and__3822__auto____11117 = _;
    if(and__3822__auto____11117) {
      return _.webgl$shader$GLSLType$type_name$arity$1
    }else {
      return and__3822__auto____11117
    }
  }()) {
    return _.webgl$shader$GLSLType$type_name$arity$1(_)
  }else {
    var x__2363__auto____11118 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11119 = webgl.shader.type_name[goog.typeOf(x__2363__auto____11118)];
      if(or__3824__auto____11119) {
        return or__3824__auto____11119
      }else {
        var or__3824__auto____11120 = webgl.shader.type_name["_"];
        if(or__3824__auto____11120) {
          return or__3824__auto____11120
        }else {
          throw cljs.core.missing_protocol.call(null, "GLSLType.type-name", _);
        }
      }
    }().call(null, _)
  }
};
webgl.shader.Declare = {};
webgl.shader.declare = function declare(_) {
  if(function() {
    var and__3822__auto____11125 = _;
    if(and__3822__auto____11125) {
      return _.webgl$shader$Declare$declare$arity$1
    }else {
      return and__3822__auto____11125
    }
  }()) {
    return _.webgl$shader$Declare$declare$arity$1(_)
  }else {
    var x__2363__auto____11126 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11127 = webgl.shader.declare[goog.typeOf(x__2363__auto____11126)];
      if(or__3824__auto____11127) {
        return or__3824__auto____11127
      }else {
        var or__3824__auto____11128 = webgl.shader.declare["_"];
        if(or__3824__auto____11128) {
          return or__3824__auto____11128
        }else {
          throw cljs.core.missing_protocol.call(null, "Declare.declare", _);
        }
      }
    }().call(null, _)
  }
};
webgl.shader.Compile = {};
webgl.shader.compile = function compile(_) {
  if(function() {
    var and__3822__auto____11133 = _;
    if(and__3822__auto____11133) {
      return _.webgl$shader$Compile$compile$arity$1
    }else {
      return and__3822__auto____11133
    }
  }()) {
    return _.webgl$shader$Compile$compile$arity$1(_)
  }else {
    var x__2363__auto____11134 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11135 = webgl.shader.compile[goog.typeOf(x__2363__auto____11134)];
      if(or__3824__auto____11135) {
        return or__3824__auto____11135
      }else {
        var or__3824__auto____11136 = webgl.shader.compile["_"];
        if(or__3824__auto____11136) {
          return or__3824__auto____11136
        }else {
          throw cljs.core.missing_protocol.call(null, "Compile.compile", _);
        }
      }
    }().call(null, _)
  }
};
webgl.shader.Bind = {};
webgl.shader.bind = function bind(_, program, frame) {
  if(function() {
    var and__3822__auto____11141 = _;
    if(and__3822__auto____11141) {
      return _.webgl$shader$Bind$bind$arity$3
    }else {
      return and__3822__auto____11141
    }
  }()) {
    return _.webgl$shader$Bind$bind$arity$3(_, program, frame)
  }else {
    var x__2363__auto____11142 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11143 = webgl.shader.bind[goog.typeOf(x__2363__auto____11142)];
      if(or__3824__auto____11143) {
        return or__3824__auto____11143
      }else {
        var or__3824__auto____11144 = webgl.shader.bind["_"];
        if(or__3824__auto____11144) {
          return or__3824__auto____11144
        }else {
          throw cljs.core.missing_protocol.call(null, "Bind.bind", _);
        }
      }
    }().call(null, _, program, frame)
  }
};
webgl.shader.ToAttribute = {};
webgl.shader.to_attribute = function to_attribute(_, location, val) {
  if(function() {
    var and__3822__auto____11149 = _;
    if(and__3822__auto____11149) {
      return _.webgl$shader$ToAttribute$to_attribute$arity$3
    }else {
      return and__3822__auto____11149
    }
  }()) {
    return _.webgl$shader$ToAttribute$to_attribute$arity$3(_, location, val)
  }else {
    var x__2363__auto____11150 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11151 = webgl.shader.to_attribute[goog.typeOf(x__2363__auto____11150)];
      if(or__3824__auto____11151) {
        return or__3824__auto____11151
      }else {
        var or__3824__auto____11152 = webgl.shader.to_attribute["_"];
        if(or__3824__auto____11152) {
          return or__3824__auto____11152
        }else {
          throw cljs.core.missing_protocol.call(null, "ToAttribute.to-attribute", _);
        }
      }
    }().call(null, _, location, val)
  }
};
webgl.shader.ToUniform = {};
webgl.shader.to_uniform = function to_uniform(_, location, val) {
  if(function() {
    var and__3822__auto____11157 = _;
    if(and__3822__auto____11157) {
      return _.webgl$shader$ToUniform$to_uniform$arity$3
    }else {
      return and__3822__auto____11157
    }
  }()) {
    return _.webgl$shader$ToUniform$to_uniform$arity$3(_, location, val)
  }else {
    var x__2363__auto____11158 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11159 = webgl.shader.to_uniform[goog.typeOf(x__2363__auto____11158)];
      if(or__3824__auto____11159) {
        return or__3824__auto____11159
      }else {
        var or__3824__auto____11160 = webgl.shader.to_uniform["_"];
        if(or__3824__auto____11160) {
          return or__3824__auto____11160
        }else {
          throw cljs.core.missing_protocol.call(null, "ToUniform.to-uniform", _);
        }
      }
    }().call(null, _, location, val)
  }
};
webgl.shader.AttributeBinder = {};
webgl.shader.attribute_binder = function attribute_binder(_) {
  if(function() {
    var and__3822__auto____11165 = _;
    if(and__3822__auto____11165) {
      return _.webgl$shader$AttributeBinder$attribute_binder$arity$1
    }else {
      return and__3822__auto____11165
    }
  }()) {
    return _.webgl$shader$AttributeBinder$attribute_binder$arity$1(_)
  }else {
    var x__2363__auto____11166 = _ == null ? null : _;
    return function() {
      var or__3824__auto____11167 = webgl.shader.attribute_binder[goog.typeOf(x__2363__auto____11166)];
      if(or__3824__auto____11167) {
        return or__3824__auto____11167
      }else {
        var or__3824__auto____11168 = webgl.shader.attribute_binder["_"];
        if(or__3824__auto____11168) {
          return or__3824__auto____11168
        }else {
          throw cljs.core.missing_protocol.call(null, "AttributeBinder.attribute-binder", _);
        }
      }
    }().call(null, _)
  }
};
webgl.geometry.BufferedGeometry.prototype.webgl$shader$AttributeBinder$ = true;
webgl.geometry.BufferedGeometry.prototype.webgl$shader$AttributeBinder$attribute_binder$arity$1 = function(this$) {
  return function(location, size, val) {
    webgl.buffer.bind.call(null, (new cljs.core.Keyword("\ufdd0'vertices")).call(null, this$));
    webgl.api.vertex_attribute_pointer.call(null, location, size, "\ufdd0'float", false, 0, 0);
    webgl.api.enable_vertex_attribute_array.call(null, location);
    return webgl.buffer.bind.call(null, (new cljs.core.Keyword("\ufdd0'indices")).call(null, this$))
  }
};
webgl.buffer.Buffer.prototype.webgl$shader$AttributeBinder$ = true;
webgl.buffer.Buffer.prototype.webgl$shader$AttributeBinder$attribute_binder$arity$1 = function(this$) {
  return function(location, size, val) {
    webgl.buffer.bind.call(null, this$);
    webgl.api.vertex_attribute_pointer.call(null, location, size, "\ufdd0'float", false, 0, 0);
    return webgl.api.enable_vertex_attribute_array.call(null, location)
  }
};
webgl.shader.Vec4 = function() {
};
webgl.shader.Vec4.cljs$lang$type = true;
webgl.shader.Vec4.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Vec4")
};
webgl.shader.Vec4.prototype.webgl$shader$ToAttribute$ = true;
webgl.shader.Vec4.prototype.webgl$shader$ToAttribute$to_attribute$arity$3 = function(_, location, val) {
  var this__11169 = this;
  var binder__11170 = webgl.shader.attribute_binder.call(null, val);
  return binder__11170.call(null, location, 4, val)
};
webgl.shader.Vec4.prototype.webgl$shader$GLSLType$ = true;
webgl.shader.Vec4.prototype.webgl$shader$GLSLType$type_name$arity$1 = function(_) {
  var this__11171 = this;
  return"vec4"
};
webgl.shader.Vec4;
webgl.shader.Mat4 = function() {
};
webgl.shader.Mat4.cljs$lang$type = true;
webgl.shader.Mat4.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Mat4")
};
webgl.shader.Mat4.prototype.webgl$shader$ToUniform$ = true;
webgl.shader.Mat4.prototype.webgl$shader$ToUniform$to_uniform$arity$3 = function(_, location, value) {
  var this__11172 = this;
  return webgl.api.uniform_matrix.call(null, location, value)
};
webgl.shader.Mat4.prototype.webgl$shader$GLSLType$ = true;
webgl.shader.Mat4.prototype.webgl$shader$GLSLType$type_name$arity$1 = function(_) {
  var this__11173 = this;
  return"mat4"
};
webgl.shader.Mat4;
webgl.shader.vec4 = new webgl.shader.Vec4;
webgl.shader.mat4 = new webgl.shader.Mat4;
webgl.shader.Attribute = function(type, name, printer, value_fn) {
  this.type = type;
  this.name = name;
  this.printer = printer;
  this.value_fn = value_fn
};
webgl.shader.Attribute.cljs$lang$type = true;
webgl.shader.Attribute.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Attribute")
};
webgl.shader.Attribute.prototype.webgl$shader$Bind$ = true;
webgl.shader.Attribute.prototype.webgl$shader$Bind$bind$arity$3 = function(_, prog, frame) {
  var this__11174 = this;
  var location__11175 = webgl.api.attribute_location.call(null, prog, this__11174.name);
  var value__11176 = this__11174.value_fn.call(null, frame);
  return webgl.shader.to_attribute.call(null, this__11174.type, location__11175, value__11176)
};
webgl.shader.Attribute.prototype.webgl$shader$Compile$ = true;
webgl.shader.Attribute.prototype.webgl$shader$Compile$compile$arity$1 = function(_) {
  var this__11177 = this;
  return this__11177.name
};
webgl.shader.Attribute.prototype.webgl$shader$Declare$ = true;
webgl.shader.Attribute.prototype.webgl$shader$Declare$declare$arity$1 = function(_) {
  var this__11178 = this;
  return this__11178.printer.call(null, "attribute", webgl.shader.type_name.call(null, this__11178.type), this__11178.name)
};
webgl.shader.Attribute;
webgl.shader.Uniform = function(type, name, printer, value_fn) {
  this.type = type;
  this.name = name;
  this.printer = printer;
  this.value_fn = value_fn
};
webgl.shader.Uniform.cljs$lang$type = true;
webgl.shader.Uniform.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Uniform")
};
webgl.shader.Uniform.prototype.webgl$shader$Bind$ = true;
webgl.shader.Uniform.prototype.webgl$shader$Bind$bind$arity$3 = function(_, prog, frame) {
  var this__11179 = this;
  var location__11180 = webgl.api.uniform_location.call(null, prog, this__11179.name);
  var value__11181 = this__11179.value_fn.call(null, frame);
  return webgl.shader.to_uniform.call(null, this__11179.type, location__11180, value__11181)
};
webgl.shader.Uniform.prototype.webgl$shader$Compile$ = true;
webgl.shader.Uniform.prototype.webgl$shader$Compile$compile$arity$1 = function(_) {
  var this__11182 = this;
  return this__11182.name
};
webgl.shader.Uniform.prototype.webgl$shader$Declare$ = true;
webgl.shader.Uniform.prototype.webgl$shader$Declare$declare$arity$1 = function(_) {
  var this__11183 = this;
  return this__11183.printer.call(null, "uniform", webgl.shader.type_name.call(null, this__11183.type), this__11183.name)
};
webgl.shader.Uniform;
webgl.shader.attribute = function attribute(type, value_fn) {
  return new webgl.shader.Attribute(type, webgl.shader.code.identifier.call(null, "\ufdd0'attribute"), webgl.shader.code.attribute_printer, value_fn)
};
webgl.shader.uniform = function uniform(type, value_fn) {
  return new webgl.shader.Uniform(type, webgl.shader.code.identifier.call(null, "\ufdd0'uniform"), webgl.shader.code.attribute_printer, value_fn)
};
webgl.shader.Multiply = function(args) {
  this.args = args
};
webgl.shader.Multiply.cljs$lang$type = true;
webgl.shader.Multiply.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Multiply")
};
webgl.shader.Multiply.prototype.webgl$shader$Compile$ = true;
webgl.shader.Multiply.prototype.webgl$shader$Compile$compile$arity$1 = function(_) {
  var this__11184 = this;
  return webgl.shader.code.stars.call(null, cljs.core.map.call(null, webgl.shader.compile, this__11184.args))
};
webgl.shader.Multiply;
webgl.shader._STAR_ = function() {
  var _STAR___delegate = function(args) {
    return new webgl.shader.Multiply(args)
  };
  var _STAR_ = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return _STAR___delegate.call(this, args)
  };
  _STAR_.cljs$lang$maxFixedArity = 0;
  _STAR_.cljs$lang$applyTo = function(arglist__11185) {
    var args = cljs.core.seq(arglist__11185);
    return _STAR___delegate(args)
  };
  _STAR_.cljs$lang$arity$variadic = _STAR___delegate;
  return _STAR_
}();
webgl.shader.Shader = function(attributes, out) {
  this.attributes = attributes;
  this.out = out
};
webgl.shader.Shader.cljs$lang$type = true;
webgl.shader.Shader.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "webgl.shader/Shader")
};
webgl.shader.Shader.prototype.webgl$shader$Bind$ = true;
webgl.shader.Shader.prototype.webgl$shader$Bind$bind$arity$3 = function(_, prog, frame) {
  var this__11186 = this;
  var G__11187__11188 = cljs.core.seq.call(null, this__11186.attributes);
  if(G__11187__11188) {
    var attribute__11189 = cljs.core.first.call(null, G__11187__11188);
    var G__11187__11190 = G__11187__11188;
    while(true) {
      webgl.shader.bind.call(null, attribute__11189, prog, frame);
      var temp__3974__auto____11191 = cljs.core.next.call(null, G__11187__11190);
      if(temp__3974__auto____11191) {
        var G__11187__11192 = temp__3974__auto____11191;
        var G__11194 = cljs.core.first.call(null, G__11187__11192);
        var G__11195 = G__11187__11192;
        attribute__11189 = G__11194;
        G__11187__11190 = G__11195;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
webgl.shader.Shader.prototype.webgl$shader$Compile$ = true;
webgl.shader.Shader.prototype.webgl$shader$Compile$compile$arity$1 = function(_) {
  var this__11193 = this;
  return webgl.shader.code.shader.call(null, cljs.core.map.call(null, webgl.shader.declare, this__11193.attributes), webgl.shader.compile.call(null, this__11193.out))
};
webgl.shader.Shader;
webgl.shader.shader = function shader(attributes, out) {
  return new webgl.shader.Shader(attributes, out)
};
goog.provide("webgl.core");
goog.require("cljs.core");
goog.require("webgl.api");
goog.require("goog.events");
goog.require("webgl.matrix");
goog.require("goog.dom");
goog.require("webgl.operators");
goog.require("webgl.constants");
goog.require("webgl.geometry");
goog.require("webgl.program");
goog.require("webgl.editor");
goog.require("webgl.shader");
goog.require("clojure.browser.repl");
webgl.core.fps = 30;
webgl.core.time = webgl.operators.time.call(null, webgl.core.fps);
webgl.core.zero = webgl.operators.constant.call(null, 0);
webgl.core.one = webgl.operators.constant.call(null, 1);
webgl.core.up = webgl.operators.constant.call(null, 0.5);
webgl.core.fragment_code = "precision mediump float;\n   void main()\n   {\n     gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n   }";
webgl.core.frame = cljs.core.atom.call(null, 0);
webgl.core.redraw = cljs.core.atom.call(null, true);
webgl.core.next_frame = function next_frame() {
  if(cljs.core.truth_(cljs.core.deref.call(null, webgl.core.redraw))) {
    return cljs.core.swap_BANG_.call(null, webgl.core.frame, cljs.core.inc)
  }else {
    return null
  }
};
webgl.core.triangles = 10;
webgl.core.render_frame = function render_frame(program, vertex_shader, frame) {
  webgl.shader.bind.call(null, vertex_shader, program, frame);
  webgl.api.clear.call(null, "\ufdd0'color-buffer");
  return webgl.api.draw_elements.call(null, "\ufdd0'triangles", webgl.core.triangles * 3, "\ufdd0'unsigned-short", 0)
};
webgl.core.render = function render(gl, f) {
  if(cljs.core.truth_(cljs.core.deref.call(null, webgl.core.redraw))) {
    window.requestAnimFrame(cljs.core.partial.call(null, render, gl, f), gl.canvas);
    return webgl.api.with_context.call(null, gl, f, cljs.core.deref.call(null, webgl.core.frame))
  }else {
    return null
  }
};
webgl.core.prepare_program = function prepare_program(program, vertex_shader) {
  webgl.program.attach_BANG_.call(null, program, "\ufdd0'vertex", webgl.shader.compile.call(null, vertex_shader));
  webgl.program.attach_BANG_.call(null, program, "\ufdd0'fragment", webgl.core.fragment_code);
  webgl.program.link_BANG_.call(null, program);
  return webgl.program.use_BANG_.call(null, program)
};
webgl.core.model_view_shader = function model_view_shader(vertices, view) {
  return webgl.shader.shader.call(null, cljs.core.PersistentVector.fromArray([vertices, view], true), webgl.shader._STAR_.call(null, vertices, view))
};
webgl.core.make_trans = function make_trans(m) {
  var transposed__24912 = webgl.matrix.transpose.call(null, m);
  return function(p1__24910_SHARP_) {
    return webgl.matrix._STAR_.call(null, p1__24910_SHARP_, transposed__24912)
  }
};
webgl.core.init_scene = function init_scene(canvas) {
  var program__24920 = webgl.program.make.call(null);
  webgl.api.clear_color.call(null, 0, 0, 0, 1);
  var gl__24921 = webgl.api.context.call(null);
  var copy_trans__24922 = webgl.matrix._STAR_.call(null, webgl.matrix.translation.call(null, webgl.matrix.make.call(null, 0.3, -0.1, 0, 0)), webgl.matrix.z_rotation.call(null, -(Math.PI / 5)));
  var vertices__24923 = webgl.shader.attribute.call(null, webgl.shader.vec4, webgl.operators.bufferer.call(null, webgl.operators.transformer.call(null, webgl.operators.cloner.call(null, webgl.geometry.triangle, webgl.core.triangles - 1, copy_trans__24922), webgl.core.zero, webgl.operators.offset.call(null, webgl.operators.easing.call(null, webgl.operators.sin.call(null, webgl.core.time), webgl.operators.cubic), 0.5), webgl.core.zero, webgl.core.zero, webgl.core.zero, webgl.operators.offset.call(null, 
  webgl.operators.sin.call(null, webgl.core.time), 1), webgl.operators.constant.call(null, 2))));
  var view__24924 = webgl.shader.uniform.call(null, webgl.shader.mat4, cljs.core.constantly.call(null, webgl.matrix.identity));
  var vertex_shader__24925 = webgl.core.model_view_shader.call(null, vertices__24923, view__24924);
  var renderer__24926 = cljs.core.partial.call(null, webgl.core.render_frame, program__24920, vertex_shader__24925);
  webgl.core.prepare_program.call(null, program__24920, vertex_shader__24925);
  setInterval(webgl.core.next_frame, 1E3 / webgl.core.fps);
  webgl.core.render.call(null, gl__24921, renderer__24926);
  return goog.events.listen(canvas, "click", function(evt) {
    cljs.core.swap_BANG_.call(null, webgl.core.redraw, cljs.core.not);
    if(cljs.core.truth_(cljs.core.deref.call(null, webgl.core.redraw))) {
      return webgl.core.render.call(null, gl__24921, renderer__24926)
    }else {
      return null
    }
  })
};
webgl.core.load = function load() {
  var canvas__24928 = goog.dom.$("gl");
  webgl.editor.load_config.call(null, "configs/editor.xml");
  return webgl.api.with_context.call(null, WebGLDebugUtils.makeDebugContext(webgl.api.make_context.call(null, canvas__24928)), webgl.core.init_scene, canvas__24928)
};
webgl.core.init = function init() {
  return window.onload = webgl.core.load
};
goog.exportSymbol("webgl.core.init", webgl.core.init);
goog.provide("webgl.vector");
goog.require("cljs.core");
webgl.vector.make = cljs.core.array;
webgl.vector._STAR__SINGLEQUOTE_ = cljs.core._STAR_;
webgl.vector._PLUS__SINGLEQUOTE_ = cljs.core._PLUS_;
webgl.vector._PLUS_ = function _PLUS_(l, r) {
  return webgl.vector.make.call(null, webgl.vector._PLUS__SINGLEQUOTE_.call(null, l[0], r[0]), webgl.vector._PLUS__SINGLEQUOTE_.call(null, l[1], r[1]), webgl.vector._PLUS__SINGLEQUOTE_.call(null, l[2], r[2]), webgl.vector._PLUS__SINGLEQUOTE_.call(null, l[3], r[3]))
};
webgl.vector.dot = function dot(l, r) {
  return webgl.vector._PLUS__SINGLEQUOTE_.call(null, webgl.vector._STAR__SINGLEQUOTE_.call(null, l[0], r[0]), webgl.vector._STAR__SINGLEQUOTE_.call(null, l[1], r[1]), webgl.vector._STAR__SINGLEQUOTE_.call(null, l[2], r[2]), webgl.vector._STAR__SINGLEQUOTE_.call(null, l[3], r[3]))
};
webgl.vector._STAR_ = webgl.vector.dot;
webgl.vector.length2 = function length2(v) {
  return webgl.vector.dot.call(null, v, v)
};
webgl.vector.length = function length(v) {
  return Math.sqrt(webgl.vector.length2.call(null, v))
};
